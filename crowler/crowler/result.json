[
{"title": ["React基本(css)"], "body": ["\n", "概要", "\n", "解説", "\n", "\n\n", "\n\n", "\n", "概要", "\n\n", "cssを以下のように記述することができます", "\n", "https://qiita.com/tomi_shinwatec/items/cdd319d8fce8bdb829d0", "\n\n", "\n// 謎の定義\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst mixStyles = function(){\n  var res = {};\n  for (var i = 0; i < arguments.length; ++i) {\n    if (arguments[i]) Object.assign(res, arguments[i]);\n  }\n  return res;\n}\n\n// スタイルを定義\nconst Styles = {\n  bgRed: {\n    backgroundColor: \"red\",\n  },\n  bgBlue: {\n    backgroundColor: \"blue\",\n  },\n  fontSize16: {\n    fontSize: \"16px\",\n  },\n  fontSize20: {\n    fontSize: \"20px\",\n  }\n}\n\n// スタイル適用\nclass StyleComponent extends React.Component {\n  render() {\n    return (\n      <div>\n        <p style={mixStyles(Styles.bgRed, Styles.fontSize16)}>背景：赤,文字サイズ：16</p>\n        <p style={mixStyles(Styles.bgRed, Styles.fontSize20)}>背景：赤,文字サイズ：20</p>\n      </div>\n    )\n  }\n}\n\nexport default ListComponent;\n\n\n", "\n\n", "\n", "解説", "\n\n", "\n", "謎の定義", "\n\n", "肝になっていそうだが面倒なのでパス", "\n\n", "\n", "スタイルの定義", "\n\n", "const", "にスタイルを格納する", "\n名前はなんでもよい", "\n\n", "const Style = {\n  bgRed: {\n    backgroundColor: \"red\",\n  },\n  bgBlue: {\n    backgroundColor: \"blue\",\n  },\n  fontSize16: {\n    fontSize: \"16px\",\n  },\n  fontSize20: {\n    fontSize: \"20px\",\n  }\n}\n", "\n\n", "\n", "スタイルを適用", "\n\n", "\nclass MyComponent extends React.Component {\n  render() {\n    return (\n      <div>\n        <p style={mixStyles(Style.bgRed, Style.fontSize16)}>背景：赤,文字サイズ：16</p>\n        <p style={mixStyles(Style.bgRed, Style.fontSize20)}>背景：赤,文字サイズ：20</p>\n      </div>\n    )\n  }\n}\n", "\n\n", "mixStyles", "という関数を使う", "\nあとは配列と同様に指定したデータを入れる", "\n"], "code": ["\n// 謎の定義\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst mixStyles = function(){\n  var res = {};\n  for (var i = 0; i < arguments.length; ++i) {\n    if (arguments[i]) Object.assign(res, arguments[i]);\n  }\n  return res;\n}\n\n// スタイルを定義\nconst Styles = {\n  bgRed: {\n    backgroundColor: \"red\",\n  },\n  bgBlue: {\n    backgroundColor: \"blue\",\n  },\n  fontSize16: {\n    fontSize: \"16px\",\n  },\n  fontSize20: {\n    fontSize: \"20px\",\n  }\n}\n\n// スタイル適用\nclass StyleComponent extends React.Component {\n  render() {\n    return (\n      <div>\n        <p style={mixStyles(Styles.bgRed, Styles.fontSize16)}>背景：赤,文字サイズ：16</p>\n        <p style={mixStyles(Styles.bgRed, Styles.fontSize20)}>背景：赤,文字サイズ：20</p>\n      </div>\n    )\n  }\n}\n\nexport default ListComponent;\n\n\n", "const Style = {\n  bgRed: {\n    backgroundColor: \"red\",\n  },\n  bgBlue: {\n    backgroundColor: \"blue\",\n  },\n  fontSize16: {\n    fontSize: \"16px\",\n  },\n  fontSize20: {\n    fontSize: \"20px\",\n  }\n}\n", "\nclass MyComponent extends React.Component {\n  render() {\n    return (\n      <div>\n        <p style={mixStyles(Style.bgRed, Style.fontSize16)}>背景：赤,文字サイズ：16</p>\n        <p style={mixStyles(Style.bgRed, Style.fontSize20)}>背景：赤,文字サイズ：20</p>\n      </div>\n    )\n  }\n}\n"]},
{"title": ["PowerShellで.NetのBigInteger型を使って巨大な整数を計算"], "body": ["\n", "\n", "環境", "\n\n", "\n", "下記環境で確認", "\n\n", "\n", "Windows7 PowerShell 3.0 (.Net Framework 4.0以降が必要)", "\n", "Windows10 PowerShell 5.1", "\n", "Windows10 PowerShell 6.0", "\n", "\n\n", "\n", "巨大な整数", "\n\n", "Windowsに付属している電卓では、当たり前だが計算で扱える桁数に制限がある。", "\n.Net Framework 4.0で追加されたBigIntegerをPowerShellで扱えるか確認した。", "\n\n", "\n", "例) 階乗", "\n\n", "\n", "100の階乗を計算するワンライナーを実行", "\n\n", "> @(1..100)|% -Begin{$fact=[bigint]::One} -Process {$fact*=[bigint]::Parse($_)}\n> $fact\n93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000\n", "\n\n", "とくに問題なく使えそうだ", "\n\n", "\n", "説明", "\n\n", "@(1..100)", "で階乗の値を指定する。パイプでforeachに渡して", "$fact", "をBigIntegerの1で初期化。(PowerShellで", "[bigint]", "型として使える)", "\nあとは乗算", "*=", "を階乗の回数だけ繰り返す。普通の数値型や文字列等からは", "Parse", "メソッドで変換してやる。", "\n\n", "\n", "注意点", "\n\n", "階乗の計算は昔からCPUを食う(実行時間がかかる)ことで知られている。大きな階乗を計算するとものすごく時間がかかるので注意。", "\n試しに100万の階乗を計算したら18分かかった。。。(Win10、Core i5-4570 CPU @3.20GHzのマシン)", "\nCPUの高負荷テストに使えるかも。", "\n\n", "> Measure-Command{@(1..1000000)|% -Begin{$fact=[bigint]::One} -Process {$fact*=[bigint]::Parse($_)}}\n\n\nDays              : 0\nHours             : 0\nMinutes           : 18\nSeconds           : 42\nMilliseconds      : 228\nTicks             : 11222287421\nTotalDays         : 0.0129887585891204\nTotalHours        : 0.311730206138889\nTotalMinutes      : 18.7038123683333\nTotalSeconds      : 1122.2287421\nTotalMilliseconds : 1122228.7421\n", "\n"], "code": ["> @(1..100)|% -Begin{$fact=[bigint]::One} -Process {$fact*=[bigint]::Parse($_)}\n> $fact\n93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000\n", "> Measure-Command{@(1..1000000)|% -Begin{$fact=[bigint]::One} -Process {$fact*=[bigint]::Parse($_)}}\n\n\nDays              : 0\nHours             : 0\nMinutes           : 18\nSeconds           : 42\nMilliseconds      : 228\nTicks             : 11222287421\nTotalDays         : 0.0129887585891204\nTotalHours        : 0.311730206138889\nTotalMinutes      : 18.7038123683333\nTotalSeconds      : 1122.2287421\nTotalMilliseconds : 1122228.7421\n"]},
{"title": ["Zabbix3.0をCentOS6.7にインストール"], "body": ["\n", "\n", "概要", "\n\n", "CentOS6.7にZabbix環境を構築する", "\n\n", "\n", "構成", "\n\n", "\n", "\n", "\n", "Software", "\n", "Version", "\n", "\n", "\n", "\n", "\n", "CentOS", "\n", "6.7", "\n", "\n", "\n", "Apache", "\n", "2.2.15", "\n", "\n", "\n", "PHP", "\n", "5.5", "\n", "\n", "\n", "MySQL", "\n", "5.1.73", "\n", "\n", "\n", "Zabbix", "\n", "3.0.22", "\n", "\n", "\n", "\n\n", "\n", "参考手順", "\n\n", "\n", "https://www.zabbix.com/documentation/3.0/manual/installation/install_from_packages", "\n", "https://doruby.jp/users/nakamatsu/entries/CentOS6%E7%92%B0%E5%A2%83%E3%81%ABZabbix%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%97%E3%81%A6%E3%81%BF%E3%81%9F", "\n", "https://usado.jp/spdsk/2017/11/02/post-2515/", "\n", "https://pochio.github.io/old_memo/oss/zabbix.html#php", "\n", "https://blog.ybbo.net/2014/01/22/%E3%80%90%E3%82%B7%E3%83%B3%E3%83%97%E3%83%AB%E3%80%91centos6%E3%81%ABphp5-5%E3%82%92yum%E3%81%A7%E7%B0%A1%E5%8D%98%E3%81%AB%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/", "\n", "\n\n", "\n", "手順", "\n\n", "\n", "Apache、MySQLをインストール", "\n", "\n\n", "# yum install -y httpd mysql-server\n", "\n\n", "\n", "Zabbixパッケージをダウンロード", "\n", "\n\n", "# rpm -ivh https://repo.zabbix.com/zabbix/3.0/rhel/6/x86_64/zabbix-release-3.0-1.el6.noarch.rpm\n# yum -y install zabbix-server-mysql zabbix-web-mysql zabbix-web-japanese zabbix-agent\n", "\n\n", "\n", "MySQLを起動", "\n", "\n\n", "# service mysqld start\n# chkconfig mysqld on\n", "\n\n", "\n", "MySQLにZabbix用データベースを作成", "\n", "\n\n", "# mysql -uroot\nmysql> create database zabbix character set utf8 collate utf8_bin;\nmysql> grant all privileges on zabbix.* to zabbix@localhost identified by 'zabbix';\nmysql> quit;\n", "\n\n", "\n", "初期データをインストール", "\n", "\n\n", "# zcat /usr/share/doc/zabbix-server-mysql-3.0.*/create.sql.gz | mysql -uzabbix -pzabbix zabbix\n", "\n\n", "\n", "バージョンを確認", "\n", "\n\n", "# rpm -q zabbix-server-mysql\n", "\n\n", "\n", "Zabbixのデータベース接続設定", "\n", "\n\n", "# vi /etc/zabbix/zabbix_server.conf\n", "\n\n", "\n", "/etc/zabbix/zabbix_server.conf", "\n", "DBHost=localhost         # ADD\nDBName=zabbix            # DEFAULT\nDBUser=zabbix            # DEFAULT\nDBPassword=zabbix        # ADD\n", "\n", "\n\n", "\n", "Zabbixサーバー起動、自動起動を設定", "\n", "\n\n", "# service zabbix-server start\n# chkconfig zabbix-server on\n", "\n\n", "\n", " httpd.confを設定", "\n", "\n\n", "# vi /etc/httpd/conf/httpd.conf\n", "\n\n", "\n", "/etc/httpd/conf/httpd.conf", "\n", "#ServerName www.example.com:80\nServerName localhost:80             # ADD\n", "\n", "\n\n", "\n", "PHP5.4以上が必要なので、必要なリポジトリをインストール", "\n", "\n\n", "# rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\n# rpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm\n", "\n\n", "\n", "PHP5.5および必要なエクステンションをインストール", "\n", "\n\n", "# yum install -y --enablerepo=remi-php55 php php-bcmath php-gd php-ldap php-mbstring php-xml php-mysqlnd\n", "\n\n", "\n", "Zabbix-web設定ファイルをhttpd/conf.dにコピー", "\n", "\n\n", "# cp /usr/share/doc/zabbix-web-3.0.*/httpd22-example.conf /etc/httpd/conf.d/zabbix.conf\n# vi /etc/httpd/conf.d/zabbix.conf\n", "\n\n", "\n", "/etc/httpd/conf.d/zabbix.conf", "\n", "        # php_value date.timezone Europe/Riga\n        php_value date.timezone Asia/Tokyo       # ADD\n", "\n", "\n\n", "\n", "Apacheを起動", "\n", "\n\n", "# service httpd start\n# chkconfig httpd on\n", "\n\n", "\n", "ZabbixWebUIにアクセス\n\n", "\n", "http://localhost/zabbix/", "\n", "\n", "\n", "ZabbixWebUIの初期設定\n\n", "\n", "Configure DB connection\n\n", "\n", "Password ", "zabbix", "\n", "\n", "\n", "\n", "\n", "\n", "ZabbixWebUIにログイン\n\n", "\n", "Username ", "Admin", "\n", "\n", "Password ", "zabbix", "\n", "\n", "\n", "\n", "\n"], "code": ["# yum install -y httpd mysql-server\n", "# rpm -ivh https://repo.zabbix.com/zabbix/3.0/rhel/6/x86_64/zabbix-release-3.0-1.el6.noarch.rpm\n# yum -y install zabbix-server-mysql zabbix-web-mysql zabbix-web-japanese zabbix-agent\n", "# service mysqld start\n# chkconfig mysqld on\n", "# mysql -uroot\nmysql> create database zabbix character set utf8 collate utf8_bin;\nmysql> grant all privileges on zabbix.* to zabbix@localhost identified by 'zabbix';\nmysql> quit;\n", "# zcat /usr/share/doc/zabbix-server-mysql-3.0.*/create.sql.gz | mysql -uzabbix -pzabbix zabbix\n", "# rpm -q zabbix-server-mysql\n", "# vi /etc/zabbix/zabbix_server.conf\n", "DBHost=localhost         # ADD\nDBName=zabbix            # DEFAULT\nDBUser=zabbix            # DEFAULT\nDBPassword=zabbix        # ADD\n", "# service zabbix-server start\n# chkconfig zabbix-server on\n", "# vi /etc/httpd/conf/httpd.conf\n", "#ServerName www.example.com:80\nServerName localhost:80             # ADD\n", "# rpm -ivh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\n# rpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm\n", "# yum install -y --enablerepo=remi-php55 php php-bcmath php-gd php-ldap php-mbstring php-xml php-mysqlnd\n", "# cp /usr/share/doc/zabbix-web-3.0.*/httpd22-example.conf /etc/httpd/conf.d/zabbix.conf\n# vi /etc/httpd/conf.d/zabbix.conf\n", "        # php_value date.timezone Europe/Riga\n        php_value date.timezone Asia/Tokyo       # ADD\n", "# service httpd start\n# chkconfig httpd on\n"]},
{"title": ["dplyr::filter()で複数の条件をうまいこと指定したい"], "body": ["\n", "\n", "はじめに", "\n\n", "みなさん、", "tidyverse使ってますか！？", "\n私はtidyverse信者なので、Rを起動したらまず", "library(tidyverse)", "を書いています。", "\n今日は", "tidyverse", "内の", "dplyr::filter()", "に関する小ネタです。", "\n\n", "\n", "dplyr::filter()とは？", "\n\n", "簡単に言うと、データフレーム内の条件に一致した行だけを抽出する関数です。", "\n百聞は一見にしかずということで、例を挙げてみます。", "\n\n", "library", "(", "tidyverse", ")", "\n", "data", "(", "\"iris\"", ")", "\n\n", "#データの確認 ------------------------------------------------------------------", "\n", "head", "(", "iris", ")", "\n  ", "Sepal.Length", " ", "Sepal.Width", " ", "Petal.Length", " ", "Petal.Width", " ", "Species", "\n", "1", "          ", "5.1", "         ", "3.5", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "2", "          ", "4.9", "         ", "3.0", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "3", "          ", "4.7", "         ", "3.2", "          ", "1.3", "         ", "0.2", "  ", "setosa", "\n", "4", "          ", "4.6", "         ", "3.1", "          ", "1.5", "         ", "0.2", "  ", "setosa", "\n", "5", "          ", "5.0", "         ", "3.6", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "6", "          ", "5.4", "         ", "3.9", "          ", "1.7", "         ", "0.4", "  ", "setosa", "\n\n", "summary", "(", "iris", "$", "Species", ")", "\n    ", "setosa", " ", "versicolor", "  ", "virginica", " \n        ", "50", "         ", "50", "         ", "50", " \n\n\n", "#dplyr::filter()を使って、Speciesがversicolorのものだけを抽出する。 ------------------------------------------------------------------", "\n", "dat", " ", "<-", " ", "iris", " ", "%>%", " \n  ", "filter", "(", "Species", " ", "==", " ", "'versicolor'", ")", "\n\n\n", "#抽出結果の確認", "\n", "head", "(", "dat", ")", "\n  ", "Sepal.Length", " ", "Sepal.Width", " ", "Petal.Length", " ", "Petal.Width", "    ", "Species", "\n", "1", "          ", "7.0", "         ", "3.2", "          ", "4.7", "         ", "1.4", " ", "versicolor", "\n", "2", "          ", "6.4", "         ", "3.2", "          ", "4.5", "         ", "1.5", " ", "versicolor", "\n", "3", "          ", "6.9", "         ", "3.1", "          ", "4.9", "         ", "1.5", " ", "versicolor", "\n", "4", "          ", "5.5", "         ", "2.3", "          ", "4.0", "         ", "1.3", " ", "versicolor", "\n", "5", "          ", "6.5", "         ", "2.8", "          ", "4.6", "         ", "1.5", " ", "versicolor", "\n", "6", "          ", "5.7", "         ", "2.8", "          ", "4.5", "         ", "1.3", " ", "versicolor", "\n\n", "summary", "(", "dat", "$", "Species", ")", "\n    ", "setosa", " ", "versicolor", "  ", "virginica", " \n         ", "0", "         ", "50", "          ", "0", " \n", "\n\n", "この様に、特定の列に対して、特定の値かどうか（又は、以上、以下など）を判定して抽出することが可能です。", "\n\n", "\n", "複数の条件を指定する", "\n\n", "例えば、Speciesがversicolor、もしくはsetosaの行を抽出することも可能です。", "\n\n", "#Speciesがversicolor、もしくはsetosaの行を抽出する", "\n", "dat", " ", "<-", " ", "iris", " ", "%>%", " \n  ", "filter", "(", "Species", " ", "==", " ", "'versicolor'", " ", "|", " ", "Species", " ", "==", " ", "'setosa'", ")", "\n\n", "#データの確認", "\n", "head", "(", "dat", ")", "\n  ", "Sepal.Length", " ", "Sepal.Width", " ", "Petal.Length", " ", "Petal.Width", " ", "Species", "\n", "1", "          ", "5.1", "         ", "3.5", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "2", "          ", "4.9", "         ", "3.0", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "3", "          ", "4.7", "         ", "3.2", "          ", "1.3", "         ", "0.2", "  ", "setosa", "\n", "4", "          ", "4.6", "         ", "3.1", "          ", "1.5", "         ", "0.2", "  ", "setosa", "\n", "5", "          ", "5.0", "         ", "3.6", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "6", "          ", "5.4", "         ", "3.9", "          ", "1.7", "         ", "0.4", "  ", "setosa", "\n\n", "summary", "(", "dat", "$", "Species", ")", "\n    ", "setosa", " ", "versicolor", "  ", "virginica", " \n        ", "50", "         ", "50", "          ", "0", " \n", "\n\n", "複数の条件を指定したい場合は、", "|", "（or）を使ってあげることで実現できます。", "\nirisのSpeciesは3つの値しかないのでこの書き方でも大きな問題ではないですが、値が複数存在する場合一個ずつ記述していくのは面倒ですし、変更時の手間が大きくなります。", "\nなので、それらをオブジェクトに代入しておいて、指定ができたら便利です。", "\n\n", "#指定したい値をオブジェクトに代入", "\n", "choice", " ", "<-", " ", "c", "(", "'setosa'", ",", " ", "'versicolor'", ")", "\n\n", "dat", " ", "<-", " ", "iris", " ", "%>%", " \n  ", "filter", "(", "Species", " ", "==", " ", "choice", ")", "\n\n", "#データの確認", "\n", "head", "(", "dat", ")", "\n  ", "Sepal.Length", " ", "Sepal.Width", " ", "Petal.Length", " ", "Petal.Width", " ", "Species", "\n", "1", "          ", "5.1", "         ", "3.5", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "2", "          ", "4.7", "         ", "3.2", "          ", "1.3", "         ", "0.2", "  ", "setosa", "\n", "3", "          ", "5.0", "         ", "3.6", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "4", "          ", "4.6", "         ", "3.4", "          ", "1.4", "         ", "0.3", "  ", "setosa", "\n", "5", "          ", "4.4", "         ", "2.9", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "6", "          ", "5.4", "         ", "3.7", "          ", "1.5", "         ", "0.2", "  ", "setosa", "\n", ">", " \n\n", "summary", "(", "dat", "$", "Species", ")", "\n    ", "setosa", " ", "versicolor", "  ", "virginica", " \n        ", "25", "         ", "25", "          ", "0", "  ", "#うまくいっていない", "\n", "\n\n", "上記の方法だともともと50行ずつあったデータが、半分の25個ずつになってしまっています。", "\n\n", "\n", "複数の条件をうまいこと指定したい", "\n\n", "あるオブジェクト内のいずれかに一致する行のみを抽出する際は、", "%in%", "を使うと実現でき、かつ可読性が高くなります。", "\n\n", "#指定したい値をオブジェクトに代入", "\n", "choice", " ", "<-", " ", "c", "(", "'setosa'", ",", " ", "'versicolor'", ")", "\n\n", "dat", " ", "<-", " ", "iris", " ", "%>%", " \n  ", "filter", "(", "Species", " ", "%in%", " ", "choice", ")", "\n\n\n", "#データの確認", "\n", "head", "(", "dat", ")", "\n  ", "Sepal.Length", " ", "Sepal.Width", " ", "Petal.Length", " ", "Petal.Width", " ", "Species", "\n", "1", "          ", "5.1", "         ", "3.5", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "2", "          ", "4.9", "         ", "3.0", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "3", "          ", "4.7", "         ", "3.2", "          ", "1.3", "         ", "0.2", "  ", "setosa", "\n", "4", "          ", "4.6", "         ", "3.1", "          ", "1.5", "         ", "0.2", "  ", "setosa", "\n", "5", "          ", "5.0", "         ", "3.6", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "6", "          ", "5.4", "         ", "3.9", "          ", "1.7", "         ", "0.4", "  ", "setosa", "\n\n", "summary", "(", "dat", "$", "Species", ")", "\n    ", "setosa", " ", "versicolor", "  ", "virginica", " \n        ", "50", "         ", "50", "          ", "0", "   ", "#　うまくいった！", "\n", "\n\n", "\n", "%in%とは？", "\n\n", "base::match()", "をより直感的に記述したもののようです。", "\n", "match", "なので、例えば", "'setosa' %in% choice", "とすると、", "TRUE", "を返してくれます。", "\n\n", "というわけで今日は以上でした。ばいばーい！", "\n"], "code": ["library", "(", "tidyverse", ")", "\n", "data", "(", "\"iris\"", ")", "\n\n", "#データの確認 ------------------------------------------------------------------", "\n", "head", "(", "iris", ")", "\n  ", "Sepal.Length", " ", "Sepal.Width", " ", "Petal.Length", " ", "Petal.Width", " ", "Species", "\n", "1", "          ", "5.1", "         ", "3.5", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "2", "          ", "4.9", "         ", "3.0", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "3", "          ", "4.7", "         ", "3.2", "          ", "1.3", "         ", "0.2", "  ", "setosa", "\n", "4", "          ", "4.6", "         ", "3.1", "          ", "1.5", "         ", "0.2", "  ", "setosa", "\n", "5", "          ", "5.0", "         ", "3.6", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "6", "          ", "5.4", "         ", "3.9", "          ", "1.7", "         ", "0.4", "  ", "setosa", "\n\n", "summary", "(", "iris", "$", "Species", ")", "\n    ", "setosa", " ", "versicolor", "  ", "virginica", " \n        ", "50", "         ", "50", "         ", "50", " \n\n\n", "#dplyr::filter()を使って、Speciesがversicolorのものだけを抽出する。 ------------------------------------------------------------------", "\n", "dat", " ", "<-", " ", "iris", " ", "%>%", " \n  ", "filter", "(", "Species", " ", "==", " ", "'versicolor'", ")", "\n\n\n", "#抽出結果の確認", "\n", "head", "(", "dat", ")", "\n  ", "Sepal.Length", " ", "Sepal.Width", " ", "Petal.Length", " ", "Petal.Width", "    ", "Species", "\n", "1", "          ", "7.0", "         ", "3.2", "          ", "4.7", "         ", "1.4", " ", "versicolor", "\n", "2", "          ", "6.4", "         ", "3.2", "          ", "4.5", "         ", "1.5", " ", "versicolor", "\n", "3", "          ", "6.9", "         ", "3.1", "          ", "4.9", "         ", "1.5", " ", "versicolor", "\n", "4", "          ", "5.5", "         ", "2.3", "          ", "4.0", "         ", "1.3", " ", "versicolor", "\n", "5", "          ", "6.5", "         ", "2.8", "          ", "4.6", "         ", "1.5", " ", "versicolor", "\n", "6", "          ", "5.7", "         ", "2.8", "          ", "4.5", "         ", "1.3", " ", "versicolor", "\n\n", "summary", "(", "dat", "$", "Species", ")", "\n    ", "setosa", " ", "versicolor", "  ", "virginica", " \n         ", "0", "         ", "50", "          ", "0", " \n", "#Speciesがversicolor、もしくはsetosaの行を抽出する", "\n", "dat", " ", "<-", " ", "iris", " ", "%>%", " \n  ", "filter", "(", "Species", " ", "==", " ", "'versicolor'", " ", "|", " ", "Species", " ", "==", " ", "'setosa'", ")", "\n\n", "#データの確認", "\n", "head", "(", "dat", ")", "\n  ", "Sepal.Length", " ", "Sepal.Width", " ", "Petal.Length", " ", "Petal.Width", " ", "Species", "\n", "1", "          ", "5.1", "         ", "3.5", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "2", "          ", "4.9", "         ", "3.0", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "3", "          ", "4.7", "         ", "3.2", "          ", "1.3", "         ", "0.2", "  ", "setosa", "\n", "4", "          ", "4.6", "         ", "3.1", "          ", "1.5", "         ", "0.2", "  ", "setosa", "\n", "5", "          ", "5.0", "         ", "3.6", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "6", "          ", "5.4", "         ", "3.9", "          ", "1.7", "         ", "0.4", "  ", "setosa", "\n\n", "summary", "(", "dat", "$", "Species", ")", "\n    ", "setosa", " ", "versicolor", "  ", "virginica", " \n        ", "50", "         ", "50", "          ", "0", " \n", "#指定したい値をオブジェクトに代入", "\n", "choice", " ", "<-", " ", "c", "(", "'setosa'", ",", " ", "'versicolor'", ")", "\n\n", "dat", " ", "<-", " ", "iris", " ", "%>%", " \n  ", "filter", "(", "Species", " ", "==", " ", "choice", ")", "\n\n", "#データの確認", "\n", "head", "(", "dat", ")", "\n  ", "Sepal.Length", " ", "Sepal.Width", " ", "Petal.Length", " ", "Petal.Width", " ", "Species", "\n", "1", "          ", "5.1", "         ", "3.5", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "2", "          ", "4.7", "         ", "3.2", "          ", "1.3", "         ", "0.2", "  ", "setosa", "\n", "3", "          ", "5.0", "         ", "3.6", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "4", "          ", "4.6", "         ", "3.4", "          ", "1.4", "         ", "0.3", "  ", "setosa", "\n", "5", "          ", "4.4", "         ", "2.9", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "6", "          ", "5.4", "         ", "3.7", "          ", "1.5", "         ", "0.2", "  ", "setosa", "\n", ">", " \n\n", "summary", "(", "dat", "$", "Species", ")", "\n    ", "setosa", " ", "versicolor", "  ", "virginica", " \n        ", "25", "         ", "25", "          ", "0", "  ", "#うまくいっていない", "\n", "#指定したい値をオブジェクトに代入", "\n", "choice", " ", "<-", " ", "c", "(", "'setosa'", ",", " ", "'versicolor'", ")", "\n\n", "dat", " ", "<-", " ", "iris", " ", "%>%", " \n  ", "filter", "(", "Species", " ", "%in%", " ", "choice", ")", "\n\n\n", "#データの確認", "\n", "head", "(", "dat", ")", "\n  ", "Sepal.Length", " ", "Sepal.Width", " ", "Petal.Length", " ", "Petal.Width", " ", "Species", "\n", "1", "          ", "5.1", "         ", "3.5", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "2", "          ", "4.9", "         ", "3.0", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "3", "          ", "4.7", "         ", "3.2", "          ", "1.3", "         ", "0.2", "  ", "setosa", "\n", "4", "          ", "4.6", "         ", "3.1", "          ", "1.5", "         ", "0.2", "  ", "setosa", "\n", "5", "          ", "5.0", "         ", "3.6", "          ", "1.4", "         ", "0.2", "  ", "setosa", "\n", "6", "          ", "5.4", "         ", "3.9", "          ", "1.7", "         ", "0.4", "  ", "setosa", "\n\n", "summary", "(", "dat", "$", "Species", ")", "\n    ", "setosa", " ", "versicolor", "  ", "virginica", " \n        ", "50", "         ", "50", "          ", "0", "   ", "#　うまくいった！", "\n"]},
{"title": ["TensorFlowで画風変換を試してみた メモ"], "body": ["TensorFlowをPCに入れる機会があり、せっかくなので前々からやってみたかった画風変換をためしてみました。", "\n\n", "環境構築さえできれば、先人たちの知恵で気軽に画風変換を楽しめました。", "\n一番時間がかかったのが環境構築でした。", "\n\n", "\n", "環境", "\n\n", "Python 3.6.6", "\nTensorFlow 1.10.1", "\n\n", "今回 neuralart_tensorflow を利用させてもらいましたm(_ _)m", "\n手軽に試せるのでとても助かります。", "\n\n", "git clone https://github.com/ckmarkoh/neuralart_tensorflow.git\n", "\n\n", "\n", "訓練済み画像認識モデル", "\n\n", "READMEにもありますが、今回は訓練済みモデルを利用します。下記からDLできます。", "\n", "https://drive.google.com/file/d/0B8QJdgMvQDrVU2cyZjFKU1RrLUU/view", "\n\n", "\n", "Pyhon３ 用にちょっとコード修正", "\n\n", "print の記述を Pyhon３ 用に修正 line 138 あたり", "\n\n", "# print (sess.run(cost_total))\nprint (sess.run(cost_total))\n", "\n\n", "\n", "実行！", "\n\n", "ここまできたらあとはコマンドを叩くだけで実行されていきます！", "\n\n", " python main.py\n", "\n\n", "CPU環境なのですごく時間がかかりました。", "\n\n", "\n", "参考記事", "\n\n", "main.pyのコード内容がさっぱりだったのですが、下記記事に大変わかりやすくまとめてくださっていました！", "\n完全に理解するのは難しいですが大変勉強になりました。", "\n\n", "TensorFlowで画風変換を少し説明しつつ実装してみる", "\n"], "code": ["git clone https://github.com/ckmarkoh/neuralart_tensorflow.git\n", "# print (sess.run(cost_total))\nprint (sess.run(cost_total))\n", " python main.py\n"]},
{"title": ["Google Calendar APIの繰り返しイベント"], "body": ["\n", "\n", "取得できないイベントがある・・・？", "\n\n", "API Explorer", "で ", "timeMin", " と ", "timeMax", " を指定したのに、その期間内にあるイベントを取得できなかった。カレンダー上には確かに存在するのに・・・", "\n\n", "\n", "何が原因だった？", "\n\n", "取得したかったイベントが「繰り返しイベント」であることが原因だった。", "\nデフォルトの場合は、繰り返しイベントは取得されず、そのベースになったものしか取得されないようだ。", "\n\n", "例えば、9月18日に何かイベントを作成し、毎週繰り返すという設定にした場合→9月18日のイベントは取得できるが、9月25日以降のイベントは取得できない。", "\n\n", "\n", "対策", "\n\n", "パラメータに ", "singleEvents=true", " を加えた。", "\n\n", "これだけで6時間ハマった。つらい。", "\n"], "code": []},
{"title": ["Windows10にキャプチャツールのGreenshotをインストールする方法"], "body": ["\n", "\n", "インストーラをダウンロードする", "\n\n", "Greenshotのサイトでインストーラをダウンロードする。", "\n", "Vectorのサイトにもある", "が、インストール後に ", "You are not using the newest Greenshot version.", " って出て悲しい。", "\n", "\n\n", "\n", "インストーラでインストールする", "\n\n", "日本語はないので英語で頑張る。", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n\n", "\n", "既にインストールしたGreenshotがある場合は停止してからインストールする", "\n\n", "\n\n", "\n", "The hotkey(s) \"PrintScreen...", " 的な ", "Warning", " が出たらどうするかは自分で決める", "\n\n", "そのキーはOneDriveとかDropBoxとかがもう使ってるよということなので何を優先するかは自分で決める。", "\n", "My PrntScreen key no longer works with Greenshot.... why?", "\n", "windows 10 - Greenshot: The hotkey(s) \"PrintScreen, Alt + PrintScreen, Ctrl + PrintScreen, ...\" could not be registered - Super User", "\n"], "code": []},
{"title": ["ASP.NET CoreのResponseCacheAttributeはformタグが入っていると機能しない"], "body": ["３時間くらい延々とハマったのでメモ", "\n\n", "ResponseCacheAttributeを設定すると、その設定通りのレスポンスヘッダが設定されるが、出力するhtmlの中(Razorの中)にformタグがあるとCSRF対策が機能するため(要出典)、no-store no-cacheなレスポンスヘッダとなる。", "\n"], "code": []},
{"title": ["react-native-web, react-primitivesで擬似擬似クラスを実装する"], "body": ["\n", "\n", "はじめに", "\n\n", "react-primitives, react-native-webを実務で使う機会があったのですが、そこでwebにおいてweb特有の挙動を再現するのにかなり手こずる箇所がありました。", "\nそのひとつとして、擬似クラスの実装があります。cssに擬似クラスのプロパティを書くだけでwebでは動くのですが、nativeにはhover等の動作がありません。", "\nこれを実現する", "擬似", "擬似クラスの実装が、まだまだ実務レベルで使われるケースが少ないのかなかなか知見が貯まっていないようなので、一例として共有させていただきます。", "\nそもそも、react-primitivesがなになのか分からない！といった方は以下の記事をご参照ください！", "\n", "react-primitivesってなにやってるんですか？！ 〜ソースコードから要点を解説〜", "\n\n", "\n", "example", "\n\n", "こちらを紹介するにあたってのexampleは以下のレポジトリとなっていますので、手元で動かしたい方等はご参照ください。", "\n", "https://github.com/Shagamii/pseudo-class-example", "\n\n", "\n", "実装", "\n\n", "\n", "最初に参考にした記事", "\n\n", "最初に擬似クラスを実装するにあたって参考にした記事は以下の記事です。", "\n", "https://github.com/necolas/react-native-web/issues/20", "\nこのなかでは、二つの方法が紹介されています。", "\n- ", "https://github.com/necolas/react-native-web/issues/205#issuecomment-297030147", "\n- ", "https://github.com/necolas/react-native-web/issues/205#issuecomment-311947750", "\n\n", "前者では、擬似クラスに該当するトリガーでstateを更新し、そのstateを元にスタイルを切り替えています。", "\n後者では、擬似クラスに該当するトリガーでstyleを直接書き換えています。", "\n\n", "ここで僕は前者の方法を採用しました。", "\n理由としては、後者の方法では複数の擬似クラスが作用した際にstyleの順番を変更できないためオーバーライドの順番を自由に決定できないことや、一つの擬似クラスコンポーネントに対し１つのstyleしか指定できないため変更できるstyleが一つの要素のみになってしまいます。", "\nまた、以下のようなstyle内で擬似クラスのプロパティによってスタイルを決定するインターフェイスで利用できるようにすることでよりCSSの擬似クラスに近い使用感を生み出すことができます。", "\n\n", "\n", "インターフェイス", "\n\n", "コンポーネントを使用する際の主なインターフェイスとしては次のようなものになりました。", "\n\n", "\n", "擬似クラスを付与できるコンポーネントを独立させるAccessibleComponentを作る", "\n", "AccessibleComponentのrenderPropsパターンで擬似クラスを付与させたいコンポーネント(ここではButtonPresenter)を子コンポーネントとして定義し、擬似クラス要素等を渡す", "\n", "\n\n", "https://github.com/Shagamii/pseudo-class-example/blob/master/src/Button.js", "\n\n", "// 擬似クラスを付与させたいコンポーネント", "\n", "export", " ", "const", " ", "ButtonPresenter", " ", "=", " ", "({", "\n  ", "children", ",", "\n  ", "pseudo", ":", " ", "{", " ", "hover", ",", " ", "active", ",", " ", "focus", ",", " ", "disabled", " ", "}", " ", "=", " ", "{},", "\n  ", "accessibilityRole", ",", "\n  ", "style", ",", "\n  ", "...", "rest", "\n", "})", " ", "=>", " ", "(", "\n  ", "<", "Text", ">", "\n    ", "<", "View", "\n        ", "style", "=", "{[", "\n          ", "styles", ".", "button", ",", "\n        ", "// CSSに近い記述を可能に", "\n          ", "hover", " ", "&&", " ", "styles", ".", "hoverButton", ",", "\n          ", "focus", " ", "&&", " ", "styles", ".", "focusButton", ",", "\n          ", "focus", " ", "&&", " ", "{", "\n            ", "outline", ":", " ", "\"none\"", "\n          ", "},", "\n          ", "active", " ", "&&", " ", "styles", ".", "activeButton", ",", "\n          ", "style", "\n        ", "]}", "\n        ", "accessibilityRole", "=", "{", "accessibilityRole", "}", "\n        ", "{...", "rest", "}", "\n    ", ">", "\n      ", "<", "Text", "\n        ", "style", "=", "{[", "\n          ", "(", "hover", " ", "||", " ", "focus", ")", " ", "&&", " ", "styles", ".", "hoverText", ",", "\n        ", "]}", "\n      ", ">", "\n        ", "{", " ", "children", " ", "}", "\n      ", "<", "/Text", ">\n", "    ", "<", "/View", ">\n", "  ", "<", "/Text", ">\n", ")", "\n\n", "const", " ", "Button", " ", "=", " ", "({", "\n  ", "disabled", ",", "\n  ", "...", "rest", "\n", "})", " ", "=>", " ", "(", "\n  ", "<", "AccessibleComponent", "\n    ", "render", "=", "{(", "data", ")", " ", "=>", " ", "(", "\n      ", "<", "ButtonPresenter", " ", "{...", "data", "}", " ", "/", ">\n", "    ", ")}", "\n    ", "accessibilityRole", "=", "\"button\"", "\n    ", "disabled", "=", "{", "disabled", "}", "\n    ", "{...", "rest", "}", "\n  ", "/", ">\n", ");", "\n\n", "export", " ", "default", " ", "Button", ";", "\n", "\n\n", "上のインターフェイスでまだ説明していないaccessibilityRoleというプロパティがあると思いますが、これはhtmlにおいてのh1, h2, buttonタグなどの意味・役割を明示的に持つ要素を生成できるプロパティです。ここでは主にfocusを実装するために使われおり、その説明は後述します。", "\n", "Accessibility", "\n\n", "\n", "擬似クラスコンポーネントの実装", "\n\n", "実装は以下のソースコードのようになっており、stateで管理している擬似クラスの状態をrenderPropsに渡しており、その状態は各トリガーで変更しているのがわかります。", "\nここからそれぞれの擬似クラスのstateを変更するトリガーは以下のようになっています。", "\n\n", "\n", "\n", "\n", "擬似クラス名", "\n", "trueにするトリガー", "\n", "falseにするトリガー", "\n", "\n", "\n", "\n", "\n", "hover", "\n", "onMouseEnter", "\n", "onMouseLeave", "\n", "\n", "\n", "active", "\n", "onPressIn", "\n", "onPressOut", "\n", "\n", "\n", "focus", "\n", "onFocus", "\n", "onBlur", "\n", "\n", "\n", "\n\n", "この中で多少ややこしくなっているfocusの処理について解説しておきます。", "\n\n", "\n", "focus", "\n\n", "focusではトリガーはonFocusとonBlurで制御することができ非常に用意に見えますが、それぞれを発火することができる要素を作る必要があります。ここで役に立つのが先ほど紹介したaccessibilityRoleのプロパティです。", "\nこれを用いて、それらを発火することのできるaccessibilityRoleを指定し解決しています。", "\nただaccessibilityRoleが指定されない場合も存在します。そのためにrenderPropsに渡すchildrenに対してaccessibilityRoleをボタンとして見えないViewコンポーネントを仕込んで解決しています。", "\n\n", "また、focus状態でEnterを押してonPressを発火させるために、onKeyDownでkeyを取得してEnterの場合に発火させています。", "\n（onPressをaccessibilityRoleをもつ要素に渡せば行けるかなと思ったけど発火しなかった、、、）", "\n\n", "https://github.com/Shagamii/pseudo-class-example/blob/master/src/AccessibleComponent.js", "\n\n", "\n", "AccessibilityComponent.js", "\n", "import", " ", "React", ",", " ", "{", " ", "Component", " ", "}", " ", "from", " ", "\"react\"", ";", "\n", "import", " ", "{", " ", "Touchable", ",", " ", "Text", " ", "}", " ", "from", " ", "\"react-primitives\"", ";", "\n\n", "const", " ", "triggerableAccessibilityRole", " ", "=", " ", "[", "\n  ", "\"link\"", ",", "\n  ", "\"button\"", "\n", "]", "\n\n", "class", " ", "AccessibleComponent", " ", "extends", " ", "Component", " ", "{", "\n\n  ", "state", " ", "=", " ", "{", "\n    ", "focus", ":", " ", "false", ",", "\n    ", "active", ":", " ", "false", ",", "\n    ", "hover", ":", " ", "false", "\n  ", "}", "\n\n  ", "onPressIn", " ", "=", " ", "()", " ", "=>", " ", "{", "\n    ", "this", ".", "setState", "({", "\n      ", "active", ":", " ", "true", ",", "\n    ", "});", "\n\n    ", "const", " ", "{", " ", "onPressIn", " ", "}", " ", "=", " ", "this", ".", "props", ";", "\n    ", "if", " ", "(", "onPressIn", ")", " ", "{", "\n      ", "onPressIn", "();", "\n    ", "}", "\n  ", "};", "\n\n  ", "onKeyDown", " ", "=", " ", "(", "e", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", " ", "key", " ", "}", " ", "=", " ", "e", "\n    ", "const", " ", "{", " ", "onPress", ",", " ", "onKeyDown", " ", "}", " ", "=", " ", "this", ".", "props", ";", "\n    ", "if", " ", "(", "key", " ", "===", " ", "\"Enter\"", " ", "&&", " ", "onPress", ")", " ", "{", "\n      ", "onPress", "();", "\n    ", "}", "\n\n    ", "if", " ", "(", "onKeyDown", ")", " ", "{", "\n      ", "onKeyDown", "();", "\n    ", "}", "\n  ", "};", "\n\n  ", "onMouseLeave", " ", "=", " ", "()", " ", "=>", " ", "{", "\n    ", "this", ".", "setState", "({", "\n      ", "hover", ":", " ", "false", "\n    ", "});", "\n\n    ", "const", " ", "{", " ", "onMouseLeave", " ", "}", " ", "=", " ", "this", ".", "props", ";", "\n    ", "if", " ", "(", "onMouseLeave", ")", " ", "{", "\n      ", "onMouseLeave", "();", "\n    ", "}", "\n  ", "};", "\n\n  ", "onFocus", " ", "=", " ", "()", " ", "=>", " ", "{", "\n    ", "this", ".", "setState", "({", " ", "focus", ":", " ", "true", " ", "});", "\n\n    ", "const", " ", "{", " ", "onFocus", " ", "}", " ", "=", " ", "this", ".", "props", ";", "\n    ", "if", " ", "(", "onFocus", ")", " ", "{", "\n      ", "onFocus", "();", "\n    ", "}", "\n  ", "};", "\n\n  ", "onBlur", " ", "=", " ", "()", " ", "=>", " ", "{", "\n    ", "this", ".", "setState", "({", " ", "focus", ":", " ", "false", " ", "});", "\n\n    ", "const", " ", "{", " ", "onBlur", " ", "}", " ", "=", " ", "this", ".", "props", ";", "\n    ", "if", " ", "(", "onBlur", ")", " ", "{", "\n      ", "onBlur", "();", "\n    ", "}", "\n  ", "};", "\n\n  ", "onPressOut", " ", "=", " ", "()", " ", "=>", " ", "{", "\n    ", "this", ".", "setState", "({", "\n      ", "active", ":", " ", "false", ",", "\n    ", "});", "\n\n    ", "const", " ", "{", " ", "onPressOut", " ", "}", " ", "=", " ", "this", ".", "props", ";", "\n    ", "if", " ", "(", "onPressOut", ")", " ", "{", "\n      ", "onPressOut", "();", "\n    ", "}", "\n  ", "};", "\n\n  ", "onMouseEnter", " ", "=", " ", "()", " ", "=>", " ", "{", "\n    ", "this", ".", "setState", "({", "\n      ", "hover", ":", " ", "true", "\n    ", "});", "\n\n    ", "const", " ", "{", " ", "onMouseEnter", " ", "}", " ", "=", " ", "this", ".", "props", ";", "\n    ", "if", " ", "(", "onMouseEnter", ")", " ", "{", "\n      ", "onMouseEnter", "();", "\n    ", "}", "\n  ", "};", "\n\n  ", "renderPropsChildren", " ", "=", " ", "()", " ", "=>", " ", "{", "\n    ", "const", " ", "{", " ", "accessibilityRole", ",", " ", "inputProps", ",", " ", "children", " ", "}", " ", "=", " ", "this", ".", "props", ";", "\n    ", "return", " ", "(", "\n      ", "<", "React", ".", "Fragment", ">", "\n        ", "{", "\n          ", "(", "!", "accessibilityRole", " ", "||", " ", "!", "triggerableAccessibilityRole", ".", "includes", "(", "accessibilityRole", "))", " ", "&&", " ", "(", "\n          ", "<", "Text", "\n            ", "accessibilityRole", "=", "\"button\"", "\n            ", "style", "=", "{{", "\n              ", "width", ":", " ", "0", ",", "\n              ", "height", ":", " ", "0", ",", "\n              ", "position", ":", " ", "\"absolute\"", "\n            ", "}}", "\n            ", "onFocus", "=", "{", "this", ".", "onFocus", "}", "\n            ", "onKeyDown", "=", "{", "this", ".", "onKeyDown", "}", "\n            ", "onBlur", "=", "{", "this", ".", "onBlur", "}", "\n            ", "{...", "inputProps", "}", "\n          ", "/", ">\n", "        ", ")}", "\n        ", "{", "children", "}", "\n      ", "<", "/React.Fragment", ">\n", "    ", ");", "\n  ", "};", "\n\n  ", "render", "()", " ", "{", "\n    ", "const", " ", "{", "\n      ", "disabled", ",", "\n      ", "render", ",", "\n      ", "accessibilityRole", ",", "\n      ", "...", "rest", "\n    ", "}", " ", "=", " ", "this", ".", "props", ";", "\n    ", "const", " ", "{", " ", "focus", ",", " ", "hover", ",", " ", "active", " ", "}", " ", "=", " ", "this", ".", "state", ";", "\n    ", "const", " ", "pseudo", " ", "=", " ", "{", "\n      ", "focus", ",", "\n      ", "hover", ",", "\n      ", "active", ",", "\n      ", "disabled", "\n    ", "};", "\n\n    ", "const", " ", "renderData", " ", "=", " ", "{", "\n      ", "children", ":", " ", "this", ".", "renderPropsChildren", "(),", "\n      ", "onMouseEnter", ":", " ", "this", ".", "onMouseEnter", ",", "\n      ", "onMouseLeave", ":", " ", "this", ".", "onMouseLeave", ",", "\n      ", "onFocus", ":", " ", "this", ".", "onFocus", ",", "\n      ", "onKeyDown", ":", " ", "this", ".", "onKeyDown", ",", "\n      ", "onBlur", ":", " ", "this", ".", "onBlur", ",", "\n      ", "accessibilityRole", ",", "\n      ", "pseudo", "\n    ", "};", "\n   ", "return", " ", "(", "\n      ", "<", "Touchable", "\n        ", "onPressIn", "=", "{", "this", ".", "onPressIn", "}", "\n        ", "onPressOut", "=", "{", "this", ".", "onPressOut", "}", "\n        ", "disabled", "=", "{", "disabled", "}", "\n        ", "{...", "rest", "}", "\n      ", ">", "\n        ", "{", "render", "(", "renderData", ")}", "\n      ", "<", "/Touchable", ">\n", "    ", ");", "\n  ", "}", "\n", "}", "\n\n\n", "export", " ", "default", " ", "AccessibleComponent", ";", "\n", "\n", "\n\n", "\n", "その他注意すべき点", "\n\n", "注意すべき点として、必ずonMouseEnter等のトリガーを子コンポーネントで作用させたい要素に適切に渡す必要があると共に、renderDataプロパティで渡ってきているプロパティ以外にも、TouchableにおいてonPress, In, Outを発火させるためにrn-webでは、トリガーを発火させたい要素に渡すメソッドが存在しpropsにインジェクションされています。今回の場合、", "Buttonコンポーネント内では ", "{...rest}", " で展開", "させていますが、これを忘れないようにしましょう。", "\n内容としてはこのコンソールのプロパティです。", "\n", "\n\n", "※ここの部分の解釈を間違えている可能性があるので気になる方はこの辺を読んで解釈してください", "\n", "https://github.com/necolas/react-native-web/blob/9a1cade1f0b62068072ceb73f93b4b3cf259128c/packages/react-native-web/src/exports/Touchable/index.js#L61", "\n\n", "\n", "実際の挙動", "\n\n", "\n", "hover", "\n\n", "\n\n", "\n", "active", "\n\n", "\n\n", "\n", "focus", "\n\n", "\n\n", "\n", "native", "\n\n", "\n\n", "\n", "まとめ", "\n\n", "以上が今回の実装です。", "\nあくまで一例であり、これがベストプラクティスではないだろうなとは思っている部分もあるのでまた違ったものを共有していただいたり、レビュー等よろしくお願いします！", "\n"], "code": ["// 擬似クラスを付与させたいコンポーネント", "\n", "export", " ", "const", " ", "ButtonPresenter", " ", "=", " ", "({", "\n  ", "children", ",", "\n  ", "pseudo", ":", " ", "{", " ", "hover", ",", " ", "active", ",", " ", "focus", ",", " ", "disabled", " ", "}", " ", "=", " ", "{},", "\n  ", "accessibilityRole", ",", "\n  ", "style", ",", "\n  ", "...", "rest", "\n", "})", " ", "=>", " ", "(", "\n  ", "<", "Text", ">", "\n    ", "<", "View", "\n        ", "style", "=", "{[", "\n          ", "styles", ".", "button", ",", "\n        ", "// CSSに近い記述を可能に", "\n          ", "hover", " ", "&&", " ", "styles", ".", "hoverButton", ",", "\n          ", "focus", " ", "&&", " ", "styles", ".", "focusButton", ",", "\n          ", "focus", " ", "&&", " ", "{", "\n            ", "outline", ":", " ", "\"none\"", "\n          ", "},", "\n          ", "active", " ", "&&", " ", "styles", ".", "activeButton", ",", "\n          ", "style", "\n        ", "]}", "\n        ", "accessibilityRole", "=", "{", "accessibilityRole", "}", "\n        ", "{...", "rest", "}", "\n    ", ">", "\n      ", "<", "Text", "\n        ", "style", "=", "{[", "\n          ", "(", "hover", " ", "||", " ", "focus", ")", " ", "&&", " ", "styles", ".", "hoverText", ",", "\n        ", "]}", "\n      ", ">", "\n        ", "{", " ", "children", " ", "}", "\n      ", "<", "/Text", ">\n", "    ", "<", "/View", ">\n", "  ", "<", "/Text", ">\n", ")", "\n\n", "const", " ", "Button", " ", "=", " ", "({", "\n  ", "disabled", ",", "\n  ", "...", "rest", "\n", "})", " ", "=>", " ", "(", "\n  ", "<", "AccessibleComponent", "\n    ", "render", "=", "{(", "data", ")", " ", "=>", " ", "(", "\n      ", "<", "ButtonPresenter", " ", "{...", "data", "}", " ", "/", ">\n", "    ", ")}", "\n    ", "accessibilityRole", "=", "\"button\"", "\n    ", "disabled", "=", "{", "disabled", "}", "\n    ", "{...", "rest", "}", "\n  ", "/", ">\n", ");", "\n\n", "export", " ", "default", " ", "Button", ";", "\n", "import", " ", "React", ",", " ", "{", " ", "Component", " ", "}", " ", "from", " ", "\"react\"", ";", "\n", "import", " ", "{", " ", "Touchable", ",", " ", "Text", " ", "}", " ", "from", " ", "\"react-primitives\"", ";", "\n\n", "const", " ", "triggerableAccessibilityRole", " ", "=", " ", "[", "\n  ", "\"link\"", ",", "\n  ", "\"button\"", "\n", "]", "\n\n", "class", " ", "AccessibleComponent", " ", "extends", " ", "Component", " ", "{", "\n\n  ", "state", " ", "=", " ", "{", "\n    ", "focus", ":", " ", "false", ",", "\n    ", "active", ":", " ", "false", ",", "\n    ", "hover", ":", " ", "false", "\n  ", "}", "\n\n  ", "onPressIn", " ", "=", " ", "()", " ", "=>", " ", "{", "\n    ", "this", ".", "setState", "({", "\n      ", "active", ":", " ", "true", ",", "\n    ", "});", "\n\n    ", "const", " ", "{", " ", "onPressIn", " ", "}", " ", "=", " ", "this", ".", "props", ";", "\n    ", "if", " ", "(", "onPressIn", ")", " ", "{", "\n      ", "onPressIn", "();", "\n    ", "}", "\n  ", "};", "\n\n  ", "onKeyDown", " ", "=", " ", "(", "e", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", " ", "key", " ", "}", " ", "=", " ", "e", "\n    ", "const", " ", "{", " ", "onPress", ",", " ", "onKeyDown", " ", "}", " ", "=", " ", "this", ".", "props", ";", "\n    ", "if", " ", "(", "key", " ", "===", " ", "\"Enter\"", " ", "&&", " ", "onPress", ")", " ", "{", "\n      ", "onPress", "();", "\n    ", "}", "\n\n    ", "if", " ", "(", "onKeyDown", ")", " ", "{", "\n      ", "onKeyDown", "();", "\n    ", "}", "\n  ", "};", "\n\n  ", "onMouseLeave", " ", "=", " ", "()", " ", "=>", " ", "{", "\n    ", "this", ".", "setState", "({", "\n      ", "hover", ":", " ", "false", "\n    ", "});", "\n\n    ", "const", " ", "{", " ", "onMouseLeave", " ", "}", " ", "=", " ", "this", ".", "props", ";", "\n    ", "if", " ", "(", "onMouseLeave", ")", " ", "{", "\n      ", "onMouseLeave", "();", "\n    ", "}", "\n  ", "};", "\n\n  ", "onFocus", " ", "=", " ", "()", " ", "=>", " ", "{", "\n    ", "this", ".", "setState", "({", " ", "focus", ":", " ", "true", " ", "});", "\n\n    ", "const", " ", "{", " ", "onFocus", " ", "}", " ", "=", " ", "this", ".", "props", ";", "\n    ", "if", " ", "(", "onFocus", ")", " ", "{", "\n      ", "onFocus", "();", "\n    ", "}", "\n  ", "};", "\n\n  ", "onBlur", " ", "=", " ", "()", " ", "=>", " ", "{", "\n    ", "this", ".", "setState", "({", " ", "focus", ":", " ", "false", " ", "});", "\n\n    ", "const", " ", "{", " ", "onBlur", " ", "}", " ", "=", " ", "this", ".", "props", ";", "\n    ", "if", " ", "(", "onBlur", ")", " ", "{", "\n      ", "onBlur", "();", "\n    ", "}", "\n  ", "};", "\n\n  ", "onPressOut", " ", "=", " ", "()", " ", "=>", " ", "{", "\n    ", "this", ".", "setState", "({", "\n      ", "active", ":", " ", "false", ",", "\n    ", "});", "\n\n    ", "const", " ", "{", " ", "onPressOut", " ", "}", " ", "=", " ", "this", ".", "props", ";", "\n    ", "if", " ", "(", "onPressOut", ")", " ", "{", "\n      ", "onPressOut", "();", "\n    ", "}", "\n  ", "};", "\n\n  ", "onMouseEnter", " ", "=", " ", "()", " ", "=>", " ", "{", "\n    ", "this", ".", "setState", "({", "\n      ", "hover", ":", " ", "true", "\n    ", "});", "\n\n    ", "const", " ", "{", " ", "onMouseEnter", " ", "}", " ", "=", " ", "this", ".", "props", ";", "\n    ", "if", " ", "(", "onMouseEnter", ")", " ", "{", "\n      ", "onMouseEnter", "();", "\n    ", "}", "\n  ", "};", "\n\n  ", "renderPropsChildren", " ", "=", " ", "()", " ", "=>", " ", "{", "\n    ", "const", " ", "{", " ", "accessibilityRole", ",", " ", "inputProps", ",", " ", "children", " ", "}", " ", "=", " ", "this", ".", "props", ";", "\n    ", "return", " ", "(", "\n      ", "<", "React", ".", "Fragment", ">", "\n        ", "{", "\n          ", "(", "!", "accessibilityRole", " ", "||", " ", "!", "triggerableAccessibilityRole", ".", "includes", "(", "accessibilityRole", "))", " ", "&&", " ", "(", "\n          ", "<", "Text", "\n            ", "accessibilityRole", "=", "\"button\"", "\n            ", "style", "=", "{{", "\n              ", "width", ":", " ", "0", ",", "\n              ", "height", ":", " ", "0", ",", "\n              ", "position", ":", " ", "\"absolute\"", "\n            ", "}}", "\n            ", "onFocus", "=", "{", "this", ".", "onFocus", "}", "\n            ", "onKeyDown", "=", "{", "this", ".", "onKeyDown", "}", "\n            ", "onBlur", "=", "{", "this", ".", "onBlur", "}", "\n            ", "{...", "inputProps", "}", "\n          ", "/", ">\n", "        ", ")}", "\n        ", "{", "children", "}", "\n      ", "<", "/React.Fragment", ">\n", "    ", ");", "\n  ", "};", "\n\n  ", "render", "()", " ", "{", "\n    ", "const", " ", "{", "\n      ", "disabled", ",", "\n      ", "render", ",", "\n      ", "accessibilityRole", ",", "\n      ", "...", "rest", "\n    ", "}", " ", "=", " ", "this", ".", "props", ";", "\n    ", "const", " ", "{", " ", "focus", ",", " ", "hover", ",", " ", "active", " ", "}", " ", "=", " ", "this", ".", "state", ";", "\n    ", "const", " ", "pseudo", " ", "=", " ", "{", "\n      ", "focus", ",", "\n      ", "hover", ",", "\n      ", "active", ",", "\n      ", "disabled", "\n    ", "};", "\n\n    ", "const", " ", "renderData", " ", "=", " ", "{", "\n      ", "children", ":", " ", "this", ".", "renderPropsChildren", "(),", "\n      ", "onMouseEnter", ":", " ", "this", ".", "onMouseEnter", ",", "\n      ", "onMouseLeave", ":", " ", "this", ".", "onMouseLeave", ",", "\n      ", "onFocus", ":", " ", "this", ".", "onFocus", ",", "\n      ", "onKeyDown", ":", " ", "this", ".", "onKeyDown", ",", "\n      ", "onBlur", ":", " ", "this", ".", "onBlur", ",", "\n      ", "accessibilityRole", ",", "\n      ", "pseudo", "\n    ", "};", "\n   ", "return", " ", "(", "\n      ", "<", "Touchable", "\n        ", "onPressIn", "=", "{", "this", ".", "onPressIn", "}", "\n        ", "onPressOut", "=", "{", "this", ".", "onPressOut", "}", "\n        ", "disabled", "=", "{", "disabled", "}", "\n        ", "{...", "rest", "}", "\n      ", ">", "\n        ", "{", "render", "(", "renderData", ")}", "\n      ", "<", "/Touchable", ">\n", "    ", ");", "\n  ", "}", "\n", "}", "\n\n\n", "export", " ", "default", " ", "AccessibleComponent", ";", "\n"]},
{"title": ["AWS SNS APNSの証明書の有効期限を確認する方法"], "body": ["\n", "\n", "エラー表示", "\n\n", "有効期限が切れていると下記のようなエラーがでます。", "\n\n", "Platform application is disabled\n", "\n\n", "\n", "リファレンス", "\n\n", "https://docs.aws.amazon.com/sns/latest/api/API_GetPlatformApplicationAttributes.html", "\n", "https://docs.aws.amazon.com/cli/latest/reference/sns/get-platform-application-attributes.html", "\n\n", "\n", "aws cli で実行してみる", "\n\n", "$ aws sns get-platform-application-attributes --platform-application-arn {確認したいSNSのarn}\n", "\n\n", "$ aws sns get-platform-application-attributes --platform-application-arn arn:aws:sns:ap-northeast-1:0123456789:app/APNS/hogehoge\n{\n    \"Attributes\": {\n        \"SuccessFeedbackSampleRate\": \"100\",\n        \"EventDeliveryFailure\": \"arn:aws:sns:ap-northeast-1:0123456789:hogehoge-disabled\",\n        \"SuccessFeedbackRoleArn\": \"arn:aws:iam::0123456789:role/SNSSuccessFeedback\",\n        \"Enabled\": \"false\",\n        \"AppleCertificateExpirationDate\": \"2017-12-01T00:21:01Z\",\n        \"FailureFeedbackRoleArn\": \"arn:aws:iam::0123456789:role/SNSFailureFeedback\",\n        \"EventEndpointUpdated\": \"arn:aws:sns:ap-northeast-1:0123456789:hogehoge-disabled\"\n    }\n}\n", "\n\n", "AppleCertificateExpirationDate", " というキーが有効期限ですね", "\n"], "code": ["Platform application is disabled\n", "$ aws sns get-platform-application-attributes --platform-application-arn {確認したいSNSのarn}\n", "$ aws sns get-platform-application-attributes --platform-application-arn arn:aws:sns:ap-northeast-1:0123456789:app/APNS/hogehoge\n{\n    \"Attributes\": {\n        \"SuccessFeedbackSampleRate\": \"100\",\n        \"EventDeliveryFailure\": \"arn:aws:sns:ap-northeast-1:0123456789:hogehoge-disabled\",\n        \"SuccessFeedbackRoleArn\": \"arn:aws:iam::0123456789:role/SNSSuccessFeedback\",\n        \"Enabled\": \"false\",\n        \"AppleCertificateExpirationDate\": \"2017-12-01T00:21:01Z\",\n        \"FailureFeedbackRoleArn\": \"arn:aws:iam::0123456789:role/SNSFailureFeedback\",\n        \"EventEndpointUpdated\": \"arn:aws:sns:ap-northeast-1:0123456789:hogehoge-disabled\"\n    }\n}\n"]},
{"title": ["Go初学者が学んだことまとめ〜その２〜"], "body": ["\n", "\n", "はじめに", "\n\n", "こちらの続きです。", "\n", "Go初学者が学んだことまとめ〜その１〜", "\n\n", "今回は参照型についてです。", "\n\n", "\n", "参照型", "\n\n", "\n", "スライス", "\n\n", "\n", "定義", "\n\n", "可変長配列を表現する型。", "\n下記のように定義できる。", "\n\n", "var", " ", "s", " ", "[]", "int", "\n", "\n\n", "s", " ", ":=", " ", "make", "([]", "int", ",", " ", "5", ")", " ", "//[0, 0, 0, 0, 0]", "\n", "\n\n", "s", " ", ":=", " ", "[]", "int", "{", "1", ",", " ", "2", ",", " ", "3", "}", " ", "//[1, 2, 3]", "\n", "\n\n", "\n", "要素数と容量", "\n\n", "スライスには要素数と容量がある。", "\n要素数はlen,容量はcapで取得できる。", "\n\n", "//makeの第2引数が要素数、第３引数が容量", "\n", "s", " ", ":=", " ", "make", "([]", "int", ",", " ", "5", ",", " ", "10", ")", "\n", "fmt", ".", "Println", "(", "len", "(", "s", "))", " ", "//5", "\n", "fmt", ".", "Println", "(", "cap", "(", "s", "))", " ", "//10", "\n", "\n\n", "容量とは、メモリ上に確保する領域のこと。", "\n要素数を拡張していく際に、新たな領域の確保が不要になるというメリットがある。", "\n\n", "\n", "append", "\n\n", "配列の拡張ができる。", "\n\n", "s", " ", ":=", " ", "[]", "int", "{", "1", ",", " ", "2", ",", " ", "3", "}", " \n", "s", " ", "=", " ", "append", "(", "s", ",", " ", "4", ")", " ", "// s == [1, 2, 3, 4]", "\n", "s", " ", "=", " ", "append", "(", "s", ",", " ", "5", ",", " ", "6", ",", " ", "7", ")", " ", "// s == [1, 2, 3, 4, 5, 6, 7]", "\n", "\n\n", "拡張される容量は、要素数と同じではない。", "\nランタイムが自動で拡張している。", "\nどの程度拡張されるかは、Goのランタイムに依存する。", "\n\n", "s", " ", ":=", " ", "[]", "int", "{", "1", ",", " ", "2", ",", " ", "3", "}", "\n", "fmt", ".", "Println", "(", "cap", "(", "s", "))", " ", "//3", "\n", "s", " ", "=", " ", "append", "(", "s", ",", " ", "4", ")", "\n", "fmt", ".", "Println", "(", "cap", "(", "s", "))", " ", "//6", "\n", "s", " ", "=", " ", "append", "(", "s", ",", " ", "5", ",", " ", "6", ",", " ", "7", ")", "\n", "fmt", ".", "Println", "(", "cap", "(", "s", "))", " ", "//12", "\n", "\n\n", "appendした時は、自動拡張するかどうかわからないということになる。", "\nつまりこういうこと。", "\n\n", "s1", " ", ":=", " ", "append", "(", "s0", ",", " ", "x", ")", " ", "//s0とs1が同じメモリ領域であるかは不明", "\n", "\n\n", "なので、自動拡張の有無を意識しないといけないコードは基本NG。", "\n\n", "\n", "簡易スライス式", "\n\n", "配列やスライスから、新たなスライスを生成する。", "\nインデックスの範囲を[m:n]の形式で指定する。", "\n\n", "a", " ", ":=", " ", "[", "5", "]", "int", "{", "1", ",", " ", "2", ",", " ", "3", " ", ",", "4", ",", " ", "5", "}", "\n", "s", " ", ":=", " ", "a", "[", "0", ":", "2", "]", " ", "//s == [1, 2] sは[]int型", "\n", "\n\n", "\n", "完全スライス式", "\n\n", "3つのパラメータを取る記法。", "\n\n", "a", "[", "low", ":", "high", ":", "max", "]", " ", "//0 <= low <= high <= max <= cap(a) という関係を満たす必要がある", "\n", "\n\n", "maxという値で容量をコントロールできる。", "\n\n", "a", " ", ":=", " ", "[", "10", "]", "int", "{", "1", ",", " ", "2", ",", " ", "3", " ", ",", "4", ",", " ", "5", ",", " ", "6", ",", " ", "7", ",", " ", "8", ",", " ", "9", ",", " ", "10", "}", "\n", "s1", " ", ":=", " ", "a", "[", "2", ":", "4", "]", "\n", "fmt", ".", "Println", "(", "cap", "(", "s1", "))", " ", "// 8 //len(a)-low が容量になる", "\n\n", "s2", " ", ":=", " ", "a", "[", "2", ":", "4", ":", "4", "]", "\n", "fmt", ".", "Println", "(", "cap", "(", "s2", "))", " ", "// 2 //max-low が容量になる", "\n\n", "s3", " ", ":=", " ", "a", "[", "2", ":", "4", ":", "6", "]", "\n", "fmt", ".", "Println", "(", "cap", "(", "s3", "))", " ", "// 4 //max-low が容量になる", "\n", "\n\n", "「容量」という概念が非常にややこしいので注意。", "\n\n", "\n", "値渡しと参照渡し", "\n\n", "スライスは「参照型」であるので、関数の引数は「参照渡し」になる。", "\nそれに対して配列は「値渡し」になる。", "\n下記は動作の違いを示したもの。", "\n\n", "\n", "Go", "\n", "func", " ", "powArray", "(", "a", " ", "[", "3", "]", "int", ")", " ", "{", "\n    ", "for", " ", "i", ",", " ", "v", " ", ":=", " ", "range", " ", "a", " ", "{", "\n        ", "a", "[", "i", "]", " ", "=", " ", "v", " ", "*", " ", "v", "\n    ", "}", "\n", "}", "\n\n", "func", " ", "powSlice", "(", "s", " ", "[]", "int", ")", " ", "{", "\n    ", "for", " ", "i", ",", " ", "v", " ", ":=", " ", "range", " ", "s", " ", "{", "\n        ", "s", "[", "i", "]", " ", "=", " ", "v", " ", "*", " ", "v", "\n    ", "}", "\n", "}", "\n\n", "func", " ", "main", "()", " ", "{", "\n    ", "a", " ", ":=", " ", "[", "3", "]", "int", "{", "1", ",", " ", "2", ",", " ", "3", "}", " \n    ", "powArray", "(", "a", ")", " ", "//配列は値渡し。コピーされたものが関数に渡るのでaは変更されない。", "\n    ", "fmt", ".", "Println", "(", "a", ")", " ", "//[1, 2, 3]", "\n\n    ", "s", " ", ":=", " ", "[]", "int", "{", "1", ",", " ", "2", ",", " ", "3", "}", "\n    ", "powSlice", "(", "s", ")", " ", "//スライスは参照渡し。関数はsと同一のメモリ領域を使用するためsは変更される。", "\n    ", "fmt", ".", "Println", "(", "s", ")", " ", "//[1, 4, 9]", "\n", "}", "\n", "\n", "\n\n", "ちなみに、JavaScript(TypeScript)の配列は参照渡し。", "\nプリミティブ型(number,string,boolean)は値渡し、それ以外は参照渡しになる。", "\n\n", "\n", "TypeScript", "\n", "function", " ", "pow", "(", "a", ":", " ", "number", "[]):", " ", "void", " ", "{", "\n    ", "for", "(", "let", " ", "i", " ", "=", " ", "0", ";", " ", "i", " ", "<", " ", "a", ".", "length", ";", " ", "i", "++", ")", " ", "{", "\n        ", "a", "[", "i", "]", " ", "=", " ", "a", "[", "i", "]", " ", "*", " ", "a", "[", "i", "];", "\n    ", "}", "\n", "}", "\n", "const", " ", "ary", " ", "=", " ", "[", "1", ",", " ", "2", ",", " ", "3", "];", "\n", "pow", "(", "ary", ");", "\n", "console", ".", "log", "(", "ary", ");", " ", "//[1, 4, 9];", "\n", "\n", "\n\n", "\n", "マップ", "\n\n", "\n", "定義", "\n\n", "連想配列を表現する型。", "\n下記のように定義できる。", "\n\n", "var", " ", "m", " ", "map", "[", "int", "]", "string", "\n", "\n\n", "m", " ", ":=", " ", "make", "(", "map", "[", "int", "]", "string", ")", "\n", "\n\n", "m", " ", ":=", " ", "map", "[", "int", "]", "string", "{", "1", ":", " ", "\"Taro\"", ",", " ", "2", ":", " ", "\"Hanako\"", ",", " ", "3", ":", " ", "\"Jiro\"", "}", "\n", "\n\n", "特別な使い方はないので、省略。", "\n\n", "\n", "チャネル", "\n\n", "ゴルーチンとゴルーチンの間でデータを受け渡しするためにデザインされたGo特有のデータ構造。", "\n\n", "\n", "定義", "\n\n", "var", " ", "ch", " ", "chan", " ", "int", "     ", "//双方向", "\n", "var", " ", "ch1", " ", "<-", "chan", " ", "int", "  ", "//受信専用", "\n", "var", " ", "ch2", " ", "chan", "<-", " ", "int", "  ", "//送信専用", "\n", "\n\n", "ch", " ", ":=", " ", "make", "(", "chan", " ", "int", ",", " ", "8", ")", " ", "//バッファサイズ8", "\n", "\n\n", "チャネルはFIFO(先入先出し)のキュー。", "\nバッファサイズとはこのキューのサイズ。", "\n\n", "\n", "使い方", "\n\n", "チャネルは必ずゴルーチンと一緒に使う。", "\n下記は0〜10000をゴルーチン間で受け渡し、出力するプログラム。", "\n\n", "package", " ", "main", "\n\n", "import", " ", "\"fmt\"", "\n\n", "func", " ", "receiver", "(", "ch", " ", "<-", "chan", " ", "int", ")", " ", "{", "\n    ", "for", " ", "{", "\n        ", "i", ",", " ", "ok", " ", ":=", " ", "<-", "ch", "\n        ", "if", " ", "ok", " ", "==", " ", "false", " ", "{", "\n            ", "//受信できなくなったら終了", "\n            ", "break", "\n        ", "}", "\n        ", "fmt", ".", "Println", "(", "i", ")", "\n    ", "}", "\n", "}", "\n\n", "func", " ", "main", "()", " ", "{", "\n    ", "ch", " ", ":=", " ", "make", "(", "chan", " ", "int", ")", "\n    ", "go", " ", "receiver", "(", "ch", ")", "\n\n    ", "i", " ", ":=", " ", "0", "\n    ", "for", " ", "i", " ", "<=", " ", "10000", " ", "{", "\n        ", "ch", " ", "<-", " ", "i", "\n        ", "i", "++", "\n    ", "}", "\n    ", "//closeするとi, ok := <-chのokがfalseになる", "\n    ", "close", "(", "ch", ")", "\n", "}", "\n", "\n\n", "\n", "select", "\n\n", "複数のチャネルをコントロールする構文。", "\n例えば", "\n\n", "e1", " ", ":=", " ", "<-", " ", "ch", "\n", "e2", " ", ":=", " ", "<-", " ", "ch", "\n", "\n\n", "というコードで、変数ch1のチャネルからデータが受信できない場合、このゴルーチンは停止したままになり、ch2はいつまでたっても受信できない。", "\nこのように、1つの処理で複数のチャネルを処理できない問題に対処できるのがselect。", "\nゴルーチンを停止させることなく、全ての処理を継続させることができる。", "\nこのように書く。", "\n\n", "package", " ", "main", "\n\n", "import", " ", "\"fmt\"", "\n\n", "func", " ", "main", "()", " ", "{", "\n    ", "ch1", " ", ":=", " ", "make", "(", "chan", " ", "int", ")", "\n    ", "ch2", " ", ":=", " ", "make", "(", "chan", " ", "int", ")", "\n    ", "ch3", " ", ":=", " ", "make", "(", "chan", " ", "int", ")", "\n\n    ", "go", " ", "func", "()", " ", "{", "\n        ", "for", " ", "{", "\n            ", "i", " ", ":=", " ", "<-", " ", "ch1", "\n            ", "ch2", " ", "<-", " ", "(", "i", " ", "*", " ", "2", ")", "\n        ", "}", "\n    ", "}()", "\n\n    ", "go", " ", "func", "()", " ", "{", "\n        ", "for", " ", "{", "\n            ", "i", " ", ":=", " ", "<-", " ", "ch2", "\n            ", "ch3", " ", "<-", " ", "(", "i", " ", "-", " ", "1", ")", "\n        ", "}", "\n    ", "}()", "\n\n    ", "n", " ", ":=", " ", "1", "\n", "LOOP", ":", "\n    ", "for", " ", "{", "\n        ", "//処理が継続できるcaseの中からランダムに選択される", "\n        ", "//全て処理が継続できない場合はdefaultが選択される", "\n        ", "select", " ", "{", "\n        ", "case", " ", "ch1", " ", "<-", " ", "n", ":", "\n            ", "n", "++", "\n        ", "case", " ", "i", " ", ":=", " ", "<-", " ", "ch3", ":", "\n            ", "fmt", ".", "Println", "(", "\"received\"", ",", " ", "i", ")", "\n        ", "default", ":", "\n            ", "if", " ", "n", " ", ">", " ", "100", " ", "{", "\n                ", "break", " ", "LOOP", "\n            ", "}", "\n        ", "}", "\n    ", "}", "\n", "}", "\n", "\n\n", "非同期処理のデータ送受信がここまで簡単にできるのがGoの特徴。", "\n\n", "\n", "まとめ", "\n\n", "参照型についてまとめました。", "\nスライスの容量や、チャネルを使ったselectなどは少し難易度が上がりました。", "\nselectをきちんと理解できれば、Go初心者は卒業できるのかなと思います。", "\nその３に続きます。", "\n\n", "\n", "参考", "\n\n", "スターティングGo言語", "\n\n", "\n", "関連", "\n\n", "Go初学者が学んだことまとめ〜その１〜", "\n"], "code": ["var", " ", "s", " ", "[]", "int", "\n", "s", " ", ":=", " ", "make", "([]", "int", ",", " ", "5", ")", " ", "//[0, 0, 0, 0, 0]", "\n", "s", " ", ":=", " ", "[]", "int", "{", "1", ",", " ", "2", ",", " ", "3", "}", " ", "//[1, 2, 3]", "\n", "//makeの第2引数が要素数、第３引数が容量", "\n", "s", " ", ":=", " ", "make", "([]", "int", ",", " ", "5", ",", " ", "10", ")", "\n", "fmt", ".", "Println", "(", "len", "(", "s", "))", " ", "//5", "\n", "fmt", ".", "Println", "(", "cap", "(", "s", "))", " ", "//10", "\n", "s", " ", ":=", " ", "[]", "int", "{", "1", ",", " ", "2", ",", " ", "3", "}", " \n", "s", " ", "=", " ", "append", "(", "s", ",", " ", "4", ")", " ", "// s == [1, 2, 3, 4]", "\n", "s", " ", "=", " ", "append", "(", "s", ",", " ", "5", ",", " ", "6", ",", " ", "7", ")", " ", "// s == [1, 2, 3, 4, 5, 6, 7]", "\n", "s", " ", ":=", " ", "[]", "int", "{", "1", ",", " ", "2", ",", " ", "3", "}", "\n", "fmt", ".", "Println", "(", "cap", "(", "s", "))", " ", "//3", "\n", "s", " ", "=", " ", "append", "(", "s", ",", " ", "4", ")", "\n", "fmt", ".", "Println", "(", "cap", "(", "s", "))", " ", "//6", "\n", "s", " ", "=", " ", "append", "(", "s", ",", " ", "5", ",", " ", "6", ",", " ", "7", ")", "\n", "fmt", ".", "Println", "(", "cap", "(", "s", "))", " ", "//12", "\n", "s1", " ", ":=", " ", "append", "(", "s0", ",", " ", "x", ")", " ", "//s0とs1が同じメモリ領域であるかは不明", "\n", "a", " ", ":=", " ", "[", "5", "]", "int", "{", "1", ",", " ", "2", ",", " ", "3", " ", ",", "4", ",", " ", "5", "}", "\n", "s", " ", ":=", " ", "a", "[", "0", ":", "2", "]", " ", "//s == [1, 2] sは[]int型", "\n", "a", "[", "low", ":", "high", ":", "max", "]", " ", "//0 <= low <= high <= max <= cap(a) という関係を満たす必要がある", "\n", "a", " ", ":=", " ", "[", "10", "]", "int", "{", "1", ",", " ", "2", ",", " ", "3", " ", ",", "4", ",", " ", "5", ",", " ", "6", ",", " ", "7", ",", " ", "8", ",", " ", "9", ",", " ", "10", "}", "\n", "s1", " ", ":=", " ", "a", "[", "2", ":", "4", "]", "\n", "fmt", ".", "Println", "(", "cap", "(", "s1", "))", " ", "// 8 //len(a)-low が容量になる", "\n\n", "s2", " ", ":=", " ", "a", "[", "2", ":", "4", ":", "4", "]", "\n", "fmt", ".", "Println", "(", "cap", "(", "s2", "))", " ", "// 2 //max-low が容量になる", "\n\n", "s3", " ", ":=", " ", "a", "[", "2", ":", "4", ":", "6", "]", "\n", "fmt", ".", "Println", "(", "cap", "(", "s3", "))", " ", "// 4 //max-low が容量になる", "\n", "func", " ", "powArray", "(", "a", " ", "[", "3", "]", "int", ")", " ", "{", "\n    ", "for", " ", "i", ",", " ", "v", " ", ":=", " ", "range", " ", "a", " ", "{", "\n        ", "a", "[", "i", "]", " ", "=", " ", "v", " ", "*", " ", "v", "\n    ", "}", "\n", "}", "\n\n", "func", " ", "powSlice", "(", "s", " ", "[]", "int", ")", " ", "{", "\n    ", "for", " ", "i", ",", " ", "v", " ", ":=", " ", "range", " ", "s", " ", "{", "\n        ", "s", "[", "i", "]", " ", "=", " ", "v", " ", "*", " ", "v", "\n    ", "}", "\n", "}", "\n\n", "func", " ", "main", "()", " ", "{", "\n    ", "a", " ", ":=", " ", "[", "3", "]", "int", "{", "1", ",", " ", "2", ",", " ", "3", "}", " \n    ", "powArray", "(", "a", ")", " ", "//配列は値渡し。コピーされたものが関数に渡るのでaは変更されない。", "\n    ", "fmt", ".", "Println", "(", "a", ")", " ", "//[1, 2, 3]", "\n\n    ", "s", " ", ":=", " ", "[]", "int", "{", "1", ",", " ", "2", ",", " ", "3", "}", "\n    ", "powSlice", "(", "s", ")", " ", "//スライスは参照渡し。関数はsと同一のメモリ領域を使用するためsは変更される。", "\n    ", "fmt", ".", "Println", "(", "s", ")", " ", "//[1, 4, 9]", "\n", "}", "\n", "function", " ", "pow", "(", "a", ":", " ", "number", "[]):", " ", "void", " ", "{", "\n    ", "for", "(", "let", " ", "i", " ", "=", " ", "0", ";", " ", "i", " ", "<", " ", "a", ".", "length", ";", " ", "i", "++", ")", " ", "{", "\n        ", "a", "[", "i", "]", " ", "=", " ", "a", "[", "i", "]", " ", "*", " ", "a", "[", "i", "];", "\n    ", "}", "\n", "}", "\n", "const", " ", "ary", " ", "=", " ", "[", "1", ",", " ", "2", ",", " ", "3", "];", "\n", "pow", "(", "ary", ");", "\n", "console", ".", "log", "(", "ary", ");", " ", "//[1, 4, 9];", "\n", "var", " ", "m", " ", "map", "[", "int", "]", "string", "\n", "m", " ", ":=", " ", "make", "(", "map", "[", "int", "]", "string", ")", "\n", "m", " ", ":=", " ", "map", "[", "int", "]", "string", "{", "1", ":", " ", "\"Taro\"", ",", " ", "2", ":", " ", "\"Hanako\"", ",", " ", "3", ":", " ", "\"Jiro\"", "}", "\n", "var", " ", "ch", " ", "chan", " ", "int", "     ", "//双方向", "\n", "var", " ", "ch1", " ", "<-", "chan", " ", "int", "  ", "//受信専用", "\n", "var", " ", "ch2", " ", "chan", "<-", " ", "int", "  ", "//送信専用", "\n", "ch", " ", ":=", " ", "make", "(", "chan", " ", "int", ",", " ", "8", ")", " ", "//バッファサイズ8", "\n", "package", " ", "main", "\n\n", "import", " ", "\"fmt\"", "\n\n", "func", " ", "receiver", "(", "ch", " ", "<-", "chan", " ", "int", ")", " ", "{", "\n    ", "for", " ", "{", "\n        ", "i", ",", " ", "ok", " ", ":=", " ", "<-", "ch", "\n        ", "if", " ", "ok", " ", "==", " ", "false", " ", "{", "\n            ", "//受信できなくなったら終了", "\n            ", "break", "\n        ", "}", "\n        ", "fmt", ".", "Println", "(", "i", ")", "\n    ", "}", "\n", "}", "\n\n", "func", " ", "main", "()", " ", "{", "\n    ", "ch", " ", ":=", " ", "make", "(", "chan", " ", "int", ")", "\n    ", "go", " ", "receiver", "(", "ch", ")", "\n\n    ", "i", " ", ":=", " ", "0", "\n    ", "for", " ", "i", " ", "<=", " ", "10000", " ", "{", "\n        ", "ch", " ", "<-", " ", "i", "\n        ", "i", "++", "\n    ", "}", "\n    ", "//closeするとi, ok := <-chのokがfalseになる", "\n    ", "close", "(", "ch", ")", "\n", "}", "\n", "e1", " ", ":=", " ", "<-", " ", "ch", "\n", "e2", " ", ":=", " ", "<-", " ", "ch", "\n", "package", " ", "main", "\n\n", "import", " ", "\"fmt\"", "\n\n", "func", " ", "main", "()", " ", "{", "\n    ", "ch1", " ", ":=", " ", "make", "(", "chan", " ", "int", ")", "\n    ", "ch2", " ", ":=", " ", "make", "(", "chan", " ", "int", ")", "\n    ", "ch3", " ", ":=", " ", "make", "(", "chan", " ", "int", ")", "\n\n    ", "go", " ", "func", "()", " ", "{", "\n        ", "for", " ", "{", "\n            ", "i", " ", ":=", " ", "<-", " ", "ch1", "\n            ", "ch2", " ", "<-", " ", "(", "i", " ", "*", " ", "2", ")", "\n        ", "}", "\n    ", "}()", "\n\n    ", "go", " ", "func", "()", " ", "{", "\n        ", "for", " ", "{", "\n            ", "i", " ", ":=", " ", "<-", " ", "ch2", "\n            ", "ch3", " ", "<-", " ", "(", "i", " ", "-", " ", "1", ")", "\n        ", "}", "\n    ", "}()", "\n\n    ", "n", " ", ":=", " ", "1", "\n", "LOOP", ":", "\n    ", "for", " ", "{", "\n        ", "//処理が継続できるcaseの中からランダムに選択される", "\n        ", "//全て処理が継続できない場合はdefaultが選択される", "\n        ", "select", " ", "{", "\n        ", "case", " ", "ch1", " ", "<-", " ", "n", ":", "\n            ", "n", "++", "\n        ", "case", " ", "i", " ", ":=", " ", "<-", " ", "ch3", ":", "\n            ", "fmt", ".", "Println", "(", "\"received\"", ",", " ", "i", ")", "\n        ", "default", ":", "\n            ", "if", " ", "n", " ", ">", " ", "100", " ", "{", "\n                ", "break", " ", "LOOP", "\n            ", "}", "\n        ", "}", "\n    ", "}", "\n", "}", "\n"]},
{"title": ["Tinderをpythonで自動化したら遅かったからgolangでgoroutine使って書いたらクソ速くなった話"], "body": ["\n", "\n", "はじめに", "\n\n", "Daiさん", "がかなり前にTinderの自動化をpythonでやっていたので、それを参考に僕もpythonでTinderの自動化を実装してみました。", "\n\n", "Pynder PythonでTinderのAPIをいじる|Review of My Life", "\n\n", "あと、以下の記事も参考にしました。", "\n\n", "世界中で大流行のマッチングアプリ、「t○nder」のAPIを用いて遠隔サイバーナ○パをしてみた", "\n\n", "pythonだと", "pynder", "というライブラリーがあるので簡単に実装できます。→", "GitHub", "\n\n", "が、１日分のいいねを使おうとするとたしか100人分（間違ってるかも）をいいねすることになるので、なんと26〜27秒もかかってしまいます。", "\n別にそれぐらい良いじゃないかと思うかもしれないのですが、僕は早○漏なのでその30秒弱がどうしても待てませんでした。", "\n\n", "そこで、", "速い言語を使ってさらに並列処理でいいねしてやろう", "と思いました。（サーバーにあまり負荷をかけすぎない程度に）", "\n\n", "巷ではGo言語と呼ばれるやつが流行っていてしかもそいつは簡単に並列処理が実装できるのだとか。使うしかない。", "\n\n", "というわけで実装していきます。", "\n\n", "\n", "Tinder API", "\n\n", "Tinderをプログラムするのはpynderだけかと思っていたらそうでもなく普通に", "APIのドキュメント", "もありました。（冷静に考えたらpynderがあるんだから当たり前かw）このAPIをgoで叩いていきます。", "\n\n", "ちなみに、facebookのaccess_tokenを使うのですが、これが曲者でけっこう取得するのに苦労します。僕は、", "このサイト", "に書いてある方法で取得しました。", "\n\n", "しかもこれ2時間で消えちゃうのでけっこう面倒なんですよね、、", "\n\n", "\n", "api_tokenの取得", "\n\n", "先ほど取得したfacebookのaccess_tokenを使ってtinderのapi_tokenを取得します。", "\n\n", "\n", "main.go", "\n", "package", " ", "main", "\n\n", "import", " ", "(", "\n    ", "\"encoding/json\"", "\n    ", "\"log\"", "\n    ", "\"time\"", "\n\n    ", "\"github.com/Dragon-taro/tinder-go/functions\"", "\n    ", "\"github.com/Dragon-taro/tinder-go/types\"", "\n", ")", "\n\n", "func", " ", "main", "()", " ", "{", "\n    ", "body", ",", " ", "err", " ", ":=", " ", "functions", ".", "Http", "(", "\"auth\"", ",", " ", "\"\"", ",", " ", "\"POST\"", ")", "\n    ", "if", " ", "err", " ", "!=", " ", "nil", " ", "{", "\n        ", "log", ".", "Fatal", "(", "err", ")", "\n    ", "}", "\n    ", "var", " ", "user", " ", "types", ".", "User", "\n    ", "if", " ", "err", " ", ":=", " ", "json", ".", "Unmarshal", "(", "body", ",", " ", "&", "user", ");", " ", "err", " ", "!=", " ", "nil", " ", "{", "\n        ", "log", ".", "Fatal", "(", "err", ")", "\n    ", "}", "\n", "}", "\n", "\n", "\n\n", "\n", "types/types.go", "\n", "package", " ", "types", "\n\n", "type", " ", "User", " ", "struct", " ", "{", "\n    ", "User", " ", "struct", " ", "{", "\n        ", "ID", "       ", "string", " ", "`json:\"_id\"`", "\n        ", "Name", "     ", "string", " ", "`json:\"name\"`", "\n        ", "APIToken", " ", "string", " ", "`json:\"api_token\"`", "\n    ", "}", " ", "`json:\"user\"`", "\n", "}", "\n", "\n", "\n\n", "\n", "functions/api.go", "\n", "ackage", " ", "functions", "\n\n", "import", " ", "(", "\n    ", "\"bytes\"", "\n    ", "\"io/ioutil\"", "\n    ", "\"log\"", "\n    ", "\"net/http\"", "\n", ")", "\n\n", "var", " ", "jsonStr", " ", "=", " ", "[]", "byte", "(", "`{\"facebook_token\": \"YOUR FACEBOOK TOKEN\", \"facebook_id\": \"YOUR FACE BOOK ID\"}`", ")", "\n\n", "func", " ", "Http", "(", "path", " ", "string", ",", " ", "token", " ", "string", ",", " ", "method", " ", "string", ")", " ", "([]", "byte", ",", " ", "error", ")", " ", "{", "\n    ", "url", " ", ":=", " ", "\"https://api.gotinder.com/\"", " ", "+", " ", "path", "\n    ", "req", ",", " ", "err", " ", ":=", " ", "http", ".", "NewRequest", "(", "method", ",", " ", "url", ",", " ", "bytes", ".", "NewBuffer", "(", "jsonStr", "))", "\n    ", "if", " ", "err", " ", "!=", " ", "nil", " ", "{", "\n        ", "log", ".", "Fatal", "(", "err", ")", "\n    ", "}", "\n    ", "body", ",", " ", "err", " ", ":=", " ", "request", "(", "req", ",", " ", "token", ")", "\n    ", "return", " ", "body", ",", " ", "err", "\n", "}", "\n\n", "func", " ", "setHeader", "(", "req", " ", "*", "http", ".", "Request", ",", " ", "token", " ", "string", ")", " ", "{", "\n    ", "req", ".", "Header", ".", "Set", "(", "\"Content-type\"", ",", " ", "\"application/json\"", ")", "\n    ", "req", ".", "Header", ".", "Set", "(", "\"User-Agent\"", ",", " ", "\"Tinder/3.0.4 (iPhone; iOS 7.1; Scale/2.00)\"", ")", "\n", "}", "\n\n", "func", " ", "request", "(", "req", " ", "*", "http", ".", "Request", ",", " ", "token", " ", "string", ")", " ", "([]", "byte", ",", " ", "error", ")", " ", "{", "\n    ", "setHeader", "(", "req", ",", " ", "token", ")", "\n    ", "client", " ", ":=", " ", "&", "http", ".", "Client", "{}", "\n    ", "resp", ",", " ", "err", " ", ":=", " ", "client", ".", "Do", "(", "req", ")", "\n    ", "if", " ", "err", " ", "!=", " ", "nil", " ", "{", "\n        ", "log", ".", "Fatal", "(", "err", ")", "\n    ", "}", "\n\n    ", "defer", " ", "resp", ".", "Body", ".", "Close", "()", "\n\n    ", "body", ",", " ", "err", " ", ":=", " ", "ioutil", ".", "ReadAll", "(", "resp", ".", "Body", ")", "\n\n    ", "return", " ", "body", ",", " ", "err", "\n", "}", "\n", "\n", "\n\n", "これで、", "user.User.APIToken", "でapi_tokenを取得できます。", "\n長々となってしまったのですが、Headerにfacebookのaccess_tokenをのせて良い感じにリクエストを送って、jsonを良い感じにパースして返しています。", "\n\n", "main.go", "で構造体に入れるコードにしたのですが、apiの関数がuserを返す実装にしてもよかったのかなと思いました。", "\nあと、", "jsonStr", "のハードコーディングはよくないけど、わかりやすいようにここにかいてます。", "\nてかエラー処理が微妙なんですよね、、200以外も余裕で許容しちゃってる、、", "\n\n", "それにしても一ヶ月半前は、I/O？Unmarshal？そもそもポインタ？みたいなことを言ってた僕がこうやってgoを書いて、この実装にした方がよかったかもなんて議論ができてるだけで驚きです。笑", "\n\n", "\n", "近くの人を集めていいねする", "\n\n", "先ほどのapi_tokenをHeaderにセットして今度はGETを叩きます。", "\n```", "\n\n", "\n", "functions/api.go", "\n", "func", " ", "setHeader", "(", "req", " ", "*", "http", ".", "Request", ",", " ", "token", " ", "string", ")", " ", "{", "\n    ", "req", ".", "Header", ".", "Set", "(", "\"Content-type\"", ",", " ", "\"application/json\"", ")", "\n    ", "req", ".", "Header", ".", "Set", "(", "\"User-Agent\"", ",", " ", "\"Tinder/3.0.4 (iPhone; iOS 7.1; Scale/2.00)\"", ")", "\n    ", "if", " ", "token", " ", "!=", " ", "\"\"", " ", "{", "\n        ", "req", ".", "Header", ".", "Set", "(", "\"X-Auth-Token\"", ",", " ", "token", ")", "\n    ", "}", "\n", "}", "\n", "\n", "\n\n", "\n", "types/types.go", "\n", "type", " ", "ResultUser", " ", "struct", " ", "{", "\n    ", "ID", "   ", "string", " ", "`json:\"_id\"`", "\n    ", "Name", " ", "string", " ", "`json:\"name\"`", "\n", "}", "\n\n", "type", " ", "Users", " ", "struct", " ", "{", "\n    ", "Users", " ", "[]", "ResultUser", " ", "`json:\"results\"`", "\n", "}", "\n", "\n", "\n\n", "\n", "main.go", "\n", "func", " ", "main", "(){", "\n    ", "// ...", "\n    ", "likeTenUsers", "(", "user", ")", "\n", "}", "\n\n", "func", " ", "likeTenUsers", "(", "user", " ", "types", ".", "User", ")", " ", "{", "\n    ", "body", ",", " ", "err", " ", ":=", " ", "functions", ".", "Http", "(", "\"user/recs\"", ",", " ", "user", ".", "User", ".", "APIToken", ",", " ", "\"GET\"", ")", "\n    ", "if", " ", "err", " ", "!=", " ", "nil", " ", "{", "\n        ", "log", ".", "Fatal", "(", "err", ")", "\n    ", "}", "\n\n    ", "var", " ", "users", " ", "types", ".", "Users", "\n    ", "if", " ", "err", " ", ":=", " ", "json", ".", "Unmarshal", "(", "body", ",", " ", "&", "users", ");", " ", "err", " ", "!=", " ", "nil", " ", "{", "\n        ", "log", ".", "Fatal", "(", "err", ")", "\n    ", "}", "\n", "}", "\n", "\n", "\n\n", "これで取得できます。どんなに頑張っても10人しか取得できなかった、、ドキュメメントみたらGETなのにbody書いてるかと思ったらPOSTやし、ここのAPIどんな設計やねん、、", "\n\n", "何はともあれ、あとはLIKEするだけ！", "\n\n", "\n", "並列高速LIKE", "\n\n", "バズワード感がすごいw", "\ngoroutineで実装していきます。", "\n\n", "\n", "main.go", "\n", "func", " ", "likeTenUsers", "(", "ch", " ", "chan", " ", "bool", ",", " ", "user", " ", "types", ".", "User", ")", " ", "{", "\n    ", "body", ",", " ", "err", " ", ":=", " ", "functions", ".", "Http", "(", "\"user/recs\"", ",", " ", "user", ".", "User", ".", "APIToken", ",", " ", "\"GET\"", ")", " ", "// token := user.User.APIToken", "\n    ", "if", " ", "err", " ", "!=", " ", "nil", " ", "{", "\n        ", "log", ".", "Fatal", "(", "err", ")", "\n    ", "}", "\n\n    ", "var", " ", "users", " ", "types", ".", "Users", "\n    ", "if", " ", "err", " ", ":=", " ", "json", ".", "Unmarshal", "(", "body", ",", " ", "&", "users", ");", " ", "err", " ", "!=", " ", "nil", " ", "{", "\n        ", "log", ".", "Fatal", "(", "err", ")", "\n    ", "}", "\n\n    ", "c", " ", ":=", " ", "make", "(", "chan", " ", "string", ")", "\n\n    ", "for", " ", "_", ",", " ", "u", " ", ":=", " ", "range", " ", "users", ".", "Users", " ", "{", "\n        ", "go", " ", "functions", ".", "Like", "(", "c", ",", " ", "user", ".", "User", ".", "APIToken", ",", " ", "u", ")", "\n    ", "}", "\n\n    ", "for", " ", "range", " ", "users", ".", "Users", " ", "{", "\n        ", "log", ".", "Print", "(", "<-", "c", ")", "\n    ", "}", "\n", "}", "\n", "\n", "\n\n", "\n", "functions/api.go", "\n", "func", " ", "Like", "(", "c", " ", "chan", " ", "string", ",", " ", "token", " ", "string", ",", " ", "u", " ", "types", ".", "ResultUser", ")", " ", "{", "\n    ", "path", " ", ":=", " ", "\"like/\"", " ", "+", " ", "string", "(", "u", ".", "ID", ")", "\n    ", "_", ",", " ", "err", " ", ":=", " ", "Http", "(", "path", ",", " ", "token", ",", " ", "\"GET\"", ")", "\n\n    ", "if", " ", "err", " ", "==", " ", "nil", " ", "{", "\n        ", "c", " ", "<-", " ", "u", ".", "Name", " ", "+", " ", "\"さんをLikeしました！\"", "\n    ", "}", "\n", "}", "\n", "\n", "\n\n", "これで並列処理の実装は完了です！うーん、並列処理の書き方とか使い方とかこれであってるのかな、、？", "\nとにかく実行してみると動くはず、、！そして、速い予感、、！", "\n\n", "\n", "並列処理の並列処理", "\n\n", "これが果たして許されるのかは疑問だけど、理論上はいけるだろうということで10人取ってきてその全員いいねする、という処理を並列で10個走らせてみることに。", "\n\n", "\n", "main.go", "\n", "func", " ", "main", "()", " ", "{", "\n    ", "// ...", "\n    ", "ch", " ", ":=", " ", "make", "(", "chan", " ", "bool", ")", "\n    ", "for", " ", "i", " ", ":=", " ", "0", ";", " ", "i", " ", "<", " ", "10", ";", " ", "i", "++", " ", "{", "\n        ", "go", " ", "likeTenUsers", "(", "ch", ",", " ", "user", ")", "\n    ", "}", "\n    ", "for", " ", "i", " ", ":=", " ", "1", ";", " ", "i", " ", "<=", " ", "10", ";", " ", "i", "++", " ", "{", "\n        ", "<-", "ch", "\n    ", "}", "\n", "}", "\n", "\n", "\n\n", "もはやチャンネルの受け取り方がこんなにも雑でいいのかはよくわかりませんがなんとか実装することができました。", "\n\n", "そして、実行してみると、、", "\n\n", "！！？？", "\n\n", "なんと！", "3〜4秒ほどで100人のいいねが終わりました！！", "\n\n", "短くなった時間より開発にかかった時間の方がなげーよ。", "\n\n", "おしまい。", "\n\n", "GitHubはこちら → ", "Dragon-taro/tinder-fist", "\n\n", "\n", "悲報", "\n\n", "同時にリクエストを送りすぎて、", "429 Too Many Requests", "を返されましたw", "\n429を回避するためにsleepとか入れてたら結局pythonよりもおそくなるという、、", "\nというか、pythonの方ももしかしたらある程度エラーがでてたのかな？", "\n\n", "結論、サーバーに負荷をかけるのはやめましょう。", "\n\n", "\n", "参考にしたサイト", "\n\n", "\n", "Pynder PythonでTinderのAPIをいじる|Review of My Life", "\n", "世界中で大流行のマッチングアプリ、「t○nder」のAPIを用いて遠隔サイバーナ○パをしてみた", "\n", "net/http の POST もろもろ", "\n", "上に同じ", "\n", "構造体の nest", "\n", "josn の parse", "\n", "\n"], "code": ["package", " ", "main", "\n\n", "import", " ", "(", "\n    ", "\"encoding/json\"", "\n    ", "\"log\"", "\n    ", "\"time\"", "\n\n    ", "\"github.com/Dragon-taro/tinder-go/functions\"", "\n    ", "\"github.com/Dragon-taro/tinder-go/types\"", "\n", ")", "\n\n", "func", " ", "main", "()", " ", "{", "\n    ", "body", ",", " ", "err", " ", ":=", " ", "functions", ".", "Http", "(", "\"auth\"", ",", " ", "\"\"", ",", " ", "\"POST\"", ")", "\n    ", "if", " ", "err", " ", "!=", " ", "nil", " ", "{", "\n        ", "log", ".", "Fatal", "(", "err", ")", "\n    ", "}", "\n    ", "var", " ", "user", " ", "types", ".", "User", "\n    ", "if", " ", "err", " ", ":=", " ", "json", ".", "Unmarshal", "(", "body", ",", " ", "&", "user", ");", " ", "err", " ", "!=", " ", "nil", " ", "{", "\n        ", "log", ".", "Fatal", "(", "err", ")", "\n    ", "}", "\n", "}", "\n", "package", " ", "types", "\n\n", "type", " ", "User", " ", "struct", " ", "{", "\n    ", "User", " ", "struct", " ", "{", "\n        ", "ID", "       ", "string", " ", "`json:\"_id\"`", "\n        ", "Name", "     ", "string", " ", "`json:\"name\"`", "\n        ", "APIToken", " ", "string", " ", "`json:\"api_token\"`", "\n    ", "}", " ", "`json:\"user\"`", "\n", "}", "\n", "ackage", " ", "functions", "\n\n", "import", " ", "(", "\n    ", "\"bytes\"", "\n    ", "\"io/ioutil\"", "\n    ", "\"log\"", "\n    ", "\"net/http\"", "\n", ")", "\n\n", "var", " ", "jsonStr", " ", "=", " ", "[]", "byte", "(", "`{\"facebook_token\": \"YOUR FACEBOOK TOKEN\", \"facebook_id\": \"YOUR FACE BOOK ID\"}`", ")", "\n\n", "func", " ", "Http", "(", "path", " ", "string", ",", " ", "token", " ", "string", ",", " ", "method", " ", "string", ")", " ", "([]", "byte", ",", " ", "error", ")", " ", "{", "\n    ", "url", " ", ":=", " ", "\"https://api.gotinder.com/\"", " ", "+", " ", "path", "\n    ", "req", ",", " ", "err", " ", ":=", " ", "http", ".", "NewRequest", "(", "method", ",", " ", "url", ",", " ", "bytes", ".", "NewBuffer", "(", "jsonStr", "))", "\n    ", "if", " ", "err", " ", "!=", " ", "nil", " ", "{", "\n        ", "log", ".", "Fatal", "(", "err", ")", "\n    ", "}", "\n    ", "body", ",", " ", "err", " ", ":=", " ", "request", "(", "req", ",", " ", "token", ")", "\n    ", "return", " ", "body", ",", " ", "err", "\n", "}", "\n\n", "func", " ", "setHeader", "(", "req", " ", "*", "http", ".", "Request", ",", " ", "token", " ", "string", ")", " ", "{", "\n    ", "req", ".", "Header", ".", "Set", "(", "\"Content-type\"", ",", " ", "\"application/json\"", ")", "\n    ", "req", ".", "Header", ".", "Set", "(", "\"User-Agent\"", ",", " ", "\"Tinder/3.0.4 (iPhone; iOS 7.1; Scale/2.00)\"", ")", "\n", "}", "\n\n", "func", " ", "request", "(", "req", " ", "*", "http", ".", "Request", ",", " ", "token", " ", "string", ")", " ", "([]", "byte", ",", " ", "error", ")", " ", "{", "\n    ", "setHeader", "(", "req", ",", " ", "token", ")", "\n    ", "client", " ", ":=", " ", "&", "http", ".", "Client", "{}", "\n    ", "resp", ",", " ", "err", " ", ":=", " ", "client", ".", "Do", "(", "req", ")", "\n    ", "if", " ", "err", " ", "!=", " ", "nil", " ", "{", "\n        ", "log", ".", "Fatal", "(", "err", ")", "\n    ", "}", "\n\n    ", "defer", " ", "resp", ".", "Body", ".", "Close", "()", "\n\n    ", "body", ",", " ", "err", " ", ":=", " ", "ioutil", ".", "ReadAll", "(", "resp", ".", "Body", ")", "\n\n    ", "return", " ", "body", ",", " ", "err", "\n", "}", "\n", "func", " ", "setHeader", "(", "req", " ", "*", "http", ".", "Request", ",", " ", "token", " ", "string", ")", " ", "{", "\n    ", "req", ".", "Header", ".", "Set", "(", "\"Content-type\"", ",", " ", "\"application/json\"", ")", "\n    ", "req", ".", "Header", ".", "Set", "(", "\"User-Agent\"", ",", " ", "\"Tinder/3.0.4 (iPhone; iOS 7.1; Scale/2.00)\"", ")", "\n    ", "if", " ", "token", " ", "!=", " ", "\"\"", " ", "{", "\n        ", "req", ".", "Header", ".", "Set", "(", "\"X-Auth-Token\"", ",", " ", "token", ")", "\n    ", "}", "\n", "}", "\n", "type", " ", "ResultUser", " ", "struct", " ", "{", "\n    ", "ID", "   ", "string", " ", "`json:\"_id\"`", "\n    ", "Name", " ", "string", " ", "`json:\"name\"`", "\n", "}", "\n\n", "type", " ", "Users", " ", "struct", " ", "{", "\n    ", "Users", " ", "[]", "ResultUser", " ", "`json:\"results\"`", "\n", "}", "\n", "func", " ", "main", "(){", "\n    ", "// ...", "\n    ", "likeTenUsers", "(", "user", ")", "\n", "}", "\n\n", "func", " ", "likeTenUsers", "(", "user", " ", "types", ".", "User", ")", " ", "{", "\n    ", "body", ",", " ", "err", " ", ":=", " ", "functions", ".", "Http", "(", "\"user/recs\"", ",", " ", "user", ".", "User", ".", "APIToken", ",", " ", "\"GET\"", ")", "\n    ", "if", " ", "err", " ", "!=", " ", "nil", " ", "{", "\n        ", "log", ".", "Fatal", "(", "err", ")", "\n    ", "}", "\n\n    ", "var", " ", "users", " ", "types", ".", "Users", "\n    ", "if", " ", "err", " ", ":=", " ", "json", ".", "Unmarshal", "(", "body", ",", " ", "&", "users", ");", " ", "err", " ", "!=", " ", "nil", " ", "{", "\n        ", "log", ".", "Fatal", "(", "err", ")", "\n    ", "}", "\n", "}", "\n", "func", " ", "likeTenUsers", "(", "ch", " ", "chan", " ", "bool", ",", " ", "user", " ", "types", ".", "User", ")", " ", "{", "\n    ", "body", ",", " ", "err", " ", ":=", " ", "functions", ".", "Http", "(", "\"user/recs\"", ",", " ", "user", ".", "User", ".", "APIToken", ",", " ", "\"GET\"", ")", " ", "// token := user.User.APIToken", "\n    ", "if", " ", "err", " ", "!=", " ", "nil", " ", "{", "\n        ", "log", ".", "Fatal", "(", "err", ")", "\n    ", "}", "\n\n    ", "var", " ", "users", " ", "types", ".", "Users", "\n    ", "if", " ", "err", " ", ":=", " ", "json", ".", "Unmarshal", "(", "body", ",", " ", "&", "users", ");", " ", "err", " ", "!=", " ", "nil", " ", "{", "\n        ", "log", ".", "Fatal", "(", "err", ")", "\n    ", "}", "\n\n    ", "c", " ", ":=", " ", "make", "(", "chan", " ", "string", ")", "\n\n    ", "for", " ", "_", ",", " ", "u", " ", ":=", " ", "range", " ", "users", ".", "Users", " ", "{", "\n        ", "go", " ", "functions", ".", "Like", "(", "c", ",", " ", "user", ".", "User", ".", "APIToken", ",", " ", "u", ")", "\n    ", "}", "\n\n    ", "for", " ", "range", " ", "users", ".", "Users", " ", "{", "\n        ", "log", ".", "Print", "(", "<-", "c", ")", "\n    ", "}", "\n", "}", "\n", "func", " ", "Like", "(", "c", " ", "chan", " ", "string", ",", " ", "token", " ", "string", ",", " ", "u", " ", "types", ".", "ResultUser", ")", " ", "{", "\n    ", "path", " ", ":=", " ", "\"like/\"", " ", "+", " ", "string", "(", "u", ".", "ID", ")", "\n    ", "_", ",", " ", "err", " ", ":=", " ", "Http", "(", "path", ",", " ", "token", ",", " ", "\"GET\"", ")", "\n\n    ", "if", " ", "err", " ", "==", " ", "nil", " ", "{", "\n        ", "c", " ", "<-", " ", "u", ".", "Name", " ", "+", " ", "\"さんをLikeしました！\"", "\n    ", "}", "\n", "}", "\n", "func", " ", "main", "()", " ", "{", "\n    ", "// ...", "\n    ", "ch", " ", ":=", " ", "make", "(", "chan", " ", "bool", ")", "\n    ", "for", " ", "i", " ", ":=", " ", "0", ";", " ", "i", " ", "<", " ", "10", ";", " ", "i", "++", " ", "{", "\n        ", "go", " ", "likeTenUsers", "(", "ch", ",", " ", "user", ")", "\n    ", "}", "\n    ", "for", " ", "i", " ", ":=", " ", "1", ";", " ", "i", " ", "<=", " ", "10", ";", " ", "i", "++", " ", "{", "\n        ", "<-", "ch", "\n    ", "}", "\n", "}", "\n"]},
{"title": ["Prettier で整形した結果の diff があったときに CI を落とす方法"], "body": ["よく使い回すのでメモ。", "\n仕事上ほとんど CircleCI なので例は config.yml だけど、どこでも変わらない。", "\n\n", "\n", "TL;DR", "\n\n", "prettier の ", "-l", " オプションを使う。以下のような  package.json がある場合に……", "\n\n", "\n", "package.json", "\n", "{", "\n  ", "\"scripts\"", ":", " ", "{", "\n    ", "\"format\"", ":", " ", "\"prettier './src/**/*.{js,ts}'\"", "\n  ", "}", "\n", "}", "\n", "\n", "\n\n", "以下のような CircleCI で動くという具合。 ", "-l", " オプションをつけると、変更があった場合に exit code 1 を返してくれる。", "\n\n", "\n", ".circleci/config.yml", "\n", "version", ":", " ", "2", "\n", "jobs", ":", "\n  ", "build", ":", "\n    ", "working_directory", ":", " ", "~/app", "\n    ", "docker", ":", "\n      ", "-", " ", "image", ":", " ", "circleci/node:8.10.0", "\n    ", "steps", ":", "\n      ", "-", " ", "checkout", "\n      ", "-", " ", "restore_cache", ":", "\n          ", "keys", ":", "\n          ", "-", " ", "v1-dependencies-{{ checksum \"yarn.lock\" }}", "\n          ", "-", " ", "v1-dependencies-", "\n      ", "-", " ", "run", ":", " ", "yarn", "\n      ", "-", " ", "save_cache", ":", "\n          ", "paths", ":", "\n            ", "-", " ", "node_modules", "\n          ", "key", ":", " ", "v1-dependencies-{{ checksum \"yarn.lock\" }}", "\n      ", "-", " ", "run", ":", " ", "yarn -s format -l", "\n", "\n", "\n\n", "\n", "prettier の変更検知について", "\n\n", "その他いくつかの変遷をたどったのでメモ。", "\n\n", "\n", "prettier -> git diff", "\n\n", "以前まで使っていた方法。", "\n\n", "\n", "Pros", "\n\n", "\n", "楽。見たらやっていることがわかるほか、 prettier 以外の依存が入らない。", "\n", "\n\n", "\n", "Cons", "\n\n", "\n", "package-lock.json や yarn.lock が CI で書き換わったら頓死する。", "\n", "\n", "-l", " オプションを知った結果不要になった。", "\n", "\n\n", "\n", "prettier-check を使う", "\n\n", "https://github.com/hexacta/prettier-check", " を使う。", "\n\n", "\n", "Pros", "\n\n", "\n", "\n", "-l", " オプションでやりたかったことが実現できている。", "\n", "\n", "-l", " がない頃は使われていた様子。", "\n", "\n\n", "\n", "Cons", "\n\n", "\n", "この程度のことで依存を増やしたくないので prettier からの git diff のときは使わずにいた。", "\n", "今はそもそも不要になった。", "\n", "\n\n", "\n", "資料", "\n\n", "公式ドキュメントにあった。Cmd + f 狂信者なので ", "exit code", " などと検索していて今まで見つけられなかったけれど、 CI で調べたら一発だった。", "\n\n", "\n", "--list-different", "\nAnother useful flag is --list-different (or -l) which prints the filenames of files that are different from > Prettier formatting. If there are differences the script errors out, which is useful in a CI scenario.", "\n", "\n\n", "https://prettier.io/docs/en/cli.html#list-different", "\n\n", "-l", " が導入された時の議論はここ。", "\n\n", "https://github.com/prettier/prettier/issues/150", "\n"], "code": ["{", "\n  ", "\"scripts\"", ":", " ", "{", "\n    ", "\"format\"", ":", " ", "\"prettier './src/**/*.{js,ts}'\"", "\n  ", "}", "\n", "}", "\n", "version", ":", " ", "2", "\n", "jobs", ":", "\n  ", "build", ":", "\n    ", "working_directory", ":", " ", "~/app", "\n    ", "docker", ":", "\n      ", "-", " ", "image", ":", " ", "circleci/node:8.10.0", "\n    ", "steps", ":", "\n      ", "-", " ", "checkout", "\n      ", "-", " ", "restore_cache", ":", "\n          ", "keys", ":", "\n          ", "-", " ", "v1-dependencies-{{ checksum \"yarn.lock\" }}", "\n          ", "-", " ", "v1-dependencies-", "\n      ", "-", " ", "run", ":", " ", "yarn", "\n      ", "-", " ", "save_cache", ":", "\n          ", "paths", ":", "\n            ", "-", " ", "node_modules", "\n          ", "key", ":", " ", "v1-dependencies-{{ checksum \"yarn.lock\" }}", "\n      ", "-", " ", "run", ":", " ", "yarn -s format -l", "\n"]},
{"title": ["Clojure ファーストインプレッション"], "body": ["Clojure 初学者が感じた Clojure の基礎文法に関するつぶやき", "\n\n", "参考情報 = 私のスペック: プログラミング歴 10年, lisp経験なし, 関数型経験あり, 4clojure の elementary & easy は全て解いた, 「clojure for brave and true」 で学習", "\n\n", "\n", "infix でないことの強み", "\n\n", "+", ", ", "=", " や ", "and", " など他の言語では infix な演算子が Clojure では prefix になっており、可変個の引数を受け付ける。これにより、他の言語での sum, product というような関数は不要になる: ", "(+ 1 2 3)", " , ", "(apply + [1 2 3])", ", ", "(* 1 2 1)", ", ", "(and true false false)", "。", "\n\n", "\n", "名づけが絶妙", "\n\n", "特に seq まわりの関数に当てはまるが、反復操作の処理パターンを類型化し、名前をつけるのが上手い。例: ", "mapcat", ", ", "juxt", ", ", "interleave", ", ", "interpose", ", ", "partition", "。この辺りを知れば知るほど簡潔にプログラムが書けるようになりそう。", "\n\n", "\n", "自由すぎる", "\n\n", "4clojure のような単純な要件でさえ、実装方法のバリエーションが多い。書くのは楽だが読むのは辛いという印象が強い。ある問題では、", "for", " を使った内包表記で回答を作る人がいれば、", "reduce", "を使ったり、 ", "loop", ", ", "iterate", " を使った人もいた。", "\n\n", "\n", "読みづらい", "\n\n", "よく言われるように括弧多すぎというのもあるが、一番つらいのはインデントが深くなること。JavaScript, Python を書いてるときは最大でもインデント深さを 3くらいにとどめていただけに、インデントの深い expression を見ると発狂しそうになる。", "\n\n", "\n", "destructuring の強力さ", "\n\n", "最近では JavaScript でも使えるけど、destructuring は便利すぎる。多くの lexical binding は destructuring で驚くほど簡潔になる。", "\n\n", "\n", "関数合成の実際", "\n\n", "いくつか実践してみると ", "comp", ", ", "partial", " よりも ", "->", " などのスレッディングマクロを使うほうが楽なケースが多い。", "#((as-> ...)", " をよく使う。 ", "transduce", " も seq に対する処理の際にはかなり便利に使える（transducer の合成がめちゃ楽なのがよい）。", "\n\n", "\n", "エラーメッセージ", "\n\n", "何言っているのかわからないメッセージが多くてつらい", "\n\n", "\n", "楽しい", "\n\n", "短くかけて楽しい", "\n"], "code": []},
{"title": ["UiPathのコミュニティエディションをちょっとだけ使ってみた - 作ってみる"], "body": ["前回", "インストールしたUiPathコミュニティエディションを使って何かしてみます。", "\n\n", "\n", "環境情報", "\n\n", "\n", "windows10 Pro", "\n", "UiPath Studio(コミュニティエディション) 18.2.4.0", "\n", "\n\n", "\n", "やってみること", "\n\n", "さくっとやってみたいので、", "\n公式ガイド ", "UiPath Studio Guide", "のサンプルに従って、Excelの操作をやってみます。", "\n\n", "\n", "事前の準備", "\n\n", "\n", "プロジェクトの作成編", "\n\n", "\n", "Blankイメージでスタート", "\n  ", "\n", "プロジェクト名等は適当に", "\n  ", "\n", "Excelを用意", "\n公式サンプルの中に\"Database.xlsx\"と\"date&name.xlsx\"があるのでプロジェクトの直下に配置", "\n", "\n", "\n\n", "\n", "不足アクティビティの追加", "\n\n", "インストールしたての場合、Excel Application Scope アクティビティが無いらしいので、追加する。", "\n\n", "\n", "Designパネル左側の、Activities枠内のManage Packagesをクリック", "\n ", "\n", "Manage Packagesの左側の、AvailableメニューにてAllを選択し、Excelで検索 -> 一覧に出る、UiPath.Excel.Activitiesをインストール", "\n ", "\n", "\n\n", "\n", "(ようやく)作ってみる", "\n\n", "\n", "Excelを読み込む定義を作成", "\n\n", "\n", "シーケンス(処理の範囲、大枠を定義する)をドラッグアンドドロップで作成", "\n 名前はそのままでもOK(ただしメンテナンスまで考慮するならわかりやすい名称に変えておくべき)", "\n ", "\n", "Excel Application Scope アクティビティをシーケンスに追加", "\n ", "\n", "Excel Application Scope のプロパティ - Workbook Pathに、読込み対象のExcelへの(相対)パスをダブルコーテーションでくくって記載", "\n ", "\n", "\n", "Read Rangeアクティビティを追加し、プロパティにそれぞれ以下を入力", "\n\n", "\n", "Range(データ取得範囲) : \"G7:G37\"", "\n", "Sheet Name : \"Orders\"\n", "\n", "\n", "\n\n", "ここまでで、対象ファイルの指定シート、指定範囲の値を読み込むための定義ができました。", "\n\n", "ただ、このままでは読み込んだ値を格納する場所がないせいで他の処理で使えないため、変数を用意", "\n", "\n", "1.で追加したシーケンスを選択し、画面下部のVariablesをクリック", "\n  ", "\n", "\n", "Create Variableと表示されているところから、変数を追加", "\n\n", "\n", "Name : datNamesList(任意の名称でもOK)", "\n", "Variable Type : DataTable(Browse for Types... から以下のショットの通りに選択)\n", "\n", "\n", "\n", "\n", "\n", "4.で追加したRead Rangeアクティビティのプロパティに以下を追加", "\n\n", "\n", "Output : datNamesList", "\n", "\n", "\n", "\n\n", "これでようやく、取得した値を他の処理で利用することでできるようになりました。", "\n\n", "\n", "Excelに書き込む定義を作成", "\n\n", "\n", "Write Rangeアクティビティを追加し、プロパティにそれぞれ以下を入力\n\n", "\n", "Data Table : datNamesList", "\n", "Sheet Name : \"Database\"", "\n", "Starting Cell : \"B7\"", "\n", "Workbook Path : \"date&name.xlsx\"(相対パス) \n", "\n", "\n", "\n", "\n", "\n\n", "書き込む定義はこれで終了です。", "\n\n", "\n", "実行する", "\n\n", "メニューのRunをクリックするか、F5キーを押すことで実行できます。", "\n\n", "実行した結果、対象のファイルのB7以降に値が入っていれば成功です。", "\n", "\n\n", "\n", "まとめ", "\n\n", "\n", "VBAとかを色々組むことに比べればだいぶ簡単に自動化処理を作ることができた", "\n", "ただ、やっぱり以下のようなプログラミングの基本要素は押さえておかないと、サクサクとは作れない\n\n", "\n", "分岐", "\n", "ループ", "\n", "変数", "\n", "スコープ", "\n", "\n", "\n", "あと、自動化できるからーと分岐やループをばかすか入れてしまうと、メンテナンスできなくなるほど巨大化しそうなので、事前の設計が超重要", "\n", "\n"], "code": []},
{"title": ["【Splunk】ダッシュボードのドリルダウンと動的パラメータ"], "body": ["\n", "\n", "はじめに", "\n\n", "前回の記事", "でSplunkの静的なダッシュボードを作りましたが、もう少し動的で対話型のダッシュボードを作る方法です。", "\nSplunkレベル：初級", "\n\n", "\n", "使った環境", "\n\n", "マネージャ", "\n　Splunk Enterprise 6.6.6", "\nクライアント", "\n　VMサーバ3台(Windows2012)", "\n　Apache v2.4", "\n\n", "\n", "ダッシュボードの動的パラメータ", "\n\n", "\n", "やりたいこと", "\n\n", "入力した文字列をURLに含むデータを検索する。", "\n\n", "\n", "ダッシュボードを作成", "\n\n", "\n新しいダッシュボードの名前を「apache error detail」にします。", "\n\n", "\n", "パラメータの作成", "\n\n", "ダッシュボードの編集から「+入力の追加」をクリックし「テキスト」を選択します。", "\n", "\n", "\n\n", "テキストフィールドが作成されます。", "\n", "\n\n", "Splunkでは動的パラメータを「トークン」という言い方をします。", "\n鉛筆アイコンをクリックし編集ダイアログを出します。", "\n", "\nデフォルトに「Update」、トークンプリフィックスに「uri_query=\"", "」トークンサフィックスに「", "\"」を入力し、即座にサーチしたいので変更時にサーチにチェックを入れます。", "\n『入力文字列を含む』なので前後に*を入れています。", "\n適用ボタンを押して保存します。", "\n\n", "プリフィックスとサフィックスはその名のとおり、入力の前後に付与する文字列になります。", "\n単純文字列であればサーチ文につけることもできますが正規表現などはプリフィックス、サフィックスに設定したほうがよいと思います。", "\n\n", "デフォルトと初期値の違いが説明を読んでも分かりにくいです。", "\nデフォルトは「デフォルトの値」、", "\n初期値は「ページロード時の値。デフォルトが指定されている場合無視されます」とあるので、両方指定されている場合デフォルトが優先になります。", "\nページロードでは同じ動作をし、実行ボタンでのサーチでの動作の違いだと思いますが、他にももしかしたら違いがあるかもしれません。", "\n\n", "\n", "サーチ連動", "\n\n", "トークンの値とサーチを連動させます。", "\nダッシュボードの編集パネルからパネルの追加をクリック", "\n", "\n\n", "イベントの追加をクリック", "\n", "\n\n", "サーチ文を追加します。", "\n", "\nプリフィックスにフィールド名も書いているので「\\$field1$」を追加するだけです。", "\n適用ボタンを押し、ダッシュボードも保存します。", "\n\n", "\n", "サーチ結果", "\n\n", "\nupdateの文字列を含んだデータが検索できています。検索文字列を変更すれば当然ながら変更した文字列で再検索されます。", "\n\n", "今回は簡易なパラメータでの検索ですが、たとえば『従業員ID』と『時間』をパラメータにOSログ、DBログ、アプリケーションログ等々をダッシュボード上でサーチして従業員Aさんの行動を分析すると言ったような使い方など、いろいろ用途は考えられると思います。", "\n\n", "\n", "ダッシュボードのドリルダウン", "\n\n", "ダッシュボードの結果からサーチや他のダッシュボードにドリルダウンすることでより詳細な分析を行うことができます。", "\n\n", "\n", "やりたいこと", "\n\n", "ダッシュボードからサーチへの連携", "\n\n", "\n", "ダッシュボードの設定", "\n\n", "前回", "作成したダッシュボードを使用します。", "\nダッシュボードを編集モードにし、対象のパネルの三点リーダー？のアイコンをクリックするとEdit Drilldownがあるのでクリックします。", "\n", "\nドリルダウンエディタが開くので編集します。自動を選ぶと元のサーチ文のままサーチに連携されます。", "\n", "\nカスタムを選ぶと新たなサーチを設定できます。トークンに設定されている値もサーチ文の一部として設定することができます。", "\n", "\n今回は自動で設定します。", "\n\n", "\n", "ドリルダウンの結果", "\n\n", "適用ボタンで保存し、ダッシュボードも保存してダッシュボードに戻ると、グラフにアイコンを持っていくと指マーク(リンクあり）に変わります。(スクショだとアイコンが写らない。。)", "\n", "\nグラフをクリックするとサーチに連携されました。", "\n", "\nグラフの装飾に関する部分は自動で落とされてサーチに関する部分のみが連携されるようです。ただ、", "TOP 5 status", "の部分も落とされており必要なフィルタが落ちる可能性があるので注意が必要です。", "\nまたグラフからだと元のサーチ文のままサーチが開き、テーブルだとクリックしたデータをパラメータに追加されてサーチが開くようです。", "\n\n", "\n", "ダッシュボードからダッシュボードへのドリルダウン", "\n\n", "\n", "やりたいこと", "\n\n", "ダッシュボードから詳細ダッシュボードへの連携", "\nその際にクリックしたデータをダッシュボードのパラメータとして連携する。", "\n今回は「apache dashboard」から「apache error detail」に連携させます。", "\n\n", "\n", "ダッシュボードの設定", "\n\n", "先ほどと同じくエラー内容のパネルからEdit Drilldownをクリックします。", "\n", "\nOnClickに「ダッシュボードにリンク」を設定、ダッシュボードに上記で作成した「apache error detail」を設定します。", "\n詳細のパラメータの「form.field2」=「\\$click.value$」を設定します。", "\n", "\n\n", "clickしたときの値のとり方の一覧", "\n\n", "\n", "\n", "\n", "変数名", "\n", "取れる値", "\n", "\n", "\n", "\n", "\n", "\\$click.name$", "\n", "クリックしたデータの一番左のカラム名", "\n", "\n", "\n", "\\$click.value$", "\n", "クリックした行の一番左のデータ値", "\n", "\n", "\n", "\\$click.name2$", "\n", "クリックしたデータのカラム名", "\n", "\n", "\n", "\\$click.value2$", "\n", "クリックしたデータのデータ値", "\n", "\n", "\n", "\n\n", "表データの一番左かクリックしたデータしか拾えないようです。", "\n表にするとこんな感じ", "\n\n", "\n", "\n", "\n", "\\$click.name$", "(カラム名1)", "\n", "(カラム名2)", "\n", "(カラム名3)", "\n", "\\$click.name2$", "(カラム名4)", "\n", "(カラム名5)", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\\$click.value$", "\n", "\n", "\n", "(ここをクリック)", " \\$click.value2$\"", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n\n", "今回はIPを連携するため、元の表の表示順の一番左にsrc_ipを設定し、\\$click.value$で一番左のデータを渡すように設定しています。", "\n適用ボタンをクリックし、ダッシュボードも保存してダッシュボードに戻ります。", "\n\n", "\n", "ダッシュボード連携の結果", "\n\n", "\napache dashboardから「10.20.22.53」の行をクリックします。", "\n\n", "詳細ダッシュボードが表示されます。", "\n", "\nfiled2のトークンに「Server2」が表示されており、URLにも10.20.22.53が詳細ダッシュボード渡されて検索されています。", "\n\n", "ダッシュボードから詳細ダッシュボードへのドリルダウンは、ダッシュボード設計をきちんと行っておけば分析にかかる時間短縮になりそうです。", "\n\n", "\n", "資料", "\n\n", "Dynamic drilldown in dashboards and forms - Splunk ", "\n"], "code": []},
{"title": ["JavaScriptでクリーンアーキテクチャはどうすればいいのか(Usecase編)"], "body": ["\n", "\n", "Usecaseもパイプの、とある実装(フィルタ)", "\n\n", "\n", "以下のコードではrepositoryから得られたデータを直接Presenterに渡している", "\n", "\n\n", "class", " ", "usecase", " ", "{", "\n  ", "changeMonth", "(", "i", ",", " ", "month", "){", "\n    ", "this", ".", "filtercond", " ", "=", " ", "{", "month", ":", " ", "i", " ", "<", " ", "1", " ", ":", " ", "null", " ", ":", " ", "month", "}", "\n    ", "this", ".", "outport", "[", "\"departmentfilter\"", "].", "handle", "(", "this", ".", "repository", ".", "q", "(", "this", ".", "filtercond", "),", " ", "this", ")", "\n  ", "}", "\n", "// this.outport[\"departmentfilter\"]の実態は、Presenter", "\n", "\n\n", "\n\n", "\n", "従って、Usecaseもとある処理をする", "\n\n", "\n", "Repositoryから得られた", "DomainModel(の一つ)を変換", "\n", "\n", "DomainModel->(変換)->Presenter\n\n", "\n", "ここでのDomainModelはTable; RDBにおけるテーブルそのもの", "\n", "\n", "\n", "むしろ、Presenterに渡す前の前処理と", "考える", "\n\n", "\n", "Presenterはデザインパターンでいう", "Decoratorとみなす", "(?)", "\n", "\n", "\n", "\n\n", "class", " ", "usecase", " ", "{", "\n  ", "changeMonth", "(", "i", ",", " ", "month", "){", "\n    ", "this", ".", "filtercond", " ", "=", " ", "{", "month", ":", " ", "i", " ", "<", " ", "1", " ", ":", " ", "null", " ", ":", " ", "month", "}", "\n    ", "const", " ", "勤務実績表", "  ", "=", " ", "this", ".", "repository", ".", "q", "(", "\"勤務実績\"", ",", " ", "this", ".", "filtercond", ")", "\n    ", "const", " ", "departments", " ", "=", " ", "this", ".", "filterDepartment", "(", "勤務実績表", ")", "\n    ", "this", ".", "outport", "[", "\"departmentfilter\"", "].", "handle", "(", "departments", ",", " ", "this", ")", "\n  ", "}", "\n  ", "filterDepartment", "(", "table", "){", "\n    ", "return", " ", "table", ".", "select", "(", "\"所属\"", ").", "uniq", "()", "\n        ", ".", "left_join", "(", "this", ".", "repository", ".", "q", "(", "\"部門\"", "),", " ", "(", "src", ",", " ", "joining", ")", "=>", "{", "\n           ", "return", " ", "src", "[", "\"所属\"", "]", " ", "==", " ", "joining", "[", "\"所属\"", "]", "\n        ", "}).", "sortby", "(", "\"表示順\"", ").", "select", "(", "\"所属\"", ").", "toArray", "()", "\n  ", "}", "\n", "// this.outport[\"departmentfilter\"]の実態は、Presenter", "\n", "\n\n", "\n", "Repositoryにどこまで任せればいいのか", "\n", "this.repository.q()の実装をどうすればいいのだろう...", "\n", "\n\n", "\n\n", "\n", "その時Presenterは?", "\n\n", "\n", "DOM操作を行うのが役割?\n\n", "\n", "HTMLの静的な部分がView ", "と考える", "\n", "\n", "Presenterから見るとViewとはid属性を持っているNodeListのこと(のように思える)", "\n", "to_vdomを挟んでいるのは、イベントハンドラ割当のため", "\n", "\n", "\n", "\n\n", "class", " ", "SelectBoxPresenter", "\n  ", "constructor", "(", "id", "){", "\n    ", "this", ".", "node", " ", "=", " ", "document", ".", "getElementById", "(", "id", ")", "\n  ", "}", "\n  ", "to_vdom", "(", "array", "){", "\n    ", "return", " ", "{", "select", ":", " ", "array", ".", "map", "((", "v", ",", " ", "i", ")", "=>", "{", "return", " ", "{", "option", ":", " ", "v", ",", " ", "value", ":", " ", "i", "}", " ", "})}", "\n  ", "}", "\n  ", "handle", "(", "departments", ",", " ", "usecase", "){", "\n    ", "//勤務実績repositotyから得られたtableを変換してUIに反映する", "\n    ", "//1. departments(Array)-> 中間表現vdomに変換", "\n    ", "const", " ", "vdom", " ", "=", " ", "this", ".", "to_vdom", "(", "departments", ")", "\n    ", "//2. vdomの内容を、DOMに反映", "\n    ", "this", ".", "node", ".", "appendChild", "(", "toDom", "(", "vdom", ").", "addEventLister", "(", "\"change\"", ",", " ", "(", "evt", ")", "=>", "{", "\n     ", "const", " ", "i", " ", "=", " ", "this", ".", "selectedIndex", ";", "\n     ", "const", " ", "department", " ", "=", " ", "this", ".", "options", "[", "i", "].", "text", "\n     ", "usecase", ".", "changeDepartment", "(", "i", ",", " ", "department", ")", "\n    ", "}))", "\n  ", "}", "\n", "\n\n", "\n", "Presenterの問題", "\n\n", "\n", "このSelectBoxPresenterは、usecase.changeDepartment()とハードコードしているので、、、フィルタ要素ごとにクラスが必要...", "\n", "所属フィルタと勤務形態フィルタは同じセレクトボックスであるが、 ", "勤務形態フィルタをラジオボックスで表現したい場合には?", "\n", "\n", "(前編からの続き)vdom->DOMへの反映時に\n\n", "\n", "個別月を毎回選択する度に、appendChildするNodeListを消して付け加えるのは冗長では?", "\n", "optionsタグ分を入れ替えれば良いはず", "\n", "=>セレクトボックスを作るメソッドと、セレクトボックスの項目を入れ替えるメソッドを分けよう!", "\n", "\n", "\n", "\n\n", "\n\n", "\n", "Presenter編に続く", "\n"], "code": ["class", " ", "usecase", " ", "{", "\n  ", "changeMonth", "(", "i", ",", " ", "month", "){", "\n    ", "this", ".", "filtercond", " ", "=", " ", "{", "month", ":", " ", "i", " ", "<", " ", "1", " ", ":", " ", "null", " ", ":", " ", "month", "}", "\n    ", "this", ".", "outport", "[", "\"departmentfilter\"", "].", "handle", "(", "this", ".", "repository", ".", "q", "(", "this", ".", "filtercond", "),", " ", "this", ")", "\n  ", "}", "\n", "// this.outport[\"departmentfilter\"]の実態は、Presenter", "\n", "class", " ", "usecase", " ", "{", "\n  ", "changeMonth", "(", "i", ",", " ", "month", "){", "\n    ", "this", ".", "filtercond", " ", "=", " ", "{", "month", ":", " ", "i", " ", "<", " ", "1", " ", ":", " ", "null", " ", ":", " ", "month", "}", "\n    ", "const", " ", "勤務実績表", "  ", "=", " ", "this", ".", "repository", ".", "q", "(", "\"勤務実績\"", ",", " ", "this", ".", "filtercond", ")", "\n    ", "const", " ", "departments", " ", "=", " ", "this", ".", "filterDepartment", "(", "勤務実績表", ")", "\n    ", "this", ".", "outport", "[", "\"departmentfilter\"", "].", "handle", "(", "departments", ",", " ", "this", ")", "\n  ", "}", "\n  ", "filterDepartment", "(", "table", "){", "\n    ", "return", " ", "table", ".", "select", "(", "\"所属\"", ").", "uniq", "()", "\n        ", ".", "left_join", "(", "this", ".", "repository", ".", "q", "(", "\"部門\"", "),", " ", "(", "src", ",", " ", "joining", ")", "=>", "{", "\n           ", "return", " ", "src", "[", "\"所属\"", "]", " ", "==", " ", "joining", "[", "\"所属\"", "]", "\n        ", "}).", "sortby", "(", "\"表示順\"", ").", "select", "(", "\"所属\"", ").", "toArray", "()", "\n  ", "}", "\n", "// this.outport[\"departmentfilter\"]の実態は、Presenter", "\n", "class", " ", "SelectBoxPresenter", "\n  ", "constructor", "(", "id", "){", "\n    ", "this", ".", "node", " ", "=", " ", "document", ".", "getElementById", "(", "id", ")", "\n  ", "}", "\n  ", "to_vdom", "(", "array", "){", "\n    ", "return", " ", "{", "select", ":", " ", "array", ".", "map", "((", "v", ",", " ", "i", ")", "=>", "{", "return", " ", "{", "option", ":", " ", "v", ",", " ", "value", ":", " ", "i", "}", " ", "})}", "\n  ", "}", "\n  ", "handle", "(", "departments", ",", " ", "usecase", "){", "\n    ", "//勤務実績repositotyから得られたtableを変換してUIに反映する", "\n    ", "//1. departments(Array)-> 中間表現vdomに変換", "\n    ", "const", " ", "vdom", " ", "=", " ", "this", ".", "to_vdom", "(", "departments", ")", "\n    ", "//2. vdomの内容を、DOMに反映", "\n    ", "this", ".", "node", ".", "appendChild", "(", "toDom", "(", "vdom", ").", "addEventLister", "(", "\"change\"", ",", " ", "(", "evt", ")", "=>", "{", "\n     ", "const", " ", "i", " ", "=", " ", "this", ".", "selectedIndex", ";", "\n     ", "const", " ", "department", " ", "=", " ", "this", ".", "options", "[", "i", "].", "text", "\n     ", "usecase", ".", "changeDepartment", "(", "i", ",", " ", "department", ")", "\n    ", "}))", "\n  ", "}", "\n"]},
{"title": ["【Watson】Slackからオフィスのエアコンをnature Remoで操作できるようにした話し【AWS lambda】"], "body": ["オフィス内のエアコンをSlackから操作できるようにしてみました。", "\n実装内容はサーバレスとしてAWS lambdaを利用し、自然言語処理としてWatsonを使ってみました。", "\n赤外線リモコンとしてRemoを利用。なにかの参考になれば^^", "\n\n", "\n\n", "\n", "実装するきっかけ", "\n\n", "\n", "オフィス内で多かった空調についての不満\n\n", "\n", "場所によってちょうどよい温度にならない", "\n", "人によって暑い寒いの基準がバラバラ", "\n", "夏は寒くて・冬は暑い", "\n", "\n", "\n", "その他、よくある問題\n\n", "\n", "複数台のエアコンを付けたり消して帰るの面倒くさい", "\n", "エアコン消すの忘れた", "\n", "\n", "\n", "\n\n", "\n", "それってスマホアプリやスマートスピーカーでもできるんじゃ？", "\n\n", "\n", "もちろんできるがスマートスピーカーはオフィスだと恥ずかしいし、スマホはみんなが設定する必要がある", "\n", "\n\n", "\n", "リモコンでいいんじゃ？", "\n\n", "\n", "じつは会議室と執務室はエアコンが連動しており、同じリモコンで操作するため、会議室からエアコンを操作しようと思うと部屋を出ないといけなく会議室の人はみな我慢していました。", "\n", "\n\n", "そこで！Slackからエアコンを操作できるようにしてみました。", "\n\n", "\n", "Slackを使う利点", "\n\n", "\n", "Slackは全員が使っている\n\n", "\n", "説明の必要がない", "\n", "\n", "\n", "可視化ができる", "\n", "\n\n", "\n", "実装内容", "\n\n", "\n", "Slack Event API -> AWS API Gateway -> lambda -> lambda -> Watson -> Dynamo -> Remo API -> Slack", "\n", "\n", "\n", "\n\n", "\n", "できるようにしたこと", "\n\n", "\n", "エアコン操作\n\n", "\n", "各センサー（Remo）から、温度、湿度、光度の取得", "\n", "各エアコンの設定を記憶・取得（設定温度、暖房・冷房、風量）", "\n", "温度を絶対指定", "\n", "温度を相対指定", "\n", "風量変更", "\n", "冷暖房の切り替え", "\n", "\n", "\n", "会議室のテレビ操作\n\n", "\n", "テレビのオン・オフ", "\n", "音量の変更", "\n", "\n", "\n", "天気の取得", "\n", "\n\n", "\n", "Slackでの特徴", "\n\n", "\n", "専用のチャンネルを作った\n\n", "\n", "Botにメンションも考えたけど、メンションするのが面倒かなと思って実験", "\n", "\n", "\n", "\n\n", "\n", "実装してみてよかった点", "\n\n", "\n", "リモコン操作の可視化がされる\n\n", "\n", "誰が暑い・寒いと思っているのかがわかる。", "\n", "\n", "\n", "場所の温度・湿度がわかる\n\n", "\n", "だいたい25度を超えると暑く感じ２４度を下回ると寒いらしい", "\n", "２４．５度くらいが適温っぽい", "\n", "\n", "\n", "複数台の設定を考えて設定できる\n\n", "\n", "エアコン各々で設定していたことが、Aさんが寒いといっているのでAさんから遠いエアコン１を強、Aさんに近いエアコン２を弱という設定が可能", "\n", "\n", "\n", "一番はじめに出社する人が会社に付く前にONにできてオフィスに着いたらすでに快適！", "\n", "帰る時にエアコンを消して回らなくてよい", "\n", "\n\n", "うまく操作できている場合", " ", "\n", "\n\n", "暑いと思っている人と、寒いと思っている人。温度を調べると場所で温度差が結構ある", "\n", "\n\n", "\n", "実装面で困ったこと", "\n\n", "\n", "lambdaでWatsonからのレスポンスなど長い場合にJsonが途中で切れて返ってくる\n\n", "\n", "知らなかっただけかもしれませんが、結合処理が必要。。。ここで結構困った。", "\n", "\n", "\n", "Slackからlambdaへメッセージを送った場合、レスポンスを３秒以内に返さないと、メッセージが最大３回繰り返される。\n\n", "\n", "lambdaからlambdaを呼ぶ形で実装。ここも原因がわからず結構困った。SlackもLambdaもエラーなどがあるとリトライするらしい。", "\n", "\n", "\n", "エアコンのリモコンの命令が温度、風量、冷暖房と全て一括送信するため、学習させるのが台数分とても手間だった。", "\n", "学習させたリモコン情報が正しく学習できていない時があり再度登録するのに手間がかかった。\n\n", "\n", "おそらく学習させるときに適当な角度でやっていたのが問題", "\n", "\n", "\n", "\n\n", "\n", "開発の感想", "\n\n", "\n", "Watsonを自然言語処理の判断で利用したが、もし使っていなかったら定形文言でしか処理ができなくなりそうなくらい、かなり複雑でそこの処理を任せられたのはよかった。", "\n", "Remo apiは便利。IoT機器でAPIが開放されているものがあれば色々できそう。", "\n", "Remoには光センサーがあるため、会議室など電気がついていないとセンサーの値が低くなるため会議室を使っているかどうかがわかるようになりました。", "\n", "\n\n", "例）5階会議室の光量が低いので部屋が使われていない", "\n", "\n\n", "\n", "運用して困ったこと", "\n\n", "\n", "思った以上にみんなが打つ文言が異なる\n\n", "\n", "温度が相対指定だったり、絶対指定", "\n", "寒い、すごく暑い、話し言葉", "\n", "とりあえずがんばって登録、改善。\n\n", "\n", "学習仕組みがあるとよさそう。", "\n", "ここの改善を繰り返ししたことで、かなり快適に動いているように思う。", "\n", "認識を間違えた場合、Watsonで例文を登録するだけで正しく認識するようになるので修正がとても簡単だった", "\n", "\n", "\n", "\n", "\n", "専用チャンネルにしたため、みんながそのチャンネルで話し出すと全てを拾って何かしらの操作を勝手に行ってしまった。\n\n", "\n", "スレッドに反応しないように変更して、会話したい場合はスレッド形式で行ってもらうようにした。", "\n", "\n", "\n", "リモコンとSlackからの設定が異なってしまう。\n\n", "\n", "どっちでやっているかがわからない", "\n", "Slackで設定して上書きして対応する", "\n", "\n", "\n", "\n\n", "Watsonへの学習が足りなかった場合", "\n", "\n\n", "\n", "運用の感想", "\n\n", "\n", "作っている最中に誰も使ってくれないのではないかととても心配でしたが、エアコンの設定が可視化されリモコンを操作しなくてもよくなったのでみんな作ってくれてとても嬉しかったです。\n暑い、寒いという人や、温度を相対指定する人、絶対指定する人など色々おられて面白いです。", "\n", "会議室のテレビ操作はおまけで作っていたのですが、便利とのことでリモコンを使わず操作してもらっているのも個人的には意外な点でした。", "\n", "\n\n", "スマートスピーカーにしろチャットUIにしろ今後色々できるようになってくると実感しました。", "\nSlackだけでなくLineでも同様のことは作れるのでアイデア次第で色々できそうな点が面白かったです。", "\n"], "code": []},
{"title": ["gitのリポジトリにpull、pushするだけの簡単なShellScript"], "body": ["サルでも覚えられると巷でウワサされるgitコマンドを忘れ、Qiitaの記事を開いてそのまま入力することに疲れてたんだ…", "\n\n", "簡単なpull、pushのコマンドをまとめたshellscriptです。", "\n\n", "プログラムはgitのレポジトリに置いてあります。", "\n", "https://github.com/mamepon2580/portfolio/tree/master/shellscript/gitScript", "\n\n", "↓↓↓ここからが内容↓↓↓", "\n\n", "\n", "ShellScript", "\n\n", "\n", "pull", "\n\n", "\n", "\n", "pull.sh", " はそのまま一緒にリモートリポジトリ送りにされるのが嫌なので、ローカルリポジトリのすぐ上のディレクトリに保存しておきます。", "pullScript", " 中身はコマンドを固めただけです。", "\n", "\n\n", "#pull.sh", "\npullScript", "(){", "\n ", "cd ", "portfolio\n git pull origin master\n ", "cd", " ..\n", "}", "\n\n", "echo", " ", "\"start pull script\"", "\npullScript\n", "echo", " ", "\"end pull script\"", "\n", "\n\n", "\n", "push", "\n\n", "push.sh", "\n- ", "push.sh", " も ", "pull.sh", "と同様に、ローカルリポジトリのすぐ上のディレクトリに保存しておきます。", "$(cat -)", " は入力を受け付け", "git commit -m", " 引数としてコミットコメントを渡します。", "\n\n", "#push.sh", "\npushScript", "(){", "\n ", "cd ", "portfolio\n git add ", ".", "\n ", "echo", " ", "\"please comment\"", "\n git commit ", "-m", " ", "$(", "cat", " -", ")", "\n git push origin master\n ", "cd", " ..\n", "}", "\n\n", "echo", " ", "\"start push script\"", "\npushScript\n", "echo", " ", "\"end push script\"", "\n", "\n"], "code": ["#pull.sh", "\npullScript", "(){", "\n ", "cd ", "portfolio\n git pull origin master\n ", "cd", " ..\n", "}", "\n\n", "echo", " ", "\"start pull script\"", "\npullScript\n", "echo", " ", "\"end pull script\"", "\n", "#push.sh", "\npushScript", "(){", "\n ", "cd ", "portfolio\n git add ", ".", "\n ", "echo", " ", "\"please comment\"", "\n git commit ", "-m", " ", "$(", "cat", " -", ")", "\n git push origin master\n ", "cd", " ..\n", "}", "\n\n", "echo", " ", "\"start push script\"", "\npushScript\n", "echo", " ", "\"end push script\"", "\n"]},
{"title": ["CORESERVERでDjangoのサイトを作るまで"], "body": ["\n", "\n", "始めに", "\n\n", "DjangoでWebサイトを作成しようと思い、Webや書籍で情報を集めていました。", "\n『Hello World!』を表示する所までですが、まずまず苦労したので記録に残しておきます。", "\n\n", "\n", "CORESERVER", "\n\n", "レンタルサーバを幾つか探したのですが、", "CORESERVER", "では、30日間の無料トライアルが設けられています。", "\nかつ、ライトプランのCORE-MINIでは、月198円という格安で継続利用することが出来ます。", "\n無料トライアル期間中にサイトの構築を行い、そのまま運用する事もできるかと思います。", "\n\n", "\n", "無料トライアル", "\n\n", "登録方法などは一般的なものだったので、割愛します。", "\n\n", "1点だけ。登録の過程で、「お支払い情報をスキップ」を選択すると、決済情報（クレジットカード番号等）なしで登録完了できました。", "\n", "\n\n", "登録後、確認メールが登録メールアドレスに送られてきます。", "\nここに確認パスワードが記載されていますので、メールにあるリンク先から確認作業を行います。", "\n\n", "\n", "サーバー作成", "\n\n", "ログイン後の画面から　サーバー　→　コアサーバー　を選択します。", "\n", "\n「コアサーバーの新規アカウントを作成」をクリック。", "\n", "\n「CORE-MINI プランを取得」をクリック。", "\n", "\nアカウント名を指定して、下部の「30日間（YYYY-MM-DDまで）のお試し登録」をクリック。", "\n", "\n再度、サーバー　→　コアサーバー　を選択すると、サーバーが登録されていることが確認できます。", "\n", "\n\n", "\n", "ダッシュボード", "\n\n", "新規登録したサーバーにある「新コントロールパネル」のリンクをクリックします。", "\n「サイト設定」を選択するとサイトの一覧が表示されます。", "\n", "\nサイト名をクリックすると、サイトの詳細が表示されます。", "\n「FTP/SFTP接続情報」の項目に、", "\n・ホスト名", "\n・アカウント", "\n・パスワード", "\nの情報が表示されています。", "\nこの情報を使用してSSHアクセスを行います。", "\n", "\n\n", "サイト設定　→　ツール／セキュリティー　を選択します。", "\n「SSH接続IP許可」のこうもくから、「SSH接続IP許可」のボタンをクリックします。", "\n", "\n「SSH接続のIPを許可する」をクリックし、現在使用中の端末からサーバへのアクセスを許可します。", "\n", "\n設定の繁栄に5分程度の時間がかかる旨表示されます。", "\nしばらく待ちましょう。", "\n\n", "\n", "SSH ログイン", "\n\n", "TeraTermでSSHログインします。Hostに、上記のホスト名を指定。", "\n当初アカウント作成した物とはアカウント、パスワードともに違いますのでご注意ください。", "\n", "\nUser Name と Password の項目を埋めてＯＫを押します。", "\n", "\nログイン", "\n", "\n\n", "\n", "シェル 変更", "\n\n", "CORESERVER では、デフォルトシェルが rbash に設定されています。", "\nこれを、bash に変更しておきます。", "\n\n", "\n一度ログアウトし、ログインしなおすとシェルの変更が適用される様です。", "\n", "\n\n", "\n", "Python の準備", "\n\n", "\n", "pyenv インストール", "\n\n", "CORESERVERでは、Python 2.7.5 と Python 3.5.1 がセットアップされています。（記事作成時点）", "\nが、運用性を考慮しpyenvを使用します。", "\n\n", "まずはpyenvをローカルにコピー", "\n\n", "git clone https://github.com/yyuu/pyenv.git ~/.pyenv\n", "\n\n", ".bash_profile に以下を追加。", "\n\n", "\n", ".bash_profile", "\n", "export PYENV_ROOT=$HOME/.pyenv\nexport PATH=$PYENV_ROOT/bin:$PATH\neval \"$(pyenv init -)\"\n", "\n", "\n\n", "設定を反映します。", "\n\n", "$source .bash_profile\n", "\n\n", "\n", "pyenv に python をインストール", "\n\n", "pyenv install --list　コマンドでインストール可能なPython のバージョンを確認します。", "\n3.7.0が最新だったので、こちらを使用しました。", "\n\n", "$ pyenv install 3.7.0\nDownloading Python-3.7.0.tar.xz...\n-> https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tar.xz\nInstalling Python-3.7.0...\nInstalled Python-3.7.0 to /virtual/twinoze201809/.pyenv/versions/3.7.0\n", "\n\n", "コマンド完了までに数分かかりました。", "\n\n", "pyenv で使用するPythonのバージョンを指定します。", "\nglobal を指定すると、システム全体で有効になります。", "\n\n", "$ pyenv version\nsystem (set by /virtual/twinoze201809/.pyenv/version)\n[twinoze201809@m1001 ~]$ pyenv global 3.7.0\n[twinoze201809@m1001 ~]$ pyenv version\n3.7.0 (set by /virtual/twinoze201809/.pyenv/version)\n", "\n\n", ".bashrc に以下を追加。pyenv をデフォルトで有効にします。", "\n\n", "\n", ".bashrc", "\n", "export PYENV_ROOT=$HOME/.pyenv\nexport PATH=$PYENV_ROOT/bin:$PATH\neval \"$(pyenv init -)\"\n\nexport PYTHONPATH=/virtual/twinnozelab/.pyenv/versions/3.7.0/lib/python3.7/site-packages\n", "\n", "\n\n", "設定を反映します。", "\n\n", "$source .bash_profile\n", "\n\n", "Python のバージョンを確認すると、反映されている事が分かります。", "\n\n", "$ python -V\nPython 3.7.0 (default, Sep 20 2018, 11:54:11)\n[GCC 4.8.5 20150623 (Red Hat 4.8.5-16)]\n", "\n\n", "python にセットアップされているパッケージを確認。", "\n\n", "$ python -m pip list\nPackage    Version\n---------- -------\npip        10.0.1\nsetuptools 39.0.1\nYou are using pip version 10.0.1, however version 18.0 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\n", "\n\n", "pip のアップグレードを推奨されていますので、アップグレードしておきます。", "\n\n", "\n", "Django のセットアップ", "\n\n", "pip で Django をセットアップします。", "\n\n", "$ python -m pip install django\n...\nInstalling collected packages: pytz, django\nSuccessfully installed django-2.1.1 pytz-2018.5\n", "\n\n", "\n", "Django のテストプロジェクト作成", "\n\n", "Django のチュートリアル", "を参考にテスト用プロジェクトを作成します。", "\n\n", "チュートリアルに沿ってプロジェクトを作成しようとしましたが、", "\n\n", "$ django-admin startproject mysite\n-bash: django-admin: command not found\n", "\n\n", "コマンドが見つからないとの事で、怒られました。", "\nそこで、以下の1行を追加しました。", "\n\n", "\n", ".bashrc", "\n", "export PATH=/virtual/twinoze201809/.pyenv/versions/3.7.0/bin:$PATH\n", "\n", "\n\n", "その後改めて django-admin コマンドを使用し、プロジェクトを作成します。", "\n\n", "\n", "mysite プロジェクトの編集", "\n\n", "ここでは、簡単のためmysite に直接 ビューを定義しました。", "\n\n", "\n", "mysite/views.py", "\n", "from", " ", "django.http", " ", "import", " ", "HttpResponse", "\n\n", "def", " ", "index", "(", "request", "):", "\n    ", "return", " ", "HttpResponse", "(", "\"Hello, world.\"", ")", "\n", "\n", "\n\n", "\n", "mysite/urls.py", "\n", "from", " ", "django.contrib", " ", "import", " ", "admin", "\n", "from", " ", "django.urls", " ", "import", " ", "path", "\n\n", "from", " ", ".", " ", "import", " ", "views", "\n\n", "urlpatterns", " ", "=", " ", "[", "\n    ", "path", "(", "''", ",", " ", "views", ".", "index", ",", " ", "name", "=", "'index'", "),", "\n    ", "path", "(", "'admin/'", ",", " ", "admin", ".", "site", ".", "urls", "),", "\n", "]", "\n", "\n", "\n\n", "settings.py にある ALLOWED_HOSTS にサーバーのURLを設定します。", "\n\n", "\n", "mysite/settings.py", "\n", "ALLOWED_HOSTS = ['twinoze201809.m1001.coreserver.jp']\n", "\n", "\n\n", "\n", "公開ディレクトに django.cgi を定義", "\n\n", "・", "さくらのレンタルサーバでpyenvとDjangoを動かす", "を参考に、 pulic_html/ にpython3 用のdjango.cgi を設置します。", "\n\n", "$ wget --no-check-certificate https://raw.githubusercontent.com/chibiegg/django-cgi/master/django-python3.cgi\n", "\n\n", "\n", "django.cgi の編集", "\n\n", "環境に合わせてシバン(#!)を編集します。", "\n\n", "$ which python\n~/.pyenv/versions/3.7.0/bin/python\n", "\n\n", "\n", "django-python3.cgi", "\n", "#!/virtual/twinoze201809/.pyenv/versions/3.7.0/bin/python\n", "\n", "\n\n", "import os, sys の次の行に Django プロジェクトのパス指定する行を追加します。", "\n\n", "\n", "django-python3.cgi", "\n", "sys.path.append('/virtual/twinoze201809/mysite')\n", "\n", "\n\n", "environ = dict(os.environ.items())　の次の行に下記を追加します。", "\n\n", "\n", "django-python3.cgi", "\n", "    environ['PATH_INFO']         = environ.get('PATH_INFO', \"/\")\n", "\n", "\n\n", "行末付近の以下の行を", "\n\n", "\n", "django-python3.cgi", "\n", "os.environ['DJANGO_SETTINGS_MODULE'] = 'application.settings'\n", "\n", "\n\n", "この様に修正します。", "\n\n", "\n", "django-python3.cgi", "\n", "os.environ['DJANGO_SETTINGS_MODULE'] = 'mysite.settings'\n", "\n", "\n\n", "django-python3.cgi　の名称を変更し、実行権限を付けました。", "\n\n", "# mv django-python3.cgi django.cgi\n$ chmod 705 django.cgi\n", "\n\n", "\n", ".htaccess　の設定", "\n\n", "サイトを開いた際に、上記 django.cgi を実行するよう設定します。", "\n\n", "\n", ".htaccess", "\n", "RewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteRule ^(.*)$ /django.cgi/$1 [QSA,L]\n", "\n", "\n\n", "\n", "テスト", "\n\n", "サイトをブラウザで開いてみます。", "\n", "\n無事、開くことが出来ました。", "\n\n", "\n", "CORESERVER アカウント閉鎖", "\n\n", "この記事公開次点で、今回テストに使用したアカウントは閉鎖しています。", "\n以下のマニュアルを参考にしましたが、手順が若干変更されている様です。", "\n・", "CORESERVER アカウント閉鎖", "\n\n", "\n", "リンクリスト", "\n\n", "参考にしたサイトのリンクをまとめておきます。", "\n\n", "・", "CORESERVER", "\n・", ".htaccess について", "\n・", "Django", "\n・", "XREAでDjangoを動かす", "\n・", "さくらのレンタルサーバでpyenvとDjangoを動かす", "\n・", "CORESERVER アカウント閉鎖", "\n・", "pyenv を用いた Python3 インストール", "\n\n", "ここにあげていないもので、参考にさせてもらったサイトも多数ありますが、メモしてなかったので割愛。", "\nどなたかの参考になれば幸いです。", "\n"], "code": ["git clone https://github.com/yyuu/pyenv.git ~/.pyenv\n", "export PYENV_ROOT=$HOME/.pyenv\nexport PATH=$PYENV_ROOT/bin:$PATH\neval \"$(pyenv init -)\"\n", "$source .bash_profile\n", "$ pyenv install 3.7.0\nDownloading Python-3.7.0.tar.xz...\n-> https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tar.xz\nInstalling Python-3.7.0...\nInstalled Python-3.7.0 to /virtual/twinoze201809/.pyenv/versions/3.7.0\n", "$ pyenv version\nsystem (set by /virtual/twinoze201809/.pyenv/version)\n[twinoze201809@m1001 ~]$ pyenv global 3.7.0\n[twinoze201809@m1001 ~]$ pyenv version\n3.7.0 (set by /virtual/twinoze201809/.pyenv/version)\n", "export PYENV_ROOT=$HOME/.pyenv\nexport PATH=$PYENV_ROOT/bin:$PATH\neval \"$(pyenv init -)\"\n\nexport PYTHONPATH=/virtual/twinnozelab/.pyenv/versions/3.7.0/lib/python3.7/site-packages\n", "$source .bash_profile\n", "$ python -V\nPython 3.7.0 (default, Sep 20 2018, 11:54:11)\n[GCC 4.8.5 20150623 (Red Hat 4.8.5-16)]\n", "$ python -m pip list\nPackage    Version\n---------- -------\npip        10.0.1\nsetuptools 39.0.1\nYou are using pip version 10.0.1, however version 18.0 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\n", "$ python -m pip install django\n...\nInstalling collected packages: pytz, django\nSuccessfully installed django-2.1.1 pytz-2018.5\n", "$ django-admin startproject mysite\n-bash: django-admin: command not found\n", "export PATH=/virtual/twinoze201809/.pyenv/versions/3.7.0/bin:$PATH\n", "from", " ", "django.http", " ", "import", " ", "HttpResponse", "\n\n", "def", " ", "index", "(", "request", "):", "\n    ", "return", " ", "HttpResponse", "(", "\"Hello, world.\"", ")", "\n", "from", " ", "django.contrib", " ", "import", " ", "admin", "\n", "from", " ", "django.urls", " ", "import", " ", "path", "\n\n", "from", " ", ".", " ", "import", " ", "views", "\n\n", "urlpatterns", " ", "=", " ", "[", "\n    ", "path", "(", "''", ",", " ", "views", ".", "index", ",", " ", "name", "=", "'index'", "),", "\n    ", "path", "(", "'admin/'", ",", " ", "admin", ".", "site", ".", "urls", "),", "\n", "]", "\n", "ALLOWED_HOSTS = ['twinoze201809.m1001.coreserver.jp']\n", "$ wget --no-check-certificate https://raw.githubusercontent.com/chibiegg/django-cgi/master/django-python3.cgi\n", "$ which python\n~/.pyenv/versions/3.7.0/bin/python\n", "#!/virtual/twinoze201809/.pyenv/versions/3.7.0/bin/python\n", "sys.path.append('/virtual/twinoze201809/mysite')\n", "    environ['PATH_INFO']         = environ.get('PATH_INFO', \"/\")\n", "os.environ['DJANGO_SETTINGS_MODULE'] = 'application.settings'\n", "os.environ['DJANGO_SETTINGS_MODULE'] = 'mysite.settings'\n", "# mv django-python3.cgi django.cgi\n$ chmod 705 django.cgi\n", "RewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteRule ^(.*)$ /django.cgi/$1 [QSA,L]\n"]},
{"title": ["PHAssetCollectionSubtypeメモ"], "body": ["以前書いた内容", " が上手く動作しなくなっていたので調査。", "\n\n", "前の記事では「hashValue」で抽出してたけど、「hashValue」が変わったようなので、今回は「rawValue」で抽出。", "\n\n", "\n", "\n", "\n", "localizedTitle", "\n", "rawValue", "\n", "\n", "\n", "\n", "\n", "パノラマ", "\n", "201", "\n", "\n", "\n", "ビデオ", "\n", "202", "\n", "\n", "\n", "お気に入り", "\n", "203", "\n", "\n", "\n", "タイムラプス", "\n", "204", "\n", "\n", "\n", "非表示", "\n", "205", "\n", "\n", "\n", "最後に追加した項目", "\n", "206", "\n", "\n", "\n", "バースト", "\n", "207", "\n", "\n", "\n", "スローモーション", "\n", "208", "\n", "\n", "\n", "カメラロール", "\n", "209", "\n", "\n", "\n", "セルフィー", "\n", "210", "\n", "\n", "\n", "スクリーンショット", "\n", "211", "\n", "\n", "\n", "ポートレート", "\n", "212", "\n", "\n", "\n", "Live Photos", "\n", "213", "\n", "\n", "\n", "アニメーション", "\n", "214", "\n", "\n", "\n", "長時間露光", "\n", "215", "\n", "\n", "\n", "最近削除した項目", "\n", "1000000201", "\n", "\n", "\n", "\n"], "code": []},
{"title": ["WioLTEを使ってみた。"], "body": ["WioLTEを使ってみましたので備忘録", "\n\n", "操作盤の動作を監視し、変化が有ったら時間と点灯状況を伝えるプログラム。", "\n枠は３Dプリンタで作成。100均のマグネットで盤にくっつくようにしている。", "\n(追加で光が入らないように、スポンジ使用とアクリルの斜めの部分はビニールテープで覆うことをした。）", "\n", "\n時間を正確にするために計測中には（LTEをOnにする必要がある）GetTimeを利用せずGrove 高精度RTCを使用している。", "\niMuto M5185Wh/50000mAhで約3週間持ちそうです。", "\n", "http://amzn.asia/d/fChHN64", " ", "\n\n", "\n", "詰まったところ", "\n\n", "TurnOnorResetでエラーが返っていることがあったので、エラーが出たら5回まで繰り返すようにした。1回はRetryするようにした。", "\n\n", "\n", "プログラム", "\n\n", "#include <WioLTEforArduino.h>\n#include <Wire.h>\n#include \"PCF85063TP.h\"\n#include \"stdio.h\"\n\n#define UseSD false\n\n#define APN               \"APN\"\n#define USERNAME          \"USER_NAME\"\n#define PASSWORD          \"PASSWORD\"\n\n#define WEBHOOK_EVENTNAME \"IFTTT_EVENT_NAME\"\n#define WEBHOOK_KEY       \"IFTTT_KEY\"\n#define WEBHOOK_URL       \"https://maker.ifttt.com/trigger/\"WEBHOOK_EVENTNAME\"/with/key/\"WEBHOOK_KEY\n\n#define LED1 WIOLTE_D19\n#define LED2 WIOLTE_D20\n#define LED3 WIOLTE_D39\n#define LED4 WIOLTE_D38\n\n#define PUMP1_ON WIOLTE_A5\n#define PUMP1_OFF WIOLTE_A4\n#define PUMP2_ON WIOLTE_A7\n#define PUMP2_OFF WIOLTE_A6\n\nWioLTE Wio;\nPCD85063TP clockx;//define a object of PCD85063TP class\nbool Pump1_On_Status = false, Pump1_Off_Status = false, Pump2_On_Status = false, Pump2_Off_Status = false;\n\nvoid setup()\n{\n  int count = 0;\n  SerialUSB.println(\"\");\n  SerialUSB.println(\"--- START --------------------------------------\");\n  SerialUSB.println(\"****** Power Setting ***********************\");\n  bool ErrorFlag = false;\n  bool SuccessFlag = false;\n  struct tm now;\n\n  Wio.Init();\n  Wio.LedSetRGB(0, 0, 128);\n  Wio.PowerSupplyLTE(true);\n  Wio.PowerSupplyGNSS(false);\n  Wio.PowerSupplySD(UseSD);\n  Wio.PowerSupplyGrove(true);\n  delay(1000);\n  clockx.begin();\n\n  SerialUSB.println(\"****** I/O Initialize ***********************\");\n  pinMode(PUMP1_ON, INPUT_ANALOG);\n  pinMode(PUMP1_OFF, INPUT_ANALOG);\n  pinMode(PUMP2_ON, INPUT_ANALOG);\n  pinMode(PUMP2_OFF, INPUT_ANALOG);\n  pinMode(LED1, OUTPUT); digitalWrite(LED1, HIGH);\n  pinMode(LED2, OUTPUT); digitalWrite(LED2, HIGH);\n  pinMode(LED3, OUTPUT); digitalWrite(LED3, HIGH);\n  pinMode(LED4, OUTPUT); digitalWrite(LED4, HIGH);\n  SerialUSB.println(\"****** LTE Initialize ***********************\");\n  SerialUSB.println(\"### Turn on or reset(1st).\");\n  count = 0;\n  SuccessFlag = false;\n  while (!SuccessFlag) {\n    if (!Wio.TurnOnOrReset()) {\n      Wio.LedSetRGB(128, 0, 0);\n      SerialUSB.print(\"### ERROR!(\");\n      SerialUSB.print(count, DEC);\n      SerialUSB.println(\":TurnOnOrReset) ###\");\n      ErrorFlag = true;\n      delay(500);\n      count++;\n      if (count > 5)SuccessFlag = true;\n    } else {\n      SuccessFlag = true;\n      ErrorFlag = false;\n    }\n  }\n\n  if (ErrorFlag == false) {\n    digitalWrite(LED1, LOW);\n    SerialUSB.println(\"### Connecting to \\\"\"APN\"\\\".(1st)\");\n    count = 0;\n    SuccessFlag = false;\n    while (!SuccessFlag) {\n      if (!Wio.Activate(APN, USERNAME, PASSWORD)) {\n        Wio.LedSetRGB(128, 0, 0);\n        SerialUSB.print(\"### ERROR!(\");\n        SerialUSB.print(count, DEC);\n        SerialUSB.println(\":Activate) ###\");\n        ErrorFlag = true;\n        delay(500);\n        count++;\n        if (count > 5)SuccessFlag = true;\n      } else {\n        ErrorFlag = false;\n        SuccessFlag = true;\n      }\n    }\n  }\n\n  //時刻取得（NTP)\n  if (ErrorFlag == false) {\n    digitalWrite(LED2, LOW);\n    SerialUSB.println(\"### Sync time.(1st)\");\n    count = 0;\n    SuccessFlag = false;\n    while (!SuccessFlag) {\n      if (!Wio.SyncTime(\"ntp.nict.jp\")) {\n        Wio.LedSetRGB(0, 0, 128);\n        SerialUSB.print(\"### ERROR!(\");\n        SerialUSB.print(count, DEC);\n        SerialUSB.println(\":Sync) ###\");\n        ErrorFlag = true;\n        delay(500);\n        count++;\n        if (count > 5)SuccessFlag = true;\n      } else {\n        SuccessFlag = true;\n        ErrorFlag = false;\n      }\n    }\n  }\n\n  //SetRTC\n  if (ErrorFlag == false) {\n    digitalWrite(LED3, LOW);\n    SerialUSB.println(\"### Get time. 1st\");\n    count = 0;\n    SuccessFlag = false;\n    while (!SuccessFlag) {\n      if (!Wio.GetTime(&now)) {\n        Wio.LedSetRGB(0, 0, 128);\n        SerialUSB.print(\"### ERROR!(\");\n        SerialUSB.print(count, DEC);\n        SerialUSB.println(\":Get Time) ###\");\n        ErrorFlag = true;\n        delay(500);\n        count++;\n        if (count > 5)SuccessFlag = true;\n      } else {\n        ErrorFlag = false;\n        SuccessFlag = true;\n      }\n    }\n  }\n  if (ErrorFlag == false) {\n    digitalWrite(LED4, LOW);\n    SerialUSB.println(\"### Set RTC.(1st)\");\n    int year = now.tm_year + 1900;\n    byte month = now.tm_mon + 1;\n    byte day = now.tm_mday;\n    byte hour = now.tm_hour;\n    byte minute = now.tm_min;\n    byte second = now.tm_sec;\n    //UTC-->JST\n    hour += 9;\n    if (hour > 23) {\n      day += 1;\n      hour -= 24;\n    }\n    //Set RTC\n    clockx.stopClock();\n    clockx.fillByYMD(year, month, day);\n    clockx.fillByHMS(hour, minute, second);\n    clockx.setTime();//write time to the RTC chip\n    clockx.startClock();\n    uint8_t ret = clockx.calibratBySeconds(0, -0.000041);\n    SerialUSB.print(\"### Set Time :\");\n    SerialUSB.print(year, DEC);\n    SerialUSB.print(\"/\");\n    SerialUSB.print(month, DEC);\n    SerialUSB.print(\"/\");\n    SerialUSB.print(day, DEC);\n    SerialUSB.print(\" \");\n    SerialUSB.print(hour, DEC);\n    SerialUSB.print(\":\");\n    SerialUSB.print(minute, DEC);\n    SerialUSB.print(\":\");\n    SerialUSB.println(second, DEC);\n  }\n  SerialUSB.println(\"### Setup completed.\");\n  //Wio.Deactivate();  // Deactivate a PDP context. Added at v1.1.9\n  SerialUSB.println(\"### DeActivate\");\n  count = 0;\n  SuccessFlag = false;\n  while (!SuccessFlag) {\n    if (!Wio.Deactivate()) {\n      Wio.LedSetRGB(0, 0, 128);\n      SerialUSB.print(\"### ERROR!(\");\n      SerialUSB.print(count, DEC);\n      SerialUSB.println(\":Deactivate) ###\");\n      ErrorFlag = true;\n      delay(500);\n      count++;\n      if (count > 5)SuccessFlag = true;\n    } else {\n      SuccessFlag = true;\n      ErrorFlag = false;\n    }\n  }\n\n\n  //Wio.TurnOff(); // Shutdown the LTE module. Added at v1.1.6\n  SerialUSB.println(\"### TurnOff\");\n  count = 0;\n  SuccessFlag = false;\n  while (!SuccessFlag) {\n    if (!Wio.TurnOff()) {\n      Wio.LedSetRGB(0, 0, 128);\n      SerialUSB.print(\"### ERROR!(\");\n      SerialUSB.print(count, DEC);\n      SerialUSB.println(\":TurnOff) ###\");\n      ErrorFlag = true;\n      delay(500);\n      count++;\n      if (count > 5)SuccessFlag = true;\n    } else {\n      SuccessFlag = true;\n      ErrorFlag = false;\n    }\n  }\n  Wio.PowerSupplyLTE(false); // Turn the power supply to LTE module off\n  if (ErrorFlag == true)delay(20000);\n  Wio.LedSetRGB(0, 0, 0);\n}\n\nvoid loop()\n{\n  char data[100];\n  int status;\n  int count;\n  bool flag = false;\n  bool ErrorFlag = false;\n  bool SuccessFlag = false;\n  bool Pump1_On_Status_Now = false, Pump1_Off_Status_Now = false, Pump2_On_Status_Now = false, Pump2_Off_Status_Now = false;\n\n  int a1 = analogRead(PUMP1_ON);\n  int a2 = analogRead(PUMP1_OFF);\n  int a3 = analogRead(PUMP2_ON);\n  int a4 = analogRead(PUMP2_OFF);\n  if (a1 > a2) {\n    Pump1_On_Status_Now = true;\n    Pump1_Off_Status_Now = false;\n    digitalWrite(LED1, HIGH);\n    digitalWrite(LED2, LOW);\n  } else {\n    Pump1_On_Status_Now = false;\n    Pump1_Off_Status_Now = true;\n    digitalWrite(LED1, LOW);\n    digitalWrite(LED2, HIGH);\n  }\n  if (a3 > a4) {\n    Pump2_On_Status_Now = true;\n    Pump2_Off_Status_Now = false;\n    digitalWrite(LED3, HIGH);\n    digitalWrite(LED4, LOW);\n  } else {\n    Pump2_On_Status_Now = false;\n    Pump2_Off_Status_Now = true;\n    digitalWrite(LED3, LOW);\n    digitalWrite(LED4, HIGH);\n  }\n\n  if (Pump1_On_Status_Now != Pump1_On_Status) {\n    Pump1_On_Status = Pump1_On_Status_Now;\n    flag = true;\n  }\n  if (Pump1_Off_Status_Now != Pump1_Off_Status) {\n    Pump1_Off_Status = Pump1_Off_Status_Now;\n    flag = true;\n  }\n  if (Pump2_On_Status_Now != Pump2_On_Status) {\n    Pump2_On_Status = Pump2_On_Status_Now;\n    flag = true;\n  }\n  if (Pump2_Off_Status_Now != Pump2_Off_Status) {\n    Pump2_Off_Status = Pump2_Off_Status_Now;\n    flag = true;\n  }\n\n  if (flag == true) {\n    clockx.getTime();\n    sprintf(data, \"{\\\"value1\\\":\\\"%d/%d/%d %d:%d:%d;%d;%d;%d;%d\\\"}\",\n            clockx.year + 2000,\n            clockx.month,\n            clockx.dayOfMonth,\n            clockx.hour,\n            clockx.minute,\n            clockx.second,\n            Pump1_On_Status_Now,\n            Pump1_Off_Status_Now,\n            Pump2_On_Status_Now,\n            Pump2_Off_Status_Now\n           );\n\n    //post IFTTT\n    SerialUSB.println(\"### Power supply ON. 1st\");\n    Wio.PowerSupplyLTE(true);\n    delay(1000);\n    SerialUSB.println(\"### Turn on or reset. 1st\");\n    count = 0;\n    SuccessFlag = false;\n    while (!SuccessFlag) {\n      if (!Wio.TurnOnOrReset()) {\n        SerialUSB.print(\"### ERROR!(\");\n        SerialUSB.print(count, DEC);\n        SerialUSB.println(\":TurnOff) ###\");\n        ErrorFlag = true;\n        delay(500);\n        count++;\n        if (count > 5)SuccessFlag = true;\n      } else {\n        SuccessFlag = true;\n        ErrorFlag = false;\n      }\n    }\n\n    if (ErrorFlag == false) {\n      SerialUSB.println(\"### Connecting to \\\"\"APN\"\\\". 1st\");\n      count = 0;\n      SuccessFlag = false;\n      while (!SuccessFlag) {\n        if (!Wio.Activate(APN, USERNAME, PASSWORD)) {\n          SerialUSB.print(\"### ERROR! (\");\n          SerialUSB.print(count, DEC);\n          SerialUSB.println(\":Activate) ###\");\n          ErrorFlag = true;\n          delay(500);\n          count++;\n          if (count > 5)SuccessFlag = true;\n        } else {\n          SuccessFlag = true;\n          ErrorFlag = false;\n        }\n      }\n    }\n\n    if (ErrorFlag == false) {\n      SerialUSB.println(\"### Post. 1st\");\n      SerialUSB.print(\"Post:\");\n      SerialUSB.println(data);\n      count = 0;\n      SuccessFlag = false;\n      while (!SuccessFlag) {\n        if (!Wio.HttpPost(WEBHOOK_URL, data, &status)) {\n          SerialUSB.print(\"### ERROR!(\");\n          SerialUSB.print(count, DEC);\n          SerialUSB.println(\":Post) ###\");\n          ErrorFlag = true;\n          delay(1000);\n          count++;\n          if (count > 5)SuccessFlag = true;\n        } else {\n          SuccessFlag = true;\n          ErrorFlag = false;\n        }\n      }\n      SerialUSB.print(\"Status(200=Sucess):\");\n      SerialUSB.println(status);\n      if (status != 200)ErrorFlag = true;\n    }\n\n    if (ErrorFlag) {\n      SerialUSB.println(\"************** Retry Post Data *****************\");\n      delay(600000); //1minute\n      SerialUSB.println(\"### Turn on or reset. Retry\");\n      count = 0;\n      SuccessFlag = false;\n      while (!SuccessFlag) {\n        if (!Wio.TurnOnOrReset()) {\n          SerialUSB.print(\"### ERROR!(\");\n          SerialUSB.print(count, DEC);\n          SerialUSB.println(\":TurnOff) ###\");\n          ErrorFlag = true;\n          delay(500);\n          count++;\n          if (count > 5)SuccessFlag = true;\n        } else {\n          SuccessFlag = true;\n          ErrorFlag = false;\n        }\n      }\n\n      if (ErrorFlag == false) {\n        SerialUSB.println(\"### Connecting to \\\"\"APN\"\\\". Retry\");\n        count = 0;\n        SuccessFlag = false;\n        while (!SuccessFlag) {\n          if (!Wio.Activate(APN, USERNAME, PASSWORD)) {\n            SerialUSB.print(\"### ERROR! (\");\n            SerialUSB.print(count, DEC);\n            SerialUSB.println(\":Activate) ###\");\n            ErrorFlag = true;\n            delay(500);\n            count++;\n            if (count > 5)SuccessFlag = true;\n          } else {\n            SuccessFlag = true;\n            ErrorFlag = false;\n          }\n        }\n      }\n\n      if (ErrorFlag == false) {\n        SerialUSB.print(\"### Post. Retry\");\n        SerialUSB.print(\"Post:\");\n        SerialUSB.println(data);\n        count = 0;\n        SuccessFlag = false;\n        while (!SuccessFlag) {\n          if (!Wio.HttpPost(WEBHOOK_URL, data, &status)) {\n            SerialUSB.print(\"### ERROR!(\");\n            SerialUSB.print(count, DEC);\n            SerialUSB.println(\":Post) ###\");\n            ErrorFlag = true;\n            delay(1000);\n            count++;\n            if (count > 5)SuccessFlag = true;\n          } else {\n            SuccessFlag = true;\n            ErrorFlag = false;\n          }\n        }\n        SerialUSB.print(\"Status(200=Sucess):\");\n        SerialUSB.println(status);\n      }\n    }\n\n    SerialUSB.println(\"### Power supply OFF.\");\n    //Wio.Deactivate();  // Deactivate a PDP context. Added at v1.1.9\n    SerialUSB.println(\"### DeActivate\");\n    count = 0;\n    SuccessFlag = false;\n    while (!SuccessFlag) {\n      if (!Wio.Deactivate()) {\n        SerialUSB.print(\"### ERROR!(\");\n        SerialUSB.print(count, DEC);\n        SerialUSB.println(\":Deactivate) ###\");\n        ErrorFlag = true;\n        delay(500);\n        count++;\n        if (count > 5)SuccessFlag = true;\n      } else {\n        SuccessFlag = true;\n        ErrorFlag = false;\n      }\n    }\n    //Wio.TurnOff(); // Shutdown the LTE module. Added at v1.1.6\n    SerialUSB.println(\"### TurnOff\");\n    count = 0;\n    SuccessFlag = false;\n    while (!SuccessFlag) {\n      if (!Wio.TurnOff()) {\n        SerialUSB.print(\"### ERROR!(\");\n        SerialUSB.print(count, DEC);\n        SerialUSB.println(\":TurnOff) ###\");\n        ErrorFlag = true;\n        delay(500);\n        count++;\n        if (count > 5)SuccessFlag = true;\n      } else {\n        SuccessFlag = true;\n        ErrorFlag = false;\n      }\n    }\n    Wio.PowerSupplyLTE(false); // Turn the power supply to LTE module off\n   }\n  delay(1000);\n}\n", "\n\n", "済みません・・・プログラムを見ての通りうまく開始できない時間が有ります。月終わりの14時以降？UTCからJSTに変換するところ...", "\n"], "code": ["#include <WioLTEforArduino.h>\n#include <Wire.h>\n#include \"PCF85063TP.h\"\n#include \"stdio.h\"\n\n#define UseSD false\n\n#define APN               \"APN\"\n#define USERNAME          \"USER_NAME\"\n#define PASSWORD          \"PASSWORD\"\n\n#define WEBHOOK_EVENTNAME \"IFTTT_EVENT_NAME\"\n#define WEBHOOK_KEY       \"IFTTT_KEY\"\n#define WEBHOOK_URL       \"https://maker.ifttt.com/trigger/\"WEBHOOK_EVENTNAME\"/with/key/\"WEBHOOK_KEY\n\n#define LED1 WIOLTE_D19\n#define LED2 WIOLTE_D20\n#define LED3 WIOLTE_D39\n#define LED4 WIOLTE_D38\n\n#define PUMP1_ON WIOLTE_A5\n#define PUMP1_OFF WIOLTE_A4\n#define PUMP2_ON WIOLTE_A7\n#define PUMP2_OFF WIOLTE_A6\n\nWioLTE Wio;\nPCD85063TP clockx;//define a object of PCD85063TP class\nbool Pump1_On_Status = false, Pump1_Off_Status = false, Pump2_On_Status = false, Pump2_Off_Status = false;\n\nvoid setup()\n{\n  int count = 0;\n  SerialUSB.println(\"\");\n  SerialUSB.println(\"--- START --------------------------------------\");\n  SerialUSB.println(\"****** Power Setting ***********************\");\n  bool ErrorFlag = false;\n  bool SuccessFlag = false;\n  struct tm now;\n\n  Wio.Init();\n  Wio.LedSetRGB(0, 0, 128);\n  Wio.PowerSupplyLTE(true);\n  Wio.PowerSupplyGNSS(false);\n  Wio.PowerSupplySD(UseSD);\n  Wio.PowerSupplyGrove(true);\n  delay(1000);\n  clockx.begin();\n\n  SerialUSB.println(\"****** I/O Initialize ***********************\");\n  pinMode(PUMP1_ON, INPUT_ANALOG);\n  pinMode(PUMP1_OFF, INPUT_ANALOG);\n  pinMode(PUMP2_ON, INPUT_ANALOG);\n  pinMode(PUMP2_OFF, INPUT_ANALOG);\n  pinMode(LED1, OUTPUT); digitalWrite(LED1, HIGH);\n  pinMode(LED2, OUTPUT); digitalWrite(LED2, HIGH);\n  pinMode(LED3, OUTPUT); digitalWrite(LED3, HIGH);\n  pinMode(LED4, OUTPUT); digitalWrite(LED4, HIGH);\n  SerialUSB.println(\"****** LTE Initialize ***********************\");\n  SerialUSB.println(\"### Turn on or reset(1st).\");\n  count = 0;\n  SuccessFlag = false;\n  while (!SuccessFlag) {\n    if (!Wio.TurnOnOrReset()) {\n      Wio.LedSetRGB(128, 0, 0);\n      SerialUSB.print(\"### ERROR!(\");\n      SerialUSB.print(count, DEC);\n      SerialUSB.println(\":TurnOnOrReset) ###\");\n      ErrorFlag = true;\n      delay(500);\n      count++;\n      if (count > 5)SuccessFlag = true;\n    } else {\n      SuccessFlag = true;\n      ErrorFlag = false;\n    }\n  }\n\n  if (ErrorFlag == false) {\n    digitalWrite(LED1, LOW);\n    SerialUSB.println(\"### Connecting to \\\"\"APN\"\\\".(1st)\");\n    count = 0;\n    SuccessFlag = false;\n    while (!SuccessFlag) {\n      if (!Wio.Activate(APN, USERNAME, PASSWORD)) {\n        Wio.LedSetRGB(128, 0, 0);\n        SerialUSB.print(\"### ERROR!(\");\n        SerialUSB.print(count, DEC);\n        SerialUSB.println(\":Activate) ###\");\n        ErrorFlag = true;\n        delay(500);\n        count++;\n        if (count > 5)SuccessFlag = true;\n      } else {\n        ErrorFlag = false;\n        SuccessFlag = true;\n      }\n    }\n  }\n\n  //時刻取得（NTP)\n  if (ErrorFlag == false) {\n    digitalWrite(LED2, LOW);\n    SerialUSB.println(\"### Sync time.(1st)\");\n    count = 0;\n    SuccessFlag = false;\n    while (!SuccessFlag) {\n      if (!Wio.SyncTime(\"ntp.nict.jp\")) {\n        Wio.LedSetRGB(0, 0, 128);\n        SerialUSB.print(\"### ERROR!(\");\n        SerialUSB.print(count, DEC);\n        SerialUSB.println(\":Sync) ###\");\n        ErrorFlag = true;\n        delay(500);\n        count++;\n        if (count > 5)SuccessFlag = true;\n      } else {\n        SuccessFlag = true;\n        ErrorFlag = false;\n      }\n    }\n  }\n\n  //SetRTC\n  if (ErrorFlag == false) {\n    digitalWrite(LED3, LOW);\n    SerialUSB.println(\"### Get time. 1st\");\n    count = 0;\n    SuccessFlag = false;\n    while (!SuccessFlag) {\n      if (!Wio.GetTime(&now)) {\n        Wio.LedSetRGB(0, 0, 128);\n        SerialUSB.print(\"### ERROR!(\");\n        SerialUSB.print(count, DEC);\n        SerialUSB.println(\":Get Time) ###\");\n        ErrorFlag = true;\n        delay(500);\n        count++;\n        if (count > 5)SuccessFlag = true;\n      } else {\n        ErrorFlag = false;\n        SuccessFlag = true;\n      }\n    }\n  }\n  if (ErrorFlag == false) {\n    digitalWrite(LED4, LOW);\n    SerialUSB.println(\"### Set RTC.(1st)\");\n    int year = now.tm_year + 1900;\n    byte month = now.tm_mon + 1;\n    byte day = now.tm_mday;\n    byte hour = now.tm_hour;\n    byte minute = now.tm_min;\n    byte second = now.tm_sec;\n    //UTC-->JST\n    hour += 9;\n    if (hour > 23) {\n      day += 1;\n      hour -= 24;\n    }\n    //Set RTC\n    clockx.stopClock();\n    clockx.fillByYMD(year, month, day);\n    clockx.fillByHMS(hour, minute, second);\n    clockx.setTime();//write time to the RTC chip\n    clockx.startClock();\n    uint8_t ret = clockx.calibratBySeconds(0, -0.000041);\n    SerialUSB.print(\"### Set Time :\");\n    SerialUSB.print(year, DEC);\n    SerialUSB.print(\"/\");\n    SerialUSB.print(month, DEC);\n    SerialUSB.print(\"/\");\n    SerialUSB.print(day, DEC);\n    SerialUSB.print(\" \");\n    SerialUSB.print(hour, DEC);\n    SerialUSB.print(\":\");\n    SerialUSB.print(minute, DEC);\n    SerialUSB.print(\":\");\n    SerialUSB.println(second, DEC);\n  }\n  SerialUSB.println(\"### Setup completed.\");\n  //Wio.Deactivate();  // Deactivate a PDP context. Added at v1.1.9\n  SerialUSB.println(\"### DeActivate\");\n  count = 0;\n  SuccessFlag = false;\n  while (!SuccessFlag) {\n    if (!Wio.Deactivate()) {\n      Wio.LedSetRGB(0, 0, 128);\n      SerialUSB.print(\"### ERROR!(\");\n      SerialUSB.print(count, DEC);\n      SerialUSB.println(\":Deactivate) ###\");\n      ErrorFlag = true;\n      delay(500);\n      count++;\n      if (count > 5)SuccessFlag = true;\n    } else {\n      SuccessFlag = true;\n      ErrorFlag = false;\n    }\n  }\n\n\n  //Wio.TurnOff(); // Shutdown the LTE module. Added at v1.1.6\n  SerialUSB.println(\"### TurnOff\");\n  count = 0;\n  SuccessFlag = false;\n  while (!SuccessFlag) {\n    if (!Wio.TurnOff()) {\n      Wio.LedSetRGB(0, 0, 128);\n      SerialUSB.print(\"### ERROR!(\");\n      SerialUSB.print(count, DEC);\n      SerialUSB.println(\":TurnOff) ###\");\n      ErrorFlag = true;\n      delay(500);\n      count++;\n      if (count > 5)SuccessFlag = true;\n    } else {\n      SuccessFlag = true;\n      ErrorFlag = false;\n    }\n  }\n  Wio.PowerSupplyLTE(false); // Turn the power supply to LTE module off\n  if (ErrorFlag == true)delay(20000);\n  Wio.LedSetRGB(0, 0, 0);\n}\n\nvoid loop()\n{\n  char data[100];\n  int status;\n  int count;\n  bool flag = false;\n  bool ErrorFlag = false;\n  bool SuccessFlag = false;\n  bool Pump1_On_Status_Now = false, Pump1_Off_Status_Now = false, Pump2_On_Status_Now = false, Pump2_Off_Status_Now = false;\n\n  int a1 = analogRead(PUMP1_ON);\n  int a2 = analogRead(PUMP1_OFF);\n  int a3 = analogRead(PUMP2_ON);\n  int a4 = analogRead(PUMP2_OFF);\n  if (a1 > a2) {\n    Pump1_On_Status_Now = true;\n    Pump1_Off_Status_Now = false;\n    digitalWrite(LED1, HIGH);\n    digitalWrite(LED2, LOW);\n  } else {\n    Pump1_On_Status_Now = false;\n    Pump1_Off_Status_Now = true;\n    digitalWrite(LED1, LOW);\n    digitalWrite(LED2, HIGH);\n  }\n  if (a3 > a4) {\n    Pump2_On_Status_Now = true;\n    Pump2_Off_Status_Now = false;\n    digitalWrite(LED3, HIGH);\n    digitalWrite(LED4, LOW);\n  } else {\n    Pump2_On_Status_Now = false;\n    Pump2_Off_Status_Now = true;\n    digitalWrite(LED3, LOW);\n    digitalWrite(LED4, HIGH);\n  }\n\n  if (Pump1_On_Status_Now != Pump1_On_Status) {\n    Pump1_On_Status = Pump1_On_Status_Now;\n    flag = true;\n  }\n  if (Pump1_Off_Status_Now != Pump1_Off_Status) {\n    Pump1_Off_Status = Pump1_Off_Status_Now;\n    flag = true;\n  }\n  if (Pump2_On_Status_Now != Pump2_On_Status) {\n    Pump2_On_Status = Pump2_On_Status_Now;\n    flag = true;\n  }\n  if (Pump2_Off_Status_Now != Pump2_Off_Status) {\n    Pump2_Off_Status = Pump2_Off_Status_Now;\n    flag = true;\n  }\n\n  if (flag == true) {\n    clockx.getTime();\n    sprintf(data, \"{\\\"value1\\\":\\\"%d/%d/%d %d:%d:%d;%d;%d;%d;%d\\\"}\",\n            clockx.year + 2000,\n            clockx.month,\n            clockx.dayOfMonth,\n            clockx.hour,\n            clockx.minute,\n            clockx.second,\n            Pump1_On_Status_Now,\n            Pump1_Off_Status_Now,\n            Pump2_On_Status_Now,\n            Pump2_Off_Status_Now\n           );\n\n    //post IFTTT\n    SerialUSB.println(\"### Power supply ON. 1st\");\n    Wio.PowerSupplyLTE(true);\n    delay(1000);\n    SerialUSB.println(\"### Turn on or reset. 1st\");\n    count = 0;\n    SuccessFlag = false;\n    while (!SuccessFlag) {\n      if (!Wio.TurnOnOrReset()) {\n        SerialUSB.print(\"### ERROR!(\");\n        SerialUSB.print(count, DEC);\n        SerialUSB.println(\":TurnOff) ###\");\n        ErrorFlag = true;\n        delay(500);\n        count++;\n        if (count > 5)SuccessFlag = true;\n      } else {\n        SuccessFlag = true;\n        ErrorFlag = false;\n      }\n    }\n\n    if (ErrorFlag == false) {\n      SerialUSB.println(\"### Connecting to \\\"\"APN\"\\\". 1st\");\n      count = 0;\n      SuccessFlag = false;\n      while (!SuccessFlag) {\n        if (!Wio.Activate(APN, USERNAME, PASSWORD)) {\n          SerialUSB.print(\"### ERROR! (\");\n          SerialUSB.print(count, DEC);\n          SerialUSB.println(\":Activate) ###\");\n          ErrorFlag = true;\n          delay(500);\n          count++;\n          if (count > 5)SuccessFlag = true;\n        } else {\n          SuccessFlag = true;\n          ErrorFlag = false;\n        }\n      }\n    }\n\n    if (ErrorFlag == false) {\n      SerialUSB.println(\"### Post. 1st\");\n      SerialUSB.print(\"Post:\");\n      SerialUSB.println(data);\n      count = 0;\n      SuccessFlag = false;\n      while (!SuccessFlag) {\n        if (!Wio.HttpPost(WEBHOOK_URL, data, &status)) {\n          SerialUSB.print(\"### ERROR!(\");\n          SerialUSB.print(count, DEC);\n          SerialUSB.println(\":Post) ###\");\n          ErrorFlag = true;\n          delay(1000);\n          count++;\n          if (count > 5)SuccessFlag = true;\n        } else {\n          SuccessFlag = true;\n          ErrorFlag = false;\n        }\n      }\n      SerialUSB.print(\"Status(200=Sucess):\");\n      SerialUSB.println(status);\n      if (status != 200)ErrorFlag = true;\n    }\n\n    if (ErrorFlag) {\n      SerialUSB.println(\"************** Retry Post Data *****************\");\n      delay(600000); //1minute\n      SerialUSB.println(\"### Turn on or reset. Retry\");\n      count = 0;\n      SuccessFlag = false;\n      while (!SuccessFlag) {\n        if (!Wio.TurnOnOrReset()) {\n          SerialUSB.print(\"### ERROR!(\");\n          SerialUSB.print(count, DEC);\n          SerialUSB.println(\":TurnOff) ###\");\n          ErrorFlag = true;\n          delay(500);\n          count++;\n          if (count > 5)SuccessFlag = true;\n        } else {\n          SuccessFlag = true;\n          ErrorFlag = false;\n        }\n      }\n\n      if (ErrorFlag == false) {\n        SerialUSB.println(\"### Connecting to \\\"\"APN\"\\\". Retry\");\n        count = 0;\n        SuccessFlag = false;\n        while (!SuccessFlag) {\n          if (!Wio.Activate(APN, USERNAME, PASSWORD)) {\n            SerialUSB.print(\"### ERROR! (\");\n            SerialUSB.print(count, DEC);\n            SerialUSB.println(\":Activate) ###\");\n            ErrorFlag = true;\n            delay(500);\n            count++;\n            if (count > 5)SuccessFlag = true;\n          } else {\n            SuccessFlag = true;\n            ErrorFlag = false;\n          }\n        }\n      }\n\n      if (ErrorFlag == false) {\n        SerialUSB.print(\"### Post. Retry\");\n        SerialUSB.print(\"Post:\");\n        SerialUSB.println(data);\n        count = 0;\n        SuccessFlag = false;\n        while (!SuccessFlag) {\n          if (!Wio.HttpPost(WEBHOOK_URL, data, &status)) {\n            SerialUSB.print(\"### ERROR!(\");\n            SerialUSB.print(count, DEC);\n            SerialUSB.println(\":Post) ###\");\n            ErrorFlag = true;\n            delay(1000);\n            count++;\n            if (count > 5)SuccessFlag = true;\n          } else {\n            SuccessFlag = true;\n            ErrorFlag = false;\n          }\n        }\n        SerialUSB.print(\"Status(200=Sucess):\");\n        SerialUSB.println(status);\n      }\n    }\n\n    SerialUSB.println(\"### Power supply OFF.\");\n    //Wio.Deactivate();  // Deactivate a PDP context. Added at v1.1.9\n    SerialUSB.println(\"### DeActivate\");\n    count = 0;\n    SuccessFlag = false;\n    while (!SuccessFlag) {\n      if (!Wio.Deactivate()) {\n        SerialUSB.print(\"### ERROR!(\");\n        SerialUSB.print(count, DEC);\n        SerialUSB.println(\":Deactivate) ###\");\n        ErrorFlag = true;\n        delay(500);\n        count++;\n        if (count > 5)SuccessFlag = true;\n      } else {\n        SuccessFlag = true;\n        ErrorFlag = false;\n      }\n    }\n    //Wio.TurnOff(); // Shutdown the LTE module. Added at v1.1.6\n    SerialUSB.println(\"### TurnOff\");\n    count = 0;\n    SuccessFlag = false;\n    while (!SuccessFlag) {\n      if (!Wio.TurnOff()) {\n        SerialUSB.print(\"### ERROR!(\");\n        SerialUSB.print(count, DEC);\n        SerialUSB.println(\":TurnOff) ###\");\n        ErrorFlag = true;\n        delay(500);\n        count++;\n        if (count > 5)SuccessFlag = true;\n      } else {\n        SuccessFlag = true;\n        ErrorFlag = false;\n      }\n    }\n    Wio.PowerSupplyLTE(false); // Turn the power supply to LTE module off\n   }\n  delay(1000);\n}\n"]},
{"title": ["Githubでコミットメッセージを修正したいとき"], "body": ["コミットメッセージやっぱり直したいな、ってときの為。", "\n\n", "1.コマンドラインで、修正したいコミットを含むリポジトリに移動。", "\n2.テキストエディタで、コミットメッセージを編集。", "\n", "git commit --amend", "\n3.コミットを保存。", "\n４.古いコミットを強制的にプッシュ。", "\n", "git push --force example-branch", "\n\n", "(引用元：", "https://code.i-harness.com/ja/q/a3b3e4", ")", "\n"], "code": []},
{"title": ["UiPathのコミュニティエディションをちょっとだけ使ってみた - インストールまで"], "body": ["友人がRPAやるかもということだったので、", "\n事前の学習として個人で試すことができるUiPathの導入と、ちょっとしたサンプルを提供ついでに投稿します。", "\n\n", "\n", "環境情報", "\n\n", "\n", "windows10 Pro", "\n", "\n\n", "\n", "さっそくダウンロード", "\n\n", "細かいことは置いといて、まずはダウンロードしてみましょう。", "\nなお、コミュニティエディションの商用利用はNGとしっかり書かれていますのでくれぐれも注意してください。", "\n\n", "\n", "公式サイト", " に移動して", "\n", "サイト右上のトライアルの開始をクリック", "\n", "\n", "UiPathコミュニティエディションを選択", "\n", "姓・名・Eメールを入力してダウンロードボタンをクリック", "\n", "\n", "登録したメールにURLがついてくるので、そちらからUiPathStudioSetup.exeをダウンロード", "\n", "\n\n", "\n", "続いてインストール", "\n\n", "\n", "ダウンロードしたUiPathStudioSetup.exeを実行", "\n", "起動時に毎回ライセンスの有無を聞かれるので、Start Free(2回目以降はContinue Free)を選択", "\n", "\n", "登録時に使用したアドレスの入力を求められるので、入力し、Activate", "\n", "\n※Device IDはそのままで。", "\n", "\n\n", "これでインストールまで完了です。", "\n\n", "次は", "サンプル", "作成をやります。", "\n"], "code": []},
{"title": ["Pythonのpipをインストールする"], "body": ["pipは2.7.9以上で使える。3.4以上ではデフォルトで入っているらしい。今回の環境はUbuntu 16.04 LTS。", "\n\n", "curl ", "-O", " https://bootstrap.pypa.io/get-pip.py\npython get-pip.py\n", "\n"], "code": ["curl ", "-O", " https://bootstrap.pypa.io/get-pip.py\npython get-pip.py\n"]},
{"title": ["pipでインストールしたコマンドの場所を調べる"], "body": ["以下で場所がわかる", "\n\n", "pip show [Package]\n", "\n\n", "今回はUbuntuで作業していたが、", "/root/.local/lib/python2.7/site-packages", "になっていた。", "\n"], "code": ["pip show [Package]\n"]},
{"title": ["C++ - &= vs |= vs && vs ||"], "body": ["Great explain. Very clear.", "\n\n", "First: a &= b; is not the same as a = a && b;. a &= b; means a = a & b;. In C/C++ there is no  a &&= b;.", "\n\n", "Logical AND a && b is bit like a test for 1 bit. If the first \"bit\" is already 0, than the result will always be 0 no matter the second. So it is not necessary to evaluate b if the result is already clear from a. The C/C++ standard allows this optimization.", "\n\n", "Bitwise AND a & b performs this test for all bits of a and b. So b needs to be evaluated if at least one bit in a would be non-zero. You could perhaps wish that if a==0, than b would not be evaluated, but this optimization is not allowed in C/C++.", "\n\n", "https://stackoverflow.com/questions/23107162/do-the-and-operators-for-bool-short-circuit", "\n"], "code": []},
{"title": ["Assembly Definition で Editor スクリプトを設定する"], "body": ["\n", "\n", "はじめに", "\n\n", "AssemblyDefinition で Editor スクリプトを設定したときにうまくいかなかったので、その際の解決方法をメモ。", "\n\n", "\n", "やったこと", "\n\n", "\n", "まとめたいスクリプトの", "Editor下 のフォルダ", "にAssemblyDefnitionファイルを置く", "\n", "\n\n", "OK HogehogePlugin/Editor/AssemblyDefinition.asmdef\n\nNG HogehogePlugin/AssemblyDefinition.asmdef\n   HogehogePlugin/Editor\n", "\n\n", "\n", "AssemblyDefinition ファイルの Platform を Editor にする\n", "\n", "\n", "\n"], "code": ["OK HogehogePlugin/Editor/AssemblyDefinition.asmdef\n\nNG HogehogePlugin/AssemblyDefinition.asmdef\n   HogehogePlugin/Editor\n"]},
{"title": ["micro:bitでWebUSBを使う"], "body": ["MakeCode for micro:bit のベータ版で、WebUSBが使えるようになったので、試してみました。詳細はこちら。", "\n\n", "https://support.microbit.org/support/solutions/articles/19000084059-beta-testing-web-usb", "\n\n", "\n", "DAPLinkバイナリのダウンロード", "\n\n", "まず、micro:bitのDAPLinkファームウェアを最新版に更新します。v0248以降のリリース版の.zipファイルアーカイブ（0249_release_package_9c5fd81e.zip）をダウンロードしてください。", "\n\n", "https://github.com/ARMmbed/DAPLink/releases/tag/v0249", "\n\n", "アーカイブをunzipします。多数のファイルが含まれていますが、micro:bit用のファームウェアは以下のファイルになります。", "\n\n", "0249_kl26z_microbit_0x8000.hex", "\n\n", "\n", "DAPLinkファームウェアの書き込み", "\n\n", "続いて、このDAPLinkファームウェアをmicro:bitに書き込みます。", "\n\n", "\n", "micro:bit 背面のリセットボタンを押しながら、USBケーブルでPCと接続する", "\n", "\n", "MAINTENACE", " という名前のドライブがマウントされるので、", "0249_kl26z_microbit_0x8000.hex", " ファイルをコピーする", "\n", "\n\n", "書き込みが終わるとUSBドライブはアンマウントられ、再びマウントされます。", "MICROBIT", " という名前のドライブがマウントされれば成功です。", "\n\n", "\n", "MakeCode for micro:bit から使ってみる", "\n\n", "これで準備が出来たので、MakeCodeからWebUSBの機能を使ってみます。", "\n\n", "\n", "MakeCodeのベータ版ページを開く", "\n", "https://makecode.microbit.org/beta#editor", "\n", "設定（画面右上の歯車のアイコン）から、Pair device を選択する", "\n", "\n\n", "\n\n", "\n", "表示されたデバイスを選び、接続ボタンを押す", "\n", "\n\n", "\n\n", "これでデバイスが設定されます。ダウンロードボタンを押すと、ファイルとしてダウンロードされるのではなく、デバイス側直接書き込まれます。", "\n\n", "以上！！", "\n\n", "これだけだと、「デバイスに直接書き込めるので、ホストパソコン側にファイルが増えなくて便利」だけなのですが、WebUSBの機能を使ったNode.jsパッケージがArmから公開されています。", "\n\n", "\n", "DAP.js を使う", "\n\n", "DAP.jsは、CMSIS-DAP のJavaScriptインタフェースです。CMSIS-DAPを通じてArmマイコンをNode.jsや、WebUSBを使ってブラウザから制御することが出来ます。詳細は、DAP.jsリポジトリの説明をご覧下さい。", "\n\n", "https://github.com/ARMmbed/dapjs/", "\n\n", "以下は、WebUSBが有効なDAPLinkファームウェアが載ったmicro:bitを繋いで、", "examples/read-registers/", " のサンプルコードを動作させた例です。", "\n\n", "$ node webusb.js \nSelect a device to read registers:\n1: BBC micro:bit CMSIS-DAP\nR0: 00000000\nR1: 200021e4\nR2: 00000000\nR3: 00000000\nR4: 00000018\nR5: 20002ce4\nR6: 200024d4\nR7: 0002f10f\nR8: 00000000\nR9: 00000000\nR10: 00000000\nR11: 00000000\nR12: 0002f299\nR13: 20003fec\nR14: 0002f2a7\nR15: 0001a832\n", "\n\n", "いかがでしょうか？Armマイコン（Cortex-M0）の汎用レジスタの内容が表示されています。", "\n今までは、専用デバッガだったり、OpenOCD/pyOCDとGDB等のデバッグソフトウェアを組み合わせて使ったりしなければ、マイコンのデバッグ制御が出来ませんでした。WebUSBなDAPLinkファームウェアとDAP.jsの組み合わせで、一気に可能性が広がりそうです。", "\nコアレジスタやメモリを操作するためのDAPにアクセスする機能は全て実装されているので、そのうちウェブブラウザ上でマイコンのデバッグが出来るようになるのかも知れませんね。", "\n"], "code": ["$ node webusb.js \nSelect a device to read registers:\n1: BBC micro:bit CMSIS-DAP\nR0: 00000000\nR1: 200021e4\nR2: 00000000\nR3: 00000000\nR4: 00000018\nR5: 20002ce4\nR6: 200024d4\nR7: 0002f10f\nR8: 00000000\nR9: 00000000\nR10: 00000000\nR11: 00000000\nR12: 0002f299\nR13: 20003fec\nR14: 0002f2a7\nR15: 0001a832\n"]},
{"title": ["C++ - auto&& vs auto& vs auto"], "body": ["C++ is difficult...T_T", "\n\n", "\n", "Choose auto x when you want to work with copies.", "\n", "Choose auto &x when you want to work with original items and may modify them.", "\n", "Choose auto const &x when you want to work with original items and will not modify them.", "\n", "Use auto && is a ", "Universal Reference", ".", "\n", "\n\n", "https://stackoverflow.com/questions/29859796/c-auto-vs-auto", "\n", "https://zhuanlan.zhihu.com/p/25148592", "\n"], "code": []},
{"title": ["awscliをインストールしたがcommand not foundになる場合の対策"], "body": ["公式に従って", "下記のようにインストールしてみましたが", "\n\n", "pip install awscli --upgrade --user\n", "\n\n", "結果下記のようにそんなコマンドは存在しないと言われた", "\n\n", "root@cfecaa5a4d7c:/tmp# aws\nbash: aws: command not found\n", "\n\n", "--ignore-installed six", "オプションを付けて再度実行してみる", "\n\n", "pip install awscli --ignore-installed six\n", "\n\n", "すると無事使えるようになりました", "\n\n", "root@cfecaa5a4d7c:/tmp# aws\nusage: aws [options] <command> <subcommand> [<subcommand> ...] [parameters]\nTo see help text, you can run:\n\n  aws help\n  aws <command> help\n  aws <command> <subcommand> help\n  aws: error: too few arguments\n", "\n"], "code": ["pip install awscli --upgrade --user\n", "root@cfecaa5a4d7c:/tmp# aws\nbash: aws: command not found\n", "pip install awscli --ignore-installed six\n", "root@cfecaa5a4d7c:/tmp# aws\nusage: aws [options] <command> <subcommand> [<subcommand> ...] [parameters]\nTo see help text, you can run:\n\n  aws help\n  aws <command> help\n  aws <command> <subcommand> help\n  aws: error: too few arguments\n"]},
{"title": ["C++ - Pointer vs Instance"], "body": ["It's worth to take a look. Very useful explain.", "\n\n", "https://stackoverflow.com/questions/96285/in-c-i-cannot-grasp-pointers-and-classes", "\n", "https://stackoverflow.com/questions/8931547/using-class-pointers-vs-instance", "\n"], "code": []},
{"title": ["Web上でちょっと本気の3Dアクションゲームを作る"], "body": ["\n", "\n", "動機", "\n\n", "Web上で3D表現するにはUnityかWebGLの選択肢に大体落ち着くと思います。", "\nUnityに関してはとても素晴らしいフレームワークなのですが、", "\nWeb上で動かすにはプラグインが必要なのと、Unity自体の仕組みやライセンスにロックオンされるのが個人的にあまり好きではなかったので、オープンな仕様でプラグイン不要なWebGLのほうが好きです。", "\nWebGLのフレームワークも", "A-Frame", "とか最近色々増えてきましたが古参でライブラリが充実している", "ThreeJS", "でちょっと本気でアクションゲームぽいものを作ってみました。", "\nアクションゲームを作ろうとした時に厄介なのが、3Dオブジェクトの当たり判定だと思います。", "\nその辺に関してまとめられてる情報が少ない気がしたので、", "\n今回は", "Ammo.js（物理エンジン）", "を使ってキャラクターを地形に沿って移動できたり、落ちてくる物体を動かせたりできるようにしました。", "\n\n", "\n", "デモ", "\n\n", "・デバックモードのスクショ", "\n", "\n\n", "・プレイヤーモードのスクショ", "\n", "\n\n", "実際に動くデモ（Github Pages）", "\n", "https://teradonburi.github.io/threejs/demo", "\nちなみに色々盛り込みすぎて結構重いです。", "\nスペックの低いノートPCだと動かないと思います。", "\n\n", "コマンドリスト", "\n・地面クリック→クリックした位置にキャラクター移動", "\n・Wキー→カメラ正面方向にキャラクター移動", "\n・Sキー→カメラ背面方向にキャラクター移動", "\n・Aキー→カメラ左方向にキャラクター移動", "\n・Dキー→カメラ右方向にキャラクター移動", "\n・スペースキー→キャラクターがジャンプ", "\n・Cキー→カメラ切り替え（デバッグモード→プレイヤーモード）", "\n・落ちてくるオブジェクトをドラッグ→持ち上げることができる（デバッグモードのみ）", "\n\n", "デモで必要なファイルはソースコードの以下のファイルです。", "\n・demo.html", "\n・demoフォルダ以下のファイル", "\n特にAPIやサーバサイドの処理などはしていません。", "\n\n", "\n", "環境構築", "\n\n", "ソースコード", "\n", "https://github.com/teradonburi/threejs", "\n\n", "以下のコマンドで起動できます。", "\nTHREE.js r95を使用してます。", "\nwebpack4とbrowser-syncで開発しました。", "\n\n", "$ ", "brew ", "install ", "yarn\n", "$ ", "yarn global add browser-sync\n", "$ ", "yarn\n", "$ ", "yarn dev\n", "\n\n", "以下ソースコードというかThreeJSでの実装方法に関して色々解説", "\n\n", "\n", "前準備について", "\n\n", "モダンなJS（ES6以降文法）で書きたかったのでwebpackを導入してます。", "\nThreeJSは色々なexamplesが充実していますが、古いexamplesとかはES6のimportに対応してなかったりしてツラミがあったりします。", "\nwebpackのProvidePluginを使うことでTHREEオブジェクトをグローバル参照することが可能になります。", "\nTHREE.DragControlsなどはwebpackのresolveに指定することでimportすることが可能になります。", "\n\n", "\n", "webpack.config.js", "\n", "const", " ", "webpack", " ", "=", " ", "require", "(", "'webpack'", ")", "\n", "const", " ", "path", " ", "=", " ", "require", "(", "'path'", ")", "\n\n", "module", ".", "exports", " ", "=", " ", "{", "\n  ", "mode", ":", " ", "'development'", ",", "\n  ", "devtool", ":", " ", "'inline-source-map'", ",", "\n  ", "entry", ":", " ", "[", "'babel-polyfill'", ",", " ", "'./app.js'", "],", "\n  ", "output", ":", " ", "{", "\n    ", "// 出力ファイル名", "\n    ", "filename", ":", " ", "'bundle.js'", ",", "\n  ", "},", "\n  ", "resolve", ":", " ", "{", "\n    ", "// 使用したいコントロールやレンダラを定義しておきます", "\n    ", "alias", ":", " ", "{", "\n      ", "// 物体ドラッグ", "\n      ", "'three/DragControls'", ":", " ", "path", ".", "join", "(", "__dirname", ",", " ", "'node_modules/three/examples/js/controls/DragControls.js'", "),", "\n      ", "// カメラ制御", "\n      ", "'three/OrbitControls'", ":", " ", "path", ".", "join", "(", "__dirname", ",", " ", "'node_modules/three/examples/js/controls/OrbitControls.js'", "),", "\n      ", "// GLTF", "\n      ", "'three/GLTFLoader'", ":", " ", "path", ".", "join", "(", "__dirname", ",", " ", "'node_modules/three/examples/js/loaders/GLTFLoader.js'", "),", "\n      ", "// DracoLoader", "\n      ", "'three/Draco'", ":", " ", "path", ".", "join", "(", "__dirname", ",", " ", "'node_modules/three/examples/js/loaders/DRACOLoader.js'", "),", "\n      ", "// Particle", "\n      ", "'three/Particle'", ":", " ", "path", ".", "join", "(", "__dirname", ",", " ", "'node_modules/three/examples/js/GPUParticleSystem.js'", "),", "\n      ", "// Water", "\n      ", "'three/Water'", ":", " ", "path", ".", "join", "(", "__dirname", ",", " ", "'node_modules/three/examples/js/objects/Water.js'", "),", "\n      ", "// Sky", "\n      ", "'three/Sky'", ":", " ", "path", ".", "join", "(", "__dirname", ",", " ", "'node_modules/three/examples/js/objects/Sky.js'", "),", "\n    ", "},", "\n    ", "extensions", ":", " ", "[", "\n      ", "'.js'", ",", "\n    ", "],", "\n  ", "},", "\n  ", "module", ":", " ", "{", "\n    ", "rules", ":", " ", "[", "\n      ", "{", "\n        ", "// 拡張子 .js の場合", "\n        ", "test", ":", " ", "/", "\\.", "js$/", ",", "\n        ", "use", ":", " ", "[", "\n          ", "{", "\n            ", "loader", ":", " ", "'babel-loader'", ",", "\n            ", "query", ":", " ", "{", "\n              ", "cacheDirectory", ":", " ", "true", ",", "\n              ", "presets", ":", " ", "[", "\n                ", "[", "\n                  ", "'@babel/env'", ",", " ", "{", "\n                    ", "targets", ":", " ", "{", "\n                      ", "browsers", ":", " ", "[", "\n                        ", "'>0.25%'", ",", "\n                        ", "'not ie 11'", ",", "\n                        ", "'not op_mini all'", ",", "\n                      ", "],", "\n                    ", "},", "\n                    ", "modules", ":", " ", "false", ",", "\n                  ", "},", "\n                ", "],", "\n              ", "],", "\n              ", "plugins", ":", " ", "[", "'babel-plugin-transform-class-properties'", "],", "\n            ", "},", "\n          ", "},", "\n        ", "],", "\n      ", "},", "\n    ", "],", "\n  ", "},", "\n  ", "plugins", ":", " ", "[", "\n    ", "// THREE.Scene などの形式で three.js のオブジェクトを使用できるようにします。", "\n    ", "new", " ", "webpack", ".", "ProvidePlugin", "({", "\n      ", "'THREE'", ":", " ", "'three/build/three'", ",", "\n    ", "}),", "\n  ", "],", "\n", "}", "\n", "\n", "\n\n", "ImprovedNoise.jsはvarのグローバル変数で定義されているためか", "\nwebpackではどうしてもimportできなかったのでscriptタグで読み込んでいます。", "\nimport-loaderやexpose-loaderも試してみたけど無理そう・・・？", "\n（もしできた方がいたら教えていただけると嬉しいです。）", "\nammo.jsに関しては内部的にfsモジュールを使っているため、webpackのブラウザ版ビルドに含めることは無理そうです。", "\n\n", "\n", "index.html", "\n", "<!DOCTYPE html>", "\n", "<html", " ", "lang=", "\"ja\"", ">", "\n  ", "<head>", "\n    ", "<meta", " ", "charset=", "\"utf-8\"", " ", "/>", "\n    ", "<title>", "タイトル", "</title>", "\n    ", "<meta", " ", "name=", "\"viewport\"", " ", "content=", "\"width=device-width, initial-scale=1\"", " ", "/>", "\n    ", "<style>", "\n  ", "body", " ", "{", "\n    ", "margin", ":", " ", "0", ";", "\n    ", "overflow", ":", " ", "hidden", ";", "\n  ", "}", "\n    ", "</style>", "\n  ", "</head>", "\n", "<body>", "\n  ", "<div", " ", "id=", "\"startButton\"", ">", "Click to start (※音が出ます)", "</div>", "\n  ", "<script ", "type=", "\"text/javascript\"", " ", "src=", "'node_modules/three/examples/js/ImprovedNoise.js'", "></script>", "\n  ", "<script ", "type=", "\"text/javascript\"", " ", "src=", "\"node_modules/three/examples/js/libs/ammo.js\"", "></script>", "\n  ", "<script ", "type=", "\"text/javascript\"", " ", "src=", "\"dist/bundle.js\"", "></script>", "\n", "</body>", "\n", "</html>", "\n", "\n", "\n\n", "\n", "処理本体", "\n\n", "起動時の処理はapp.jsに記述してあります。", "\nWebAudio周りのautoplayには制限がかかっているため、音の再生にはユーザアクションが必要です。", "\n(なお、Chrome 70でautoplayの制限は解除されるっぽい)", "\nそのため、スタートボタンをクリックしたらゲームが開始する仕組みにしています。", "\n\n", "\n", "app.js", "\n", "import", " ", "Game", " ", "from", " ", "'./game'", "\n\n", "const", " ", "startButton", " ", "=", " ", "document", ".", "getElementById", "(", "'startButton'", ")", "\n\n", "function", " ", "init", "()", " ", "{", "\n  ", "startButton", ".", "remove", "()", "\n  ", "const", " ", "game", " ", "=", " ", "new", " ", "Game", "()", "\n  ", "game", ".", "init", "()", "\n", "}", "\n\n", "startButton", ".", "addEventListener", "(", "'click'", ",", " ", "init", ")", "\n", "\n", "\n\n", "game.jsの基本構造は次のようになっています。", "\ninitメソッドで初期化してrequestAnimationFrameメソッドでrenderメソッドを繰り返し処理させます。", "\n\n", "\n", "game.js", "\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n\n    ", "requestAnimationFrame", "(", "this", ".", "loop", ")", "\n  ", "}", "\n\n  ", "loop", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "requestAnimationFrame", "(", "this", ".", "loop", ")", "\n    ", "this", ".", "render", "(", "frame", ")", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n  ", "}", "\n", "}", "\n", "\n", "\n\n", "メインの処理はgame.jsに記述してあります。", "\n以下の機能をクラス化して実装しています。", "\n\n", "\n", "2D表示（スプライトとTWEENアニメーション）", "\n", "Axisデバッグオブジェクトの表示", "\n", "Gridデバッグオブジェクトの表示", "\n", "Camera処理", "\n", "CubeMap", "\n", "Lighting(DirectionalLight、AmbientLight）", "\n", "各種Loader(Audio、テクスチャ、GLTFモデル)", "\n", "ハイトマップ", "\n", "フォグ", "\n", "Primitiveオブジェクトの作成（Sphere、Box、Cylinder、Cone）", "\n", "GLTFモデル描画（スキンメッシュ＋アニメーション）", "\n", "Physics演算（AmmoJS）", "\n", "ドラッグ操作", "\n", "レイキャスト", "\n", "キーボード操作", "\n", "オーディオ再生", "\n", "3Dオーディオ再生", "\n", "パーティクル", "\n", "海の表現", "\n", "空の表現", "\n", "\n\n", "\n", "レンダラとシーンの作成", "\n\n", "シーンに描画するオブジェクトを追加して、レンダラーで描画します。", "\nカメラの見ている範囲をhelperで表示して、デバッグカメラで俯瞰する以下はサンプルです。", "\n画面リサイズに対応するためにonResizeメソッドでリサイズ時にレンダリングを最適化します。", "\n\n", "\n", "game.js", "\n", "import", " ", "Render", " ", "from", " ", "'./src/Render'", "\n", "import", " ", "Scene", " ", "from", " ", "'./src/Scene'", "\n", "import", " ", "Clock", " ", "from", " ", "'./src/Clock'", "\n", "import", " ", "Camera3D", " ", "from", " ", "'./src/Camera3D'", "\n", "import", " ", "Vec3", " ", "from", " ", "'./src/Vec3'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// アニメーションとかで使う時間用", "\n    ", "this", ".", "clock", " ", "=", " ", "new", " ", "Clock", "()", "\n    ", "// シーン作成", "\n    ", "this", ".", "scene", " ", "=", " ", "new", " ", "Scene", "()", "\n    ", "// レンダラー作成", "\n    ", "this", ".", "renderer", " ", "=", " ", "new", " ", "Render", "(", "this", ".", "onResize", ")", "\n\n    ", "// 3Dカメラ", "\n    ", "const", " ", "eye", " ", "=", " ", "new", " ", "Vec3", "(", "0", ",", " ", "50", ",", " ", "-", "150", ")", "\n    ", "const", " ", "lookAt", " ", "=", " ", "new", " ", "Vec3", "(", "0", ",", " ", "0", ",", " ", "0", ")", "\n    ", "this", ".", "camera", " ", "=", " ", "new", " ", "Camera3D", "(", "eye", ",", " ", "lookAt", ",", " ", "1", ",", " ", "100", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "camera", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "camera", ".", "helper", ")", " ", "// helper", "\n\n    ", "// コントロールカメラ", "\n    ", "const", " ", "debugEye", " ", "=", " ", "new", " ", "Vec3", "(", "100", ",", " ", "200", ",", " ", "200", ")", "\n    ", "const", " ", "debugLookAt", " ", "=", " ", "new", " ", "Vec3", "(", "0", ",", " ", "0", ",", " ", "0", ")", "\n    ", "this", ".", "controlCamera", " ", "=", " ", "new", " ", "Camera3D", "(", "debugEye", ",", " ", "debugLookAt", ",", " ", "1", ",", " ", "4000", ")", "\n    ", "this", ".", "controlCamera", ".", "controls", " ", "=", " ", "this", ".", "controlCamera", ".", "createControls", "()", "\n\n    ", "requestAnimationFrame", "(", "this", ".", "loop", ")", "\n  ", "}", "\n\n  ", "onResize", " ", "=", " ", "()", " ", "=>", "  ", "{", "\n    ", "this", ".", "renderer", ".", "resize", "()", "\n\n    ", "const", " ", "cameras", " ", "=", " ", "[", "this", ".", "camera", ",", " ", "this", ".", "controlCamera", "]", "\n    ", "for", " ", "(", "let", " ", "camera", " ", "of", " ", "cameras", ")", " ", "{", "\n      ", "camera", ".", "resize", "()", "\n    ", "}", "\n    ", "this", ".", "sprite", ".", "onResizeWindow", "()", "\n  ", "}", "\n\n  ", "loop", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "requestAnimationFrame", "(", "this", ".", "loop", ")", "\n    ", "this", ".", "render", "(", "frame", ")", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "this", ".", "controlCamera", ".", "controls", ".", "update", "()", "\n    ", "this", ".", "renderer", ".", "setClearColor", "(", "0x000000", ",", " ", "0", ")", "\n    ", "this", ".", "renderer", ".", "clear", "(", "true", ",", " ", "true", ",", " ", "true", ")", "\n    ", "this", ".", "renderer", ".", "render", "(", "this", ".", "scene", ",", " ", "this", ".", "controlCamera", ")", "\n  ", "}", "\n", "}", "\n", "\n", "\n\n", "実行結果です。左クリックしながらドラッグすると回転できます。", "\n右クリックしながらドラッグすると平行移動できます。", "\nマウスホイールで拡大縮小できます。", "\n\n", "\n\n", "\n", "デバッグオブジェクトの表示", "\n\n", "デバッグ用に他のオブジェクトとの位置関係を把握しやすいように軸（Axis）とグリッド（Grid）を描画します。", "\n描画するにはsceneに3Dオブジェクトを追加するだけです。", "\n\n", "\n", "game.js", "\n", "import", " ", "Axis", " ", "from", " ", "'./src/Axis'", "\n", "import", " ", "Grid", " ", "from", " ", "'./src/Grid'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// Grid", "\n    ", "this", ".", "grid", " ", "=", " ", "new", " ", "Grid", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "grid", ")", "\n    ", "// Axis", "\n    ", "this", ".", "axis", " ", "=", " ", "new", " ", "Axis", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "axis", ")", "\n  ", "}", "\n\n  ", "...", "略", "\n", "}", "\n", "\n", "\n\n", "軸とグリッドが描画されます。", "\n", "\n\n", "\n", "Primitiveオブジェクトと光源（DirectionalLight、AmbientLight）の作成", "\n\n", "Sphere、Box、Cylinder、Coneの各種基本オブジェクトを作成します。", "\n\n", "\n", "game.js", "\n", "import", " ", "Sphere", " ", "from", " ", "'./src/Sphere'", "\n", "import", " ", "Box", " ", "from", " ", "'./src/Box'", "\n", "import", " ", "Cylinder", " ", "from", " ", "'./src/Cylinder'", "\n", "import", " ", "Cone", " ", "from", " ", "'./src/Cone'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// Sphere", "\n    ", "const", " ", "sphere", " ", "=", " ", "new", " ", "Sphere", "(", "3", ")", "\n    ", "sphere", ".", "position", ".", "set", "(", "30", ",", " ", "0", ",", " ", "0", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "sphere", ")", "\n\n    ", "// Box", "\n    ", "const", " ", "box", " ", "=", " ", "new", " ", "Box", "(", "new", " ", "Vec3", "(", "2", ",", " ", "10", ",", " ", "4", "))", "\n    ", "box", ".", "position", ".", "set", "(", "10", ",", " ", "0", ",", " ", "0", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "box", ")", "\n\n    ", "// Cylinder", "\n    ", "const", " ", "cylinder", " ", "=", " ", "new", " ", "Cylinder", "(", "3", ",", " ", "10", ")", "\n    ", "cylinder", ".", "position", ".", "set", "(", "-", "10", ",", " ", "0", ",", " ", "0", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "cylinder", ")", "\n\n    ", "// Cone", "\n    ", "const", " ", "cone", " ", "=", " ", "new", " ", "Cone", "(", "3", ",", " ", "8", ")", "\n    ", "cone", ".", "position", ".", "set", "(", "-", "30", ",", " ", "0", ",", " ", "0", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "cone", ")", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "...", "略", "\n", "}", "\n", "\n", "\n\n", "\n\n", "軸上に何かあるけど、真っ暗で見えないので光源を追加します。", "\nDirectionalLightは向きを持つ光源です。太陽の差し込む光をイメージしたらわかりやすいでしょう。", "\nAmbientLightはすべての３Dオブジェクトに均一の明るさを加算する光源です。", "\n\n", "\n", "game.js", "\n", "import", " ", "DirectionalLight", " ", "from", " ", "'./src/DirectionalLight'", "\n", "import", " ", "AmbientLight", " ", "from", " ", "'./src/AmbientLight'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// lighting", "\n    ", "this", ".", "light", " ", "=", " ", "new", " ", "DirectionalLight", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "light", ")", "\n    ", "// AmbientLight", "\n    ", "this", ".", "ambient", " ", "=", " ", "new", " ", "AmbientLight", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "ambient", ")", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "...", "略", "\n", "}", "\n", "\n", "\n\n", "基本オブジェクトが描画されました。", "\n", "\n\n", "\n", "CubeMap", "\n\n", "背景を描画します。CubeMapという立方体状のテクスチャを使うことで表現することができます。", "\nCubeMap生成後、sceneのbackgroundにCubeMapを指定します。", "\n\n", "\n", "game.js", "\n", "import", " ", "CubeMap", " ", "from", " ", "'./src/CubeMap'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// シーン作成", "\n    ", "this", ".", "scene", " ", "=", " ", "new", " ", "Scene", "()", "\n    ", "this", ".", "cubeMap", " ", "=", " ", "new", " ", "CubeMap", "(", "'textures/'", ")", "\n    ", "this", ".", "scene", ".", "background", " ", "=", " ", "this", ".", "cubeMap", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "...", "略", "\n", "}", "\n", "\n", "\n\n", "texturesフォルダ以下のnx.png, ny.png, nz.png, px.png, py.png, pz.pngを利用してCubeMapを作成しています。", "\n背景を変えたい場合は適宜差し替えてください。", "\n", "\n\n", "\n", "フォグ", "\n\n", "距離フォグを設定します。カメラから遠くにある3Dオブジェクトは霞んで見えます。", "\nsceneのfogプロパティにfogオブジェクトを追加します。", "\n\n", "\n", "game.js", "\n", "import", " ", "Fog", " ", "from", " ", "'./src/Fog'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// シーン作成", "\n    ", "this", ".", "scene", " ", "=", " ", "new", " ", "Scene", "()", "\n    ", "this", ".", "scene", ".", "fog", " ", "=", " ", "new", " ", "Fog", "()", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "...", "略", "\n", "}", "\n", "\n", "\n\n", "カメラを中心位置から遠くにすると3Dオブジェクトが霞んで見えます。", "\n", "\n\n", "\n", "パーティクル", "\n\n", "大量の粒子の動きを表現します。負荷が高い処理なので注意が必要です。", "\n", "このサンプル", "を参考にTHREE.GPUParticleSystemクラスを使って実装しているのでGPUの性能に依存します。", "\n\n", "\n", "game.js", "\n", "import", " ", "Particle", " ", "from", " ", "'./src/Particle'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// Particle", "\n    ", "this", ".", "particle", " ", "=", " ", "new", " ", "Particle", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "particle", ")", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "// パーティクルの動きをシミュレーションする", "\n    ", "const", " ", "horizontalSpeed", " ", "=", " ", "1.5", "\n    ", "const", " ", "verticalSpeed", " ", "=", " ", "1.33", "\n    ", "this", ".", "particle", ".", "simulate", "(", "delta", ",", " ", "new", " ", "Vec3", "(", "Math", ".", "sin", "(", "this", ".", "particle", ".", "tick", " ", "*", " ", "horizontalSpeed", ")", " ", "*", " ", "20", ",", " ", "Math", ".", "sin", "(", "this", ".", "particle", ".", "tick", " ", "*", " ", "verticalSpeed", ")", " ", "*", " ", "10", " ", "+", " ", "30", ",", " ", "Math", ".", "sin", "(", "this", ".", "particle", ".", "tick", " ", "*", " ", "horizontalSpeed", " ", "+", " ", "verticalSpeed", ")", " ", "*", " ", "5", "))", "\n\n    ", "// デバッグカメラの操作", "\n    ", "this", ".", "controlCamera", ".", "controls", ".", "update", "()", "\n    ", "// 描画画面をクリアする", "\n    ", "this", ".", "renderer", ".", "setClearColor", "(", "0x000000", ",", " ", "0", ")", "\n    ", "this", ".", "renderer", ".", "clear", "(", "true", ",", " ", "true", ",", " ", "true", ")", "\n    ", "// 描画", "\n    ", "this", ".", "renderer", ".", "render", "(", "this", ".", "scene", ",", " ", "this", ".", "controlCamera", ")", "\n  ", "}", "\n", "}", "\n", "\n", "\n\n", "粒子が飛び回ります。", "\n", "\n\n", "\n", "空と海の表現", "\n\n", "このサンプルを参考に空と海を表現します。", "\n今回はSkyの表現と同時には使えないのでCubeMapをオフにしています。", "\nレンダリングがおかしくなるのでParticleより前にscene追加する必要があります。", "\nthreejsはシーンに追加されたオブジェクトの奥行きに対してソートして描画を最適化しています。", "\n半透明でないオブジェクトに関しては問題ないのですが、", "\n半透明のオブジェクトの場合は描画の順番でレンダリングがくずれるのでシーンの追加順番を入れ替えます。", "\n\n", "\n", "game.js", "\n", "// import CubeMap from './src/CubeMap'", "\n", "import", " ", "Water", " ", "from", " ", "'./src/Water'", "\n", "import", " ", "Sky", " ", "from", " ", "'./src/Sky'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n    ", "this", ".", "scene", " ", "=", " ", "new", " ", "Scene", "()", "\n    ", "// this.cubeMap = new CubeMap('textures/')", "\n    ", "// this.scene.background = this.cubeMap", "\n\n    ", "// Sky", "\n    ", "this", ".", "sky", " ", "=", " ", "new", " ", "Sky", "()", "\n    ", "this", ".", "sky", ".", "setEnv", "({", "turbidity", ":", " ", "10", ",", " ", "rayleigh", ":", " ", "2", ",", " ", "luminance", ":", " ", "1", ",", " ", "mieCoefficient", ":", " ", "0.005", ",", " ", "mieDirectionalG", ":", " ", "0.8", "})", "\n    ", "this", ".", "sky", ".", "setLight", "(", "this", ".", "light", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "sky", ")", "\n\n    ", "// Water", "\n    ", "this", ".", "water", " ", "=", " ", "new", " ", "Water", "(", "this", ".", "light", ")", "\n    ", "this", ".", "water", ".", "setEnv", "({", "distortionScale", ":", " ", "3.7", ",", " ", "alpha", ":", " ", "0.95", "})", "\n    ", "this", ".", "water", ".", "setLight", "(", "this", ".", "light", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "water", ")", "\n\n    ", "// Particle", "\n    ", "this", ".", "particle", " ", "=", " ", "new", " ", "Particle", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "particle", ")", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "// 波を動かす", "\n    ", "this", ".", "water", ".", "update", "()", "\n\n    ", "...", "\n    ", "// 描画", "\n  ", "}", "\n", "}", "\n", "\n", "\n\n", "海と空が表示されました", "\n", "\n\n", "\n", "ハイトマップ", "\n\n", "隆起した凸凹の地面を生成します。グリッドの高さを色々変化させたポリゴンをハイトマップと呼びます。", "\n\n", "\n", "game.js", "\n", "import", " ", "HeightMap", " ", "from", " ", "'./src/HeightMap'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n    ", "// HeightMap", "\n    ", "this", ".", "heightMap", " ", "=", " ", "new", " ", "HeightMap", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "heightMap", ")", "\n\n    ", "...", "\n  ", "}", "\n\n", "}", "\n", "\n", "\n\n", "パーリンノイズより生成しているため、地面の形状を毎回ランダムに生成しています。", "\n", "\n\n", "\n", "GLTFモデル描画", "\n\n", "3Dモデルファイルを表示します。木とキャラクター（SkinedMesh）を描画しています。", "\nThreeJSは標準でGLTFフォーマットのモデルファイルのローディングをサポートしています。", "\n木は", "glTF Procedural Tree", "というサイトで作成できます。", "\nキャラクターは今回はThreeJS付属のサンプルモデルを使いましたが、", "\n自分で作成する際はBlenderの", "glTF-Blender-Exporter", "プラグイン等を使うといいでしょう。", "\n\n", "\n", "game.js", "\n", "import", " ", "Loader", " ", "from", " ", "'./src/Loader'", "\n", "import", " ", "GLTFModel", " ", "from", " ", "'./src/GLTFModel'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n    ", "// Loader", "\n    ", "this", ".", "loader", " ", "=", " ", "new", " ", "Loader", "()", "\n\n    ", "// GLTF", "\n    ", "const", " ", "tree", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadGLTFModel", "(", "'./model/tree.glb'", ")", "\n    ", "const", " ", "treePositions", " ", "=", " ", "[", "\n      ", "new", " ", "Vec3", "(", "132", ",", " ", "20", ",", " ", "-", "190", "),", "\n      ", "new", " ", "Vec3", "(", "216", ",", " ", "20", ",", " ", "80", "),", "\n      ", "new", " ", "Vec3", "(", "-", "82", ",", " ", "20", ",", " ", "222", "),", "\n      ", "new", " ", "Vec3", "(", "13", ",", " ", "20", ",", " ", "-", "125", "),", "\n      ", "new", " ", "Vec3", "(", "-", "100", ",", " ", "20", ",", " ", "31", "),", "\n    ", "]", "\n    ", "this", ".", "trees", " ", "=", " ", "[]", "\n    ", "for", " ", "(", "let", " ", "i", " ", "=", " ", "0", ";", " ", "i", " ", "<", " ", "5", ";", " ", "i", "++", ")", " ", "{", "\n      ", "this", ".", "trees", ".", "push", "(", "new", " ", "GLTFModel", "(", "tree", ",", " ", "true", ",", " ", "true", "))", "\n      ", "this", ".", "trees", "[", "i", "].", "init", "(", "treePositions", "[", "i", "],", " ", "0", ",", " ", "8", ")", "\n      ", "this", ".", "scene", ".", "add", "(", "this", ".", "trees", "[", "i", "])", "\n    ", "}", "\n\n    ", "// GLTF Skin", "\n    ", "const", " ", "gltf", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadGLTFModel", "(", "'./model/CesiumMan.gltf'", ")", "\n    ", "this", ".", "model", " ", "=", " ", "new", " ", "GLTFModel", "(", "gltf", ",", " ", "true", ")", "\n    ", "this", ".", "model", ".", "init", "(", "new", " ", "Vec3", "(", "0", ",", " ", "20", ",", " ", "0", "),", " ", "-", "Math", ".", "PI", "/", "2", ",", " ", "10", ")", "\n    ", "this", ".", "model", ".", "actions", "[", "0", "].", "play", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "model", ")", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "this", ".", "model", ".", "mixer", " ", "&&", " ", "this", ".", "model", ".", "mixer", ".", "update", "(", "delta", ")", " ", "// モデルアニメーション更新", "\n\n    ", "...", "\n    ", "// 描画", "\n  ", "}", "\n", "}", "\n", "\n", "\n\n", "\n\n", "\n", "2D表示", "\n\n", "２D画像を描画します。", "\n２D用のOrthoカメラを作成して、2D用のシーンを作成します。", "\n2D画像オブジェクト（スプライト）は2D用のシーンに作成します。", "\n2D描画は基本的に3D描画の後に行います。", "\n\n", "\n", "game.js", "\n", "import", " ", "Camera2D", " ", "from", " ", "'./src/Camera2D'", "\n", "import", " ", "Sprite", " ", "from", " ", "'./src/Sprite'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// シーン作成", "\n    ", "this", ".", "scene", " ", "=", " ", "new", " ", "Scene", "()", "\n    ", "this", ".", "sceneOrtho", " ", "=", " ", "new", " ", "Scene", "()", "\n\n    ", "// 2Dカメラ", "\n    ", "this", ".", "cameraOrtho", " ", "=", " ", "new", " ", "Camera2D", "()", "\n\n    ", "// Sprite", "\n    ", "const", " ", "texture", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadTexture", "(", "'./textures/sprite1.png'", ")", "\n    ", "this", ".", "sprite", " ", "=", " ", "new", " ", "Sprite", "(", "texture", ")", "\n    ", "this", ".", "sprite", ".", "setPos", "(", "-", "1", ",", " ", "1", ")", "\n    ", "this", ".", "sprite", ".", "setCenter", "({", "right", ":", " ", "true", ",", " ", "bottom", ":", " ", "true", "})", "\n    ", "this", ".", "sprite", ".", "setSize", "(", "64", ",", " ", "64", ")", "\n    ", "this", ".", "sceneOrtho", ".", "add", "(", "this", ".", "sprite", ")", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "onResize", " ", "=", " ", "()", " ", "=>", "  ", "{", "\n    ", "this", ".", "renderer", ".", "resize", "()", "\n\n    ", "// 2Dカメラ追加", "\n    ", "const", " ", "cameras", " ", "=", " ", "[", "this", ".", "camera", ",", " ", "this", ".", "cameraOrtho", ",", " ", "this", ".", "controlCamera", "]", "\n    ", "for", " ", "(", "let", " ", "camera", " ", "of", " ", "cameras", ")", " ", "{", "\n      ", "camera", ".", "resize", "()", "\n    ", "}", "\n    ", "this", ".", "sprite", ".", "onResizeWindow", "()", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "this", ".", "controlCamera", ".", "controls", ".", "update", "()", "\n    ", "this", ".", "renderer", ".", "setClearColor", "(", "0x000000", ",", " ", "0", ")", "\n    ", "this", ".", "renderer", ".", "clear", "(", "true", ",", " ", "true", ",", " ", "true", ")", "\n    ", "this", ".", "renderer", ".", "render", "(", "this", ".", "scene", ",", " ", "this", ".", "controlCamera", ")", "\n    ", "// 2D描画前にレンダラのzバッファをクリアする", "\n    ", "this", ".", "renderer", ".", "clearDepth", "()", "\n    ", "// 2D描画", "\n    ", "this", ".", "renderer", ".", "render", "(", "this", ".", "sceneOrtho", ",", " ", "this", ".", "cameraOrtho", ")", "\n  ", "}", "\n", "}", "\n", "\n", "\n\n", "画面左上に画像が表示されます", "\n", "\n\n", "\n", "TWEENアニメーション", "\n\n", "tween.js", "を使うことで簡易的にtweenアニメーションを行うことができます。今回はスプライトを動かしてみます。", "\n（もちろん３Dオブジェクトのtweenアニメーションも同様に可能）", "\n\n", "\n", "game.js", "\n", "import", " ", "TWEEN", " ", "from", " ", "'@tweenjs/tween.js'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "const", " ", "coords", " ", "=", " ", "{", " ", "x", ":", " ", "-", "1", ",", " ", "y", ":", " ", "1", " ", "}", "\n    ", "this", ".", "tween", " ", "=", " ", "new", " ", "TWEEN", ".", "Tween", "(", "coords", ")", "\n        ", ".", "to", "({", " ", "x", ":", " ", "-", "1", ",", " ", "y", ":", " ", "0", " ", "},", " ", "3000", ")", "\n        ", ".", "easing", "(", "TWEEN", ".", "Easing", ".", "Quadratic", ".", "Out", ")", "\n        ", ".", "onUpdate", "(()", " ", "=>", " ", "{", "\n          ", "this", ".", "sprite", ".", "setPos", "(", "coords", ".", "x", ",", " ", "coords", ".", "y", ")", "\n        ", "})", "\n\n    ", "this", ".", "tweenBack", " ", "=", " ", "new", " ", "TWEEN", ".", "Tween", "(", "coords", ")", "\n        ", ".", "to", "({", " ", "x", ":", " ", "-", "1", ",", " ", "y", ":", " ", "1", " ", "},", " ", "3000", ")", "\n        ", ".", "easing", "(", "TWEEN", ".", "Easing", ".", "Quadratic", ".", "Out", ")", "\n        ", ".", "onUpdate", "(()", " ", "=>", " ", "{", "\n          ", "this", ".", "sprite", ".", "setPos", "(", "coords", ".", "x", ",", " ", "coords", ".", "y", ")", "\n        ", "})", "\n\n    ", "this", ".", "tween", ".", "chain", "(", "this", ".", "tweenBack", ")", "\n    ", "this", ".", "tweenBack", ".", "chain", "(", "this", ".", "tween", ")", "\n    ", "this", ".", "tween", "\n      ", ".", "delay", "(", "3000", ")", "\n      ", ".", "start", "()", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "TWEEN", ".", "update", "(", "frame", ")", " ", "// TWEENオブジェクト更新", "\n\n    ", "...", "\n    ", "// 描画", "\n  ", "}", "\n", "}", "\n", "\n", "\n\n", "2D画像が上下に動きます。", "\n", "\n\n", "\n", "オーディオ再生(と3Dサウンド再生)", "\n\n", "オーディオ（BGM）と3Dサウンド（3Dオブジェクトの位置から発生する音）を再生します。", "\n\n", "\n", "game.js", "\n", "import", " ", "Audio", " ", "from", " ", "'./src/Audio'", "\n", "import", " ", "AudioListener", " ", "from", " ", "'./src/AudioListener'", "\n", "import", " ", "PositionalAudio", " ", "from", " ", "'./src/PositionalAudio'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// Audio", "\n    ", "this", ".", "audioListener", " ", "=", " ", "new", " ", "AudioListener", "()", "\n    ", "this", ".", "buffer", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadAudio", "(", "'./sounds/bgm_maoudamashii_healing13.mp3'", ")", "\n    ", "this", ".", "bgm", " ", "=", " ", "new", " ", "Audio", "(", "this", ".", "buffer", ",", " ", "this", ".", "audioListener", ")", "\n    ", "this", ".", "bgm", ".", "setLoop", "(", "true", ")", "\n    ", "this", ".", "bgm", ".", "setVolume", "(", "0.1", ")", "\n    ", "this", ".", "bgm", ".", "play", "()", "\n    ", "// PositionalAudio(3Dサウンド)", "\n    ", "this", ".", "soundBuffer", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadAudio", "(", "'./sounds/ping_pong.mp3'", ")", "\n    ", "this", ".", "sound", " ", "=", " ", "new", " ", "PositionalAudio", "(", "this", ".", "soundBuffer", ",", " ", "this", ".", "audioListener", ")", "\n    ", "this", ".", "sound", ".", "setVolume", "(", "10", ")", "\n    ", "this", ".", "sound", ".", "setRefDistance", "(", "20", ")", "\n    ", "// 3Dサウンドの場合は音を聞く位置をカメラに紐付ける", "\n    ", "this", ".", "controlCamera", ".", "add", "(", "this", ".", "audioListener", ")", "\n    ", "// 3Dオブジェクトに3Dサウンドを紐付ける", "\n    ", "this", ".", "model", ".", "add", "(", "this", ".", "sound", ")", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "// 一定時間おきに再生", "\n    ", "this", ".", "count", " ", "=", " ", "this", ".", "count", " ", "||", " ", "0", "\n    ", "if", " ", "(", "this", ".", "count", " ", "%", " ", "60", " ", "===", " ", "0", ")", " ", "{", "\n      ", "this", ".", "sound", ".", "play", "()", "\n    ", "}", "\n    ", "this", ".", "count", "++", "\n\n    ", "...", "\n    ", "// 描画", "\n  ", "}", "\n", "}", "\n", "\n", "\n\n", "３Dサウンドはキャラクターに近づくことで音が大きくなるはずです", "\n", "\n\n", "\n", "Physics演算（AmmoJS）", "\n\n", "物理エンジンで衝突判定を行います。", "\n", "AmmoJS", "は", "bullet", "という物理エンジンを", "Emscripten", "というツールを使ってDirect Importしています。", "\nつまり、JavaScriptからC言語で書かれたbullet SDKを直接コールバックしているため、web上でも比較的高速に衝突計算ができます。", "\n\n", "\n", "game.js", "\n", "import", " ", "PhysicsWorld", " ", "from", " ", "'./src/PhysicsWorld'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// 物理世界作成", "\n    ", "this", ".", "physicsWorld", " ", "=", " ", "new", " ", "PhysicsWorld", "()", "\n\n\n    ", "// HeightMap", "\n    ", "this", ".", "heightMap", " ", "=", " ", "new", " ", "HeightMap", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "heightMap", ")", "\n    ", "// HeightMapオブジェクトを物理空間に追加", "\n    ", "this", ".", "physicsWorld", ".", "addHeightMapBody", "(", "this", ".", "heightMap", ")", "\n\n    ", "// Loader", "\n    ", "this", ".", "loader", " ", "=", " ", "new", " ", "Loader", "()", "\n\n    ", "// GLTF", "\n    ", "const", " ", "tree", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadGLTFModel", "(", "'./model/tree.glb'", ")", "\n    ", "const", " ", "treePositions", " ", "=", " ", "[", "\n      ", "new", " ", "Vec3", "(", "132", ",", " ", "20", ",", " ", "-", "190", "),", "\n      ", "new", " ", "Vec3", "(", "216", ",", " ", "20", ",", " ", "80", "),", "\n      ", "new", " ", "Vec3", "(", "-", "82", ",", " ", "20", ",", " ", "222", "),", "\n      ", "new", " ", "Vec3", "(", "13", ",", " ", "20", ",", " ", "-", "125", "),", "\n      ", "new", " ", "Vec3", "(", "-", "100", ",", " ", "20", ",", " ", "31", "),", "\n    ", "]", "\n    ", "this", ".", "trees", " ", "=", " ", "[]", "\n    ", "for", " ", "(", "let", " ", "i", " ", "=", " ", "0", ";", " ", "i", " ", "<", " ", "5", ";", " ", "i", "++", ")", " ", "{", "\n      ", "this", ".", "trees", ".", "push", "(", "new", " ", "GLTFModel", "(", "tree", ",", " ", "true", ",", " ", "true", "))", "\n      ", "this", ".", "trees", "[", "i", "].", "init", "(", "treePositions", "[", "i", "],", " ", "0", ",", " ", "8", ")", "\n      ", "this", ".", "trees", "[", "i", "].", "getCenter", "()", "\n      ", "this", ".", "scene", ".", "add", "(", "this", ".", "trees", "[", "i", "])", "\n      ", "// Kinematicオブジェクトを物理空間に追加", "\n      ", "let", " ", "size", " ", "=", " ", "new", " ", "Vec3", "()", "\n      ", "this", ".", "trees", "[", "i", "].", "boundingBox", ".", "getSize", "(", "size", ")", "\n      ", "this", ".", "physicsWorld", ".", "addBoxBody", "(", "this", ".", "trees", "[", "i", "],", " ", "size", ".", "multiplyScalar", "(", "6", "),", " ", "0", ",", " ", "true", ")", "\n    ", "}", "\n\n    ", "// GLTF Skin", "\n    ", "const", " ", "gltf", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadGLTFModel", "(", "'./model/CesiumMan.gltf'", ")", "\n    ", "this", ".", "model", " ", "=", " ", "new", " ", "GLTFModel", "(", "gltf", ",", " ", "true", ")", "\n    ", "this", ".", "model", ".", "init", "(", "new", " ", "Vec3", "(", "0", ",", " ", "20", ",", " ", "0", "),", " ", "-", "Math", ".", "PI", "/", "2", ",", " ", "10", ")", "\n    ", "this", ".", "model", ".", "actions", "[", "0", "].", "play", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "model", ")", "\n    ", "// 物理空間に追加", "\n    ", "this", ".", "model", ".", "getCenter", "()", "\n    ", "this", ".", "physicsWorld", ".", "addHumanBody", "(", "this", ".", "model", ",", " ", "0.8", ")", "\n\n    ", "...", "\n  ", "}", "\n\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "// 物理計算更新", "\n    ", "this", ".", "physicsWorld", ".", "update", "(", "delta", ")", "\n\n    ", "// 物理空間上のオブジェクトの当たり判定", "\n    ", "const", " ", "hitResult", " ", "=", " ", "this", ".", "physicsWorld", ".", "hitTest", "([", "this", ".", "heightMap", ",", " ", "this", ".", "model", "])", "\n    ", "if", " ", "(", "Object", ".", "keys", "(", "hitResult", ").", "length", " ", ">", " ", "0", ")", " ", "{", "\n      ", "this", ".", "physicsWorld", ".", "addImpulse", "(", "this", ".", "model", ",", " ", "new", " ", "Vec3", "(", "0", ",", " ", "50", ",", " ", "0", "))", "\n    ", "}", " ", "else", " ", "{", "\n      ", "this", ".", "physicsWorld", ".", "addForce", "(", "this", ".", "model", ",", " ", "new", " ", "Vec3", "(", "0", ",", " ", "0", ",", " ", "50", "))", "\n    ", "}", "\n    ", "this", ".", "physicsWorld", ".", "setModelPose", "(", "this", ".", "model", ")", "\n\n    ", "...", "\n    ", "描画", "\n  ", "}", "\n", "}", "\n", "\n", "\n\n", "キャラクターが地面に沿ってジャンプしながら移動します。", "\n", "\n\n", "\n", "キーボード操作", "\n\n", "キーボード操作でキャラクターを動かしてみます。AWSDキーカメラ正面方向に対してキャラクターを移動させます。（さらに物理エンジンを適用することで地面に沿って移動できます）", "\n\n", "\n", "game.js", "\n", "import", " ", "Keyboard", " ", "from", " ", "'./src/Keyboard'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// キーボード", "\n    ", "this", ".", "keyboard", " ", "=", " ", "new", " ", "Keyboard", "()", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "if", " ", "(", "!", "(", "this", ".", "keyboard", ".", "isPressA", "()", " ", "||", " ", "this", ".", "keyboard", ".", "isPressD", "()", " ", "||", " ", "this", ".", "keyboard", ".", "isPressW", "()", " ", "||", " ", "this", ".", "keyboard", ".", "isPressS", "()))", " ", "{", "\n      ", "this", ".", "model", ".", "stop", "()", "\n    ", "// A", "\n    ", "}", " ", "else", " ", "if", " ", "(", "this", ".", "keyboard", ".", "isPressA", "())", " ", "{", "\n      ", "this", ".", "model", ".", "move", "(", "this", ".", "controlCamera", ",", " ", "Math", ".", "PI", "/", "2", ")", "\n    ", "// D", "\n    ", "}", " ", "else", " ", "if", " ", "(", "this", ".", "keyboard", ".", "isPressD", "())", " ", "{", "\n      ", "this", ".", "model", ".", "move", "(", "this", ".", "controlCamera", ",", " ", "-", "Math", ".", "PI", "/", "2", ")", "\n    ", "// W", "\n    ", "}", " ", "else", " ", "if", " ", "(", "this", ".", "keyboard", ".", "isPressW", "())", " ", "{", "\n      ", "this", ".", "model", ".", "move", "(", "this", ".", "controlCamera", ",", " ", "0", ")", "\n    ", "// S", "\n    ", "}", " ", "else", " ", "if", " ", "(", "this", ".", "keyboard", ".", "isPressS", "())", " ", "{", "\n      ", "this", ".", "model", ".", "move", "(", "this", ".", "controlCamera", ",", " ", "Math", ".", "PI", ")", "\n    ", "}", "\n    ", "// 移動結果を物理計算空間に反映", "\n    ", "this", ".", "physicsWorld", ".", "setPhysicsPose", "(", "this", ".", "model", ")", "\n\n    ", "// 物理計算更新", "\n    ", "this", ".", "physicsWorld", ".", "update", "(", "delta", ")", "\n\n    ", "/*\n    // 物理空間上のオブジェクトの当たり判定\n    const hitResult = this.physicsWorld.hitTest([this.heightMap, this.model])\n    if (Object.keys(hitResult).length > 0) {\n      this.physicsWorld.addImpulse(this.model, new Vec3(0, 50, 0))\n    } else {\n      this.physicsWorld.addForce(this.model, new Vec3(0, 0, 50))\n    }\n    */", "\n    ", "this", ".", "physicsWorld", ".", "setModelPose", "(", "this", ".", "model", ")", "\n\n    ", "...", "\n    ", "描画", "\n  ", "}", "\n", "}", "\n", "\n", "\n\n", "キーを追加したい場合はKeyboard.jsにキーを追加してください", "\n\n", "\n", "Keyboard.js", "\n", "export", " ", "default", " ", "class", " ", "Keyboard", " ", "{", "\n  ", "constructor", " ", "()", " ", "{", "\n    ", "this", ".", "keys", " ", "=", " ", "[]", "\n    ", "document", ".", "addEventListener", "(", "'keydown'", ",", " ", "(", "e", ")", " ", "=>", " ", "{", "\n      ", "const", " ", "keycode", " ", "=", " ", "e", ".", "keyCode", "\n      ", "this", ".", "keys", "[", "keycode", "]", " ", "=", " ", "true", "\n      ", "e", ".", "preventDefault", "()", "\n      ", "e", ".", "stopPropagation", "()", "\n      ", "return", " ", "false", "\n    ", "})", "\n    ", "document", ".", "addEventListener", "(", "'keyup'", ",", " ", "(", "e", ")", " ", "=>", " ", "{", "\n      ", "const", " ", "keycode", " ", "=", " ", "e", ".", "keyCode", "\n      ", "this", ".", "keys", "[", "keycode", "]", " ", "=", " ", "false", "\n      ", "e", ".", "preventDefault", "()", "\n      ", "e", ".", "stopPropagation", "()", "\n      ", "return", " ", "false", "\n    ", "})", "\n  ", "}", "\n\n  ", "isPressEnter", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "13", ")", "\n  ", "isPressSpace", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "32", ")", "\n  ", "isPressA", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "65", ")", "\n  ", "isPressD", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "68", ")", "\n  ", "isPressW", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "87", ")", "\n  ", "isPressS", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "83", ")", "\n  ", "isPressC", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "67", ")", "\n  ", "isPressLeft", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "37", ")", "\n  ", "isPressRight", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "39", ")", "\n  ", "isPressUp", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "38", ")", "\n  ", "isPressDown", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "40", ")", "\n\n  ", "getKey", " ", "=", " ", "(", "keycode", ")", " ", "=>", " ", "{", "\n    ", "return", " ", "this", ".", "keys", "[", "keycode", "]", "\n  ", "}", "\n", "}", "\n", "\n", "\n\n", "\n", "ドラッグ操作", "\n\n", "一定時間おきにPrimitiveを生成し、", "\nドラッグ操作で持ち上げることができるようにします。", "\n\n", "\n", "game.js", "\n", "import", " ", "DragControls", " ", "from", " ", "'./src/DragControls'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n\n    ", "/*\n    // Sphere\n    const sphere = new Sphere(3)\n    sphere.position.set(30, 0, 0)\n    this.scene.add(sphere)\n\n    // Box\n    const box = new Box(new Vec3(2, 10, 4))\n    box.position.set(10, 0, 0)\n    this.scene.add(box)\n\n    // Cylinder\n    const cylinder = new Cylinder(3, 10)\n    cylinder.position.set(-10, 0, 0)\n    this.scene.add(cylinder)\n\n    // Cone\n    const cone = new Cone(3, 8)\n    cone.position.set(-30, 0, 0)\n    this.scene.add(cone)\n    */", "\n\n    ", "// ドラッグ処理", "\n    ", "this", ".", "dynamicObjects", " ", "=", " ", "[]", "\n    ", "this", ".", "dragControls", " ", "=", " ", "new", " ", "DragControls", "(", "this", ".", "dynamicObjects", ",", " ", "this", ".", "controlCamera", ",", " ", "this", ".", "renderer", ",", " ", "this", ".", "onDragStart", ",", " ", "this", ".", "onDragEnd", ")", "\n    ", "this", ".", "objectTimePeriod", " ", "=", " ", "3", "\n    ", "this", ".", "timeNextSpawn", " ", "=", " ", "this", ".", "objectTimePeriod", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "onDragStart", " ", "=", " ", "(", "e", ")", " ", "=>", " ", "{", "\n    ", "if", " ", "(", "this", ".", "controlCamera", ".", "controls", ")", " ", "{", "\n      ", "this", ".", "controlCamera", ".", "controls", ".", "enabled", " ", "=", " ", "false", "\n    ", "}", "\n    ", "if", " ", "(", "e", ".", "object", ".", "userData", ")", " ", "{", "\n      ", "e", ".", "object", ".", "userData", ".", "ignorePhysics", " ", "=", " ", "true", "\n    ", "}", "\n  ", "}", "\n\n  ", "onDragEnd", " ", "=", " ", "(", "e", ")", " ", "=>", " ", "{", "\n    ", "if", " ", "(", "e", ".", "object", ".", "userData", ")", " ", "{", "\n      ", "this", ".", "physicsWorld", ".", "setPhysicsPose", "(", "e", ".", "object", ")", "\n      ", "e", ".", "object", ".", "userData", ".", "ignorePhysics", " ", "=", " ", "false", "\n    ", "}", "\n    ", "if", " ", "(", "this", ".", "controlCamera", ".", "controls", ")", " ", "{", "\n      ", "this", ".", "controlCamera", ".", "controls", ".", "enabled", " ", "=", " ", "true", "\n    ", "}", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "// 一定時間おきに動的にオブジェクトを生成する", "\n    ", "if", " ", "(", "this", ".", "dynamicObjects", ".", "length", " ", "<", " ", "5", " ", "&&", " ", "time", " ", ">", " ", "this", ".", "timeNextSpawn", ")", " \n    ", "{", "\n      ", "const", " ", "objectType", " ", "=", " ", "Math", ".", "ceil", "(", "Math", ".", "random", "()", " ", "*", " ", "4", ")", "\n      ", "let", " ", "mesh", " ", "=", " ", "null", "\n      ", "const", " ", "initPos", " ", "=", " ", "new", " ", "Vec3", "(", "0", ",", " ", "100", ",", " ", "0", ")", "\n      ", "const", " ", "objectSize", " ", "=", " ", "2", "\n      ", "switch", " ", "(", "objectType", ")", " ", "{", "\n        ", "case", " ", "1", ":", "\n          ", "mesh", " ", "=", " ", "new", " ", "Sphere", "(", "3", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ")", "\n          ", "mesh", ".", "position", ".", "set", "(", "initPos", ".", "x", ",", " ", "initPos", ".", "y", ",", " ", "initPos", ".", "z", ")", "\n          ", "this", ".", "physicsWorld", ".", "addSphereBody", "(", "mesh", ",", " ", "mesh", ".", "radius", ",", " ", "objectSize", " ", "*", " ", "5", ")", "\n          ", "break", "\n        ", "case", " ", "2", ":", "\n          ", "mesh", " ", "=", " ", "new", " ", "Box", "(", "new", " ", "Vec3", "(", "4", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ",", " ", "4", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ",", " ", "4", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", "))", "\n          ", "mesh", ".", "position", ".", "set", "(", "initPos", ".", "x", ",", " ", "initPos", ".", "y", ",", " ", "initPos", ".", "z", ")", "\n          ", "this", ".", "physicsWorld", ".", "addBoxBody", "(", "mesh", ",", " ", "mesh", ".", "size", ",", " ", "objectSize", " ", "*", " ", "5", ")", "\n          ", "break", "\n        ", "case", " ", "3", ":", "\n          ", "mesh", " ", "=", " ", "new", " ", "Cylinder", "(", "3", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ",", " ", "3", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ")", "\n          ", "mesh", ".", "position", ".", "set", "(", "initPos", ".", "x", ",", " ", "initPos", ".", "y", ",", " ", "initPos", ".", "z", ")", "\n          ", "this", ".", "physicsWorld", ".", "addCylinderBody", "(", "mesh", ",", " ", "mesh", ".", "radius", ",", " ", "mesh", ".", "height", ",", " ", "objectSize", " ", "*", " ", "5", ")", "\n          ", "break", "\n        ", "default", ":", "\n          ", "mesh", " ", "=", " ", "new", " ", "Cone", "(", "3", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ",", " ", "2", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ")", "\n          ", "mesh", ".", "position", ".", "set", "(", "initPos", ".", "x", ",", " ", "initPos", ".", "y", ",", " ", "initPos", ".", "z", ")", "\n          ", "this", ".", "physicsWorld", ".", "addConeBody", "(", "mesh", ",", " ", "mesh", ".", "radius", ",", " ", "mesh", ".", "height", ",", " ", "objectSize", " ", "*", " ", "5", ")", "\n          ", "break", "\n      ", "}", "\n\n      ", "this", ".", "scene", ".", "add", "(", "mesh", ")", "\n      ", "this", ".", "dynamicObjects", ".", "push", "(", "mesh", ")", "\n      ", "this", ".", "timeNextSpawn", " ", "=", " ", "time", " ", "+", " ", "this", ".", "objectTimePeriod", "\n    ", "}", "\n\n    ", "// 物理計算更新", "\n    ", "this", ".", "physicsWorld", ".", "update", "(", "delta", ")", "\n\n", "for", " ", "(", "let", " ", "i", " ", "=", " ", "0", ";", " ", "i", " ", "<", " ", "this", ".", "dynamicObjects", ".", "length", ";", " ", "i", "++", ")", " ", "{", "\n      ", "const", " ", "objThree", " ", "=", " ", "this", ".", "dynamicObjects", "[", "i", "]", "\n      ", "// ドラッグしていないオブジェクト以外反映する", "\n      ", "if", " ", "(", "objThree", ".", "userData", " ", "&&", " ", "objThree", ".", "userData", ".", "ignorePhysics", ")", " ", "{", "\n        ", "continue", "\n      ", "}", "\n      ", "this", ".", "physicsWorld", ".", "setModelPose", "(", "objThree", ")", "\n    ", "}", "\n\n    ", "...", "\n    ", "描画", "\n  ", "}", "\n", "}", "\n", "\n", "\n\n", "一定時間おきにPrimitiveオブジェクトが落ちてきて、地面に転がります。", "\nPrimitiveを上方向にドラッグしてドロップすると落ちます", "\n", "\n\n", "\n", "レイキャスト", "\n\n", "線に対して、オブジェクトが交差しているかの判定をレイキャストと呼びます。", "\nよく使われるのはマウスの位置からカメラ視点正面に対して線が出ているのを想定して、３Dオブジェクトとの交差判定を行います。", "\n今回は地面のどの位置に対して交差しているか判別します。", "\n\n", "\n", "game.js", "\n", "import", " ", "RayCaster", " ", "from", " ", "'./src/RayCaster'", "\n", "import", " ", "ConeMarker", " ", "from", " ", "'./src/ConeMarker'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// RayCaster", "\n    ", "this", ".", "rayCaster", " ", "=", " ", "new", " ", "RayCaster", "()", "\n    ", "// マウス/タッチ", "\n    ", "this", ".", "helper", " ", "=", " ", "new", " ", "ConeMarker", "(", "20", ",", " ", "100", ")", "\n    ", "this", ".", "helper", ".", "geometry", ".", "translate", "(", "0", ",", " ", "50", ",", " ", "0", ")", "\n    ", "this", ".", "helper", ".", "geometry", ".", "rotateX", "(", "Math", ".", "PI", " ", "/", " ", "2", ")", "\n    ", "this", ".", "helper", ".", "geometry", ".", "scale", "(", "0.1", ",", " ", "0.1", ",", " ", "0.1", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "helper", ")", "\n    ", "document", ".", "addEventListener", "(", "'mousemove'", ",", " ", "this", ".", "onMouseMove", ",", " ", "false", ")", "\n    ", "document", ".", "addEventListener", "(", "'mousedown'", ",", " ", "this", ".", "onMouseClick", ",", " ", "false", ")", "\n    ", "this", ".", "clicked", " ", "=", " ", "false", "\n    ", "this", ".", "clickPos", " ", "=", " ", "new", " ", "Vec3", "()", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "onMouseMove", " ", "=", " ", "(", "event", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "mouse", " ", "=", " ", "{", "\n      ", "x", ":", " ", "(", "event", ".", "clientX", " ", "/", " ", "this", ".", "renderer", ".", "domElement", ".", "clientWidth", ")", " ", "*", " ", "2", " ", "-", " ", "1", ",", "\n      ", "y", ":", " ", "-", "(", "event", ".", "clientY", " ", "/", " ", "this", ".", "renderer", ".", "domElement", ".", "clientHeight", ")", " ", "*", " ", "2", " ", "+", " ", "1", ",", "\n    ", "}", "\n\n    ", "const", " ", "intersects", " ", "=", " ", "this", ".", "rayCaster", ".", "getIntersect", "(", "mouse", ",", " ", "this", ".", "controlCamera", ",", " ", "this", ".", "heightMap", ")", "\n\n    ", "if", " ", "(", "intersects", ".", "length", " ", ">", " ", "0", ")", " ", "{", "\n      ", "this", ".", "helper", ".", "position", ".", "set", "(", "0", ",", " ", "0", ",", " ", "0", ")", "\n      ", "this", ".", "helper", ".", "lookAt", "(", "intersects", "[", "0", "].", "face", ".", "normal", ")", "\n      ", "this", ".", "helper", ".", "position", ".", "copy", "(", "intersects", "[", "0", "].", "point", ")", "\n    ", "}", "\n  ", "}", "\n\n  ", "onMouseClick", " ", "=", " ", "(", "event", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "mouse", " ", "=", " ", "{", "\n      ", "x", ":", " ", "(", "event", ".", "clientX", " ", "/", " ", "this", ".", "renderer", ".", "domElement", ".", "clientWidth", ")", " ", "*", " ", "2", " ", "-", " ", "1", ",", "\n      ", "y", ":", " ", "-", "(", "event", ".", "clientY", " ", "/", " ", "this", ".", "renderer", ".", "domElement", ".", "clientHeight", ")", " ", "*", " ", "2", " ", "+", " ", "1", ",", "\n    ", "}", "\n\n    ", "const", " ", "intersects", " ", "=", " ", "this", ".", "rayCaster", ".", "getIntersect", "(", "mouse", ",", " ", "this", ".", "controlCamera", ",", " ", "this", ".", "heightMap", ")", "\n\n    ", "if", " ", "(", "intersects", ".", "length", " ", ">", " ", "0", ")", " ", "{", "\n      ", "this", ".", "clicked", " ", "=", " ", "true", "\n      ", "this", ".", "clickPos", " ", "=", " ", "intersects", "[", "0", "].", "point", "\n    ", "}", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "if", " ", "(", "this", ".", "clicked", ")", " ", "{", "\n      ", "const", " ", "dir", " ", "=", " ", "new", " ", "Vec3", "(", "this", ".", "clickPos", ".", "x", " ", "-", " ", "this", ".", "model", ".", "position", ".", "x", ",", " ", "0", ",", " ", "this", ".", "clickPos", ".", "z", " ", "-", " ", "this", ".", "model", ".", "position", ".", "z", ")", "\n      ", "if", " ", "(", "dir", ".", "length", "()", " ", "<", " ", "3", ")", " ", "{", "\n        ", "this", ".", "clicked", " ", "=", " ", "false", "\n      ", "}", "\n      ", "this", ".", "model", ".", "moveTo", "(", "this", ".", "clickPos", ")", "\n    ", "}", "\n    ", "// 移動結果を物理計算空間に反映", "\n    ", "this", ".", "physicsWorld", ".", "setPhysicsPose", "(", "this", ".", "model", ")", "\n\n    ", "// 物理計算更新", "\n    ", "this", ".", "physicsWorld", ".", "update", "(", "delta", ")", "\n\n    ", "...", "\n    ", "描画", "\n  ", "}", "\n", "}", "\n\n", "\n", "\n\n", "マウスを移動させると交差する地面の位置にマーカーが表示されます。", "\nマーカ位置をクリックするとキャラクターが移動します。", "\n", "\n\n", "\n", "全部組み合わせる", "\n\n", "デモで動いているソースコードは次のようになります。", "\n\n", "\n", "game.js", "\n", "import", " ", "TWEEN", " ", "from", " ", "'@tweenjs/tween.js'", "\n", "import", " ", "Render", " ", "from", " ", "'./src/Render'", "\n", "import", " ", "Scene", " ", "from", " ", "'./src/Scene'", "\n", "import", " ", "Clock", " ", "from", " ", "'./src/Clock'", "\n", "import", " ", "Vec3", " ", "from", " ", "'./src/Vec3'", "\n", "import", " ", "Axis", " ", "from", " ", "'./src/Axis'", "\n", "import", " ", "Grid", " ", "from", " ", "'./src/Grid'", "\n", "import", " ", "Camera2D", " ", "from", " ", "'./src/Camera2D'", "\n", "import", " ", "Camera3D", " ", "from", " ", "'./src/Camera3D'", "\n", "// import CubeMap from './src/CubeMap'", "\n", "import", " ", "DirectionalLight", " ", "from", " ", "'./src/DirectionalLight'", "\n", "import", " ", "AmbientLight", " ", "from", " ", "'./src/AmbientLight'", "\n", "import", " ", "Loader", " ", "from", " ", "'./src/Loader'", "\n", "import", " ", "HeightMap", " ", "from", " ", "'./src/HeightMap'", "\n", "import", " ", "Fog", " ", "from", " ", "'./src/Fog'", "\n", "import", " ", "Sprite", " ", "from", " ", "'./src/Sprite'", "\n", "import", " ", "Sphere", " ", "from", " ", "'./src/Sphere'", "\n", "import", " ", "Box", " ", "from", " ", "'./src/Box'", "\n", "import", " ", "Cylinder", " ", "from", " ", "'./src/Cylinder'", "\n", "import", " ", "Cone", " ", "from", " ", "'./src/Cone'", "\n", "import", " ", "ConeMarker", " ", "from", " ", "'./src/ConeMarker'", "\n", "import", " ", "GLTFModel", " ", "from", " ", "'./src/GLTFModel'", "\n", "import", " ", "PhysicsWorld", " ", "from", " ", "'./src/PhysicsWorld'", "\n", "import", " ", "DragControls", " ", "from", " ", "'./src/DragControls'", "\n", "import", " ", "Keyboard", " ", "from", " ", "'./src/Keyboard'", "\n", "import", " ", "AudioListener", " ", "from", " ", "'./src/AudioListener'", "\n", "import", " ", "PositionalAudio", " ", "from", " ", "'./src/PositionalAudio'", "\n", "import", " ", "Audio", " ", "from", " ", "'./src/Audio'", "\n", "import", " ", "Particle", " ", "from", " ", "'./src/Particle'", "\n", "import", " ", "Water", " ", "from", " ", "'./src/Water'", "\n", "import", " ", "Sky", " ", "from", " ", "'./src/Sky'", "\n", "import", " ", "RayCaster", " ", "from", " ", "'./src/RayCaster'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// アニメーションとかで使う時間用", "\n    ", "this", ".", "clock", " ", "=", " ", "new", " ", "Clock", "()", "\n    ", "this", ".", "loader", " ", "=", " ", "new", " ", "Loader", "()", "\n    ", "// シーン作成", "\n    ", "this", ".", "scene", " ", "=", " ", "new", " ", "Scene", "()", "\n    ", "this", ".", "sceneOrtho", " ", "=", " ", "new", " ", "Scene", "()", "\n    ", "// this.cubeMap = new CubeMap('textures/')", "\n    ", "// this.scene.background = this.cubeMap", "\n    ", "this", ".", "scene", ".", "fog", " ", "=", " ", "new", " ", "Fog", "()", "\n    ", "// レンダラー作成", "\n    ", "this", ".", "renderer", " ", "=", " ", "new", " ", "Render", "(", "this", ".", "onResize", ")", "\n    ", "// 物理世界作成", "\n    ", "this", ".", "physicsWorld", " ", "=", " ", "new", " ", "PhysicsWorld", "()", "\n\n    ", "// RayCaster", "\n    ", "this", ".", "rayCaster", " ", "=", " ", "new", " ", "RayCaster", "()", "\n\n    ", "// 3Dカメラ", "\n    ", "const", " ", "eye", " ", "=", " ", "new", " ", "Vec3", "(", "0", ",", " ", "50", ",", " ", "-", "150", ")", "\n    ", "const", " ", "lookAt", " ", "=", " ", "new", " ", "Vec3", "(", "0", ",", " ", "0", ",", " ", "0", ")", "\n    ", "this", ".", "camera", " ", "=", " ", "new", " ", "Camera3D", "(", "eye", ",", " ", "lookAt", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "camera", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "camera", ".", "helper", ")", " ", "// helper", "\n\n    ", "// コントロールカメラ", "\n    ", "const", " ", "debugEye", " ", "=", " ", "new", " ", "Vec3", "(", "100", ",", " ", "200", ",", " ", "200", ")", "\n    ", "const", " ", "debugLookAt", " ", "=", " ", "new", " ", "Vec3", "(", "0", ",", " ", "0", ",", " ", "0", ")", "\n    ", "this", ".", "controlCamera", " ", "=", " ", "new", " ", "Camera3D", "(", "debugEye", ",", " ", "debugLookAt", ",", " ", "1", ",", " ", "4000", ")", "\n    ", "this", ".", "controlCamera", ".", "controls", " ", "=", " ", "this", ".", "controlCamera", ".", "createControls", "()", "\n\n    ", "this", ".", "selectCamera", " ", "=", " ", "this", ".", "controlCamera", "\n    ", "this", ".", "isDebug", " ", "=", " ", "true", "\n\n    ", "// 2Dカメラ", "\n    ", "this", ".", "cameraOrtho", " ", "=", " ", "new", " ", "Camera2D", "()", "\n\n    ", "// Audio", "\n    ", "this", ".", "audioListener", " ", "=", " ", "new", " ", "AudioListener", "()", "\n    ", "this", ".", "buffer", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadAudio", "(", "'./sounds/bgm_maoudamashii_healing13.mp3'", ")", "\n    ", "this", ".", "bgm", " ", "=", " ", "new", " ", "Audio", "(", "this", ".", "buffer", ",", " ", "this", ".", "audioListener", ")", "\n    ", "this", ".", "bgm", ".", "setLoop", "(", "true", ")", "\n    ", "this", ".", "bgm", ".", "setVolume", "(", "0.1", ")", "\n    ", "this", ".", "bgm", ".", "play", "()", "\n    ", "this", ".", "soundBuffer", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadAudio", "(", "'./sounds/ping_pong.mp3'", ")", "\n    ", "this", ".", "selectCamera", ".", "add", "(", "this", ".", "audioListener", ")", "\n    ", "this", ".", "sound", " ", "=", " ", "new", " ", "PositionalAudio", "(", "this", ".", "soundBuffer", ",", " ", "this", ".", "audioListener", ")", "\n    ", "this", ".", "sound", ".", "setVolume", "(", "10", ")", "\n\n    ", "// lighting", "\n    ", "this", ".", "light", " ", "=", " ", "new", " ", "DirectionalLight", "()", "\n\n    ", "const", " ", "parameters", " ", "=", " ", "{", "\n      ", "distance", ":", " ", "400", ",", "\n      ", "inclination", ":", " ", "0.3", ",", "\n      ", "azimuth", ":", " ", "0.205", ",", "\n    ", "}", "\n    ", "const", " ", "theta", " ", "=", " ", "Math", ".", "PI", " ", "*", " ", "(", "parameters", ".", "inclination", " ", "-", " ", "0.5", ")", "\n    ", "const", " ", "phi", " ", "=", " ", "2", " ", "*", " ", "Math", ".", "PI", " ", "*", " ", "(", "parameters", ".", "azimuth", " ", "-", " ", "0.5", ")", "\n    ", "this", ".", "light", ".", "position", ".", "x", " ", "=", " ", "parameters", ".", "distance", " ", "*", " ", "Math", ".", "cos", "(", "phi", ")", "\n    ", "this", ".", "light", ".", "position", ".", "y", " ", "=", " ", "parameters", ".", "distance", " ", "*", " ", "Math", ".", "sin", "(", "phi", ")", " ", "*", " ", "Math", ".", "sin", "(", "theta", ")", "\n    ", "this", ".", "light", ".", "position", ".", "z", " ", "=", " ", "parameters", ".", "distance", " ", "*", " ", "Math", ".", "sin", "(", "phi", ")", " ", "*", " ", "Math", ".", "cos", "(", "theta", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "light", ")", "\n    ", "this", ".", "ambient", " ", "=", " ", "new", " ", "AmbientLight", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "ambient", ")", "\n\n    ", "// Sky", "\n    ", "this", ".", "sky", " ", "=", " ", "new", " ", "Sky", "()", "\n    ", "this", ".", "sky", ".", "setEnv", "({", "turbidity", ":", " ", "10", ",", " ", "rayleigh", ":", " ", "2", ",", " ", "luminance", ":", " ", "1", ",", " ", "mieCoefficient", ":", " ", "0.005", ",", " ", "mieDirectionalG", ":", " ", "0.8", "})", "\n    ", "this", ".", "sky", ".", "setLight", "(", "this", ".", "light", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "sky", ")", "\n\n    ", "// Water", "\n    ", "this", ".", "water", " ", "=", " ", "new", " ", "Water", "(", "this", ".", "light", ")", "\n    ", "this", ".", "water", ".", "setEnv", "({", "distortionScale", ":", " ", "3.7", ",", " ", "alpha", ":", " ", "0.95", "})", "\n    ", "this", ".", "water", ".", "setLight", "(", "this", ".", "light", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "water", ")", "\n\n    ", "// HeightMap", "\n    ", "this", ".", "heightMap", " ", "=", " ", "new", " ", "HeightMap", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "heightMap", ")", "\n    ", "this", ".", "physicsWorld", ".", "addHeightMapBody", "(", "this", ".", "heightMap", ")", "\n\n    ", "// GLTF", "\n    ", "const", " ", "tree", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadGLTFModel", "(", "'./model/tree.glb'", ")", "\n    ", "const", " ", "treePositions", " ", "=", " ", "[", "\n      ", "new", " ", "Vec3", "(", "132", ",", " ", "20", ",", " ", "-", "190", "),", "\n      ", "new", " ", "Vec3", "(", "216", ",", " ", "20", ",", " ", "80", "),", "\n      ", "new", " ", "Vec3", "(", "-", "82", ",", " ", "20", ",", " ", "222", "),", "\n      ", "new", " ", "Vec3", "(", "13", ",", " ", "20", ",", " ", "-", "125", "),", "\n      ", "new", " ", "Vec3", "(", "-", "100", ",", " ", "20", ",", " ", "31", "),", "\n    ", "]", "\n    ", "this", ".", "trees", " ", "=", " ", "[]", "\n    ", "for", " ", "(", "let", " ", "i", " ", "=", " ", "0", ";", " ", "i", " ", "<", " ", "5", ";", " ", "i", "++", ")", " ", "{", "\n      ", "this", ".", "trees", ".", "push", "(", "new", " ", "GLTFModel", "(", "tree", ",", " ", "true", ",", " ", "true", "))", "\n      ", "this", ".", "trees", "[", "i", "].", "init", "(", "treePositions", "[", "i", "],", " ", "0", ",", " ", "8", ")", "\n      ", "this", ".", "trees", "[", "i", "].", "getCenter", "()", "\n      ", "let", " ", "size", " ", "=", " ", "new", " ", "Vec3", "()", "\n      ", "this", ".", "trees", "[", "i", "].", "boundingBox", ".", "getSize", "(", "size", ")", "\n      ", "this", ".", "physicsWorld", ".", "addBoxBody", "(", "this", ".", "trees", "[", "i", "],", " ", "size", ".", "multiplyScalar", "(", "6", "),", " ", "0", ",", " ", "true", ")", "\n      ", "this", ".", "scene", ".", "add", "(", "this", ".", "trees", "[", "i", "])", "\n      ", "// const box = new Box(this.trees[i].boundingBox.size().multiplyScalar(6))", "\n      ", "// box.position.copy(this.trees[i].position)", "\n      ", "// this.scene.add(box)", "\n    ", "}", "\n\n    ", "// GLTF Skin", "\n    ", "const", " ", "gltf", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadGLTFModel", "(", "'./model/CesiumMan.gltf'", ")", "\n    ", "this", ".", "model", " ", "=", " ", "new", " ", "GLTFModel", "(", "gltf", ",", " ", "true", ")", "\n    ", "this", ".", "model", ".", "init", "(", "new", " ", "Vec3", "(", "0", ",", " ", "20", ",", " ", "0", "),", " ", "-", "Math", ".", "PI", "/", "2", ",", " ", "10", ")", "\n    ", "this", ".", "model", ".", "actions", "[", "0", "].", "play", "()", "\n    ", "this", ".", "model", ".", "getCenter", "()", "\n    ", "this", ".", "physicsWorld", ".", "addHumanBody", "(", "this", ".", "model", ",", " ", "0.8", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "model", ")", "\n    ", "this", ".", "model", ".", "add", "(", "this", ".", "sound", ")", "\n    ", "// this.scene.add(this.model.boxHelper)", "\n    ", "this", ".", "isGround", " ", "=", " ", "false", "\n\n    ", "// Particle", "\n    ", "this", ".", "particle", " ", "=", " ", "new", " ", "Particle", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "particle", ")", "\n\n    ", "// Grid", "\n    ", "this", ".", "grid", " ", "=", " ", "new", " ", "Grid", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "grid", ")", "\n    ", "// Axis", "\n    ", "this", ".", "axis", " ", "=", " ", "new", " ", "Axis", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "axis", ")", "\n\n    ", "// Sprite", "\n    ", "const", " ", "texture", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadTexture", "(", "'./textures/sprite1.png'", ")", "\n    ", "this", ".", "sprite", " ", "=", " ", "new", " ", "Sprite", "(", "texture", ")", "\n    ", "this", ".", "sprite", ".", "setPos", "(", "-", "1", ",", " ", "1", ")", "\n    ", "this", ".", "sprite", ".", "setCenter", "({", "right", ":", " ", "true", ",", " ", "bottom", ":", " ", "true", "})", "\n    ", "this", ".", "sprite", ".", "setSize", "(", "64", ",", " ", "64", ")", "\n    ", "this", ".", "sceneOrtho", ".", "add", "(", "this", ".", "sprite", ")", "\n\n    ", "const", " ", "coords", " ", "=", " ", "{", " ", "x", ":", " ", "-", "1", ",", " ", "y", ":", " ", "1", " ", "}", "\n    ", "this", ".", "tween", " ", "=", " ", "new", " ", "TWEEN", ".", "Tween", "(", "coords", ")", "\n        ", ".", "to", "({", " ", "x", ":", " ", "-", "1", ",", " ", "y", ":", " ", "0", " ", "},", " ", "3000", ")", "\n        ", ".", "easing", "(", "TWEEN", ".", "Easing", ".", "Quadratic", ".", "Out", ")", "\n        ", ".", "onUpdate", "(()", " ", "=>", " ", "{", "\n          ", "this", ".", "sprite", ".", "setPos", "(", "coords", ".", "x", ",", " ", "coords", ".", "y", ")", "\n        ", "})", "\n\n    ", "this", ".", "tweenBack", " ", "=", " ", "new", " ", "TWEEN", ".", "Tween", "(", "coords", ")", "\n        ", ".", "to", "({", " ", "x", ":", " ", "-", "1", ",", " ", "y", ":", " ", "1", " ", "},", " ", "3000", ")", "\n        ", ".", "easing", "(", "TWEEN", ".", "Easing", ".", "Quadratic", ".", "Out", ")", "\n        ", ".", "onUpdate", "(()", " ", "=>", " ", "{", "\n          ", "this", ".", "sprite", ".", "setPos", "(", "coords", ".", "x", ",", " ", "coords", ".", "y", ")", "\n        ", "})", "\n\n    ", "this", ".", "tween", ".", "chain", "(", "this", ".", "tweenBack", ")", "\n    ", "this", ".", "tweenBack", ".", "chain", "(", "this", ".", "tween", ")", "\n    ", "this", ".", "tween", "\n      ", ".", "delay", "(", "3000", ")", "\n      ", ".", "start", "()", "\n\n    ", "// キーボード", "\n    ", "this", ".", "keyboard", " ", "=", " ", "new", " ", "Keyboard", "()", "\n\n    ", "// ドラッグ処理", "\n    ", "this", ".", "dynamicObjects", " ", "=", " ", "[]", "\n    ", "this", ".", "dragControls", " ", "=", " ", "new", " ", "DragControls", "(", "this", ".", "dynamicObjects", ",", " ", "this", ".", "controlCamera", ",", " ", "this", ".", "renderer", ",", " ", "this", ".", "onDragStart", ",", " ", "this", ".", "onDragEnd", ")", "\n\n    ", "// マウス/タッチ", "\n    ", "this", ".", "helper", " ", "=", " ", "new", " ", "ConeMarker", "(", "20", ",", " ", "100", ")", "\n    ", "this", ".", "helper", ".", "geometry", ".", "translate", "(", "0", ",", " ", "50", ",", " ", "0", ")", "\n    ", "this", ".", "helper", ".", "geometry", ".", "rotateX", "(", "Math", ".", "PI", " ", "/", " ", "2", ")", "\n    ", "this", ".", "helper", ".", "geometry", ".", "scale", "(", "0.1", ",", " ", "0.1", ",", " ", "0.1", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "helper", ")", "\n    ", "document", ".", "addEventListener", "(", "'mousemove'", ",", " ", "this", ".", "onMouseMove", ",", " ", "false", ")", "\n    ", "document", ".", "addEventListener", "(", "'mousedown'", ",", " ", "this", ".", "onMouseClick", ",", " ", "false", ")", "\n    ", "this", ".", "clicked", " ", "=", " ", "false", "\n    ", "this", ".", "clickPos", " ", "=", " ", "new", " ", "Vec3", "()", "\n\n    ", "this", ".", "objectTimePeriod", " ", "=", " ", "3", "\n    ", "this", ".", "timeNextSpawn", " ", "=", " ", "this", ".", "objectTimePeriod", "\n\n    ", "requestAnimationFrame", "(", "this", ".", "loop", ")", "\n  ", "}", "\n\n  ", "onDragStart", " ", "=", " ", "(", "e", ")", " ", "=>", " ", "{", "\n    ", "if", " ", "(", "this", ".", "selectCamera", ".", "controls", ")", " ", "{", "\n      ", "this", ".", "selectCamera", ".", "controls", ".", "enabled", " ", "=", " ", "false", "\n    ", "}", "\n    ", "if", " ", "(", "e", ".", "object", ".", "userData", ")", " ", "{", "\n      ", "e", ".", "object", ".", "userData", ".", "ignorePhysics", " ", "=", " ", "true", "\n    ", "}", "\n  ", "}", "\n\n  ", "onDragEnd", " ", "=", " ", "(", "e", ")", " ", "=>", " ", "{", "\n    ", "if", " ", "(", "e", ".", "object", ".", "userData", ")", " ", "{", "\n      ", "this", ".", "physicsWorld", ".", "setPhysicsPose", "(", "e", ".", "object", ")", "\n      ", "e", ".", "object", ".", "userData", ".", "ignorePhysics", " ", "=", " ", "false", "\n    ", "}", "\n    ", "if", " ", "(", "this", ".", "selectCamera", ".", "controls", ")", " ", "{", "\n      ", "this", ".", "selectCamera", ".", "controls", ".", "enabled", " ", "=", " ", "true", "\n    ", "}", "\n  ", "}", "\n\n  ", "loop", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "requestAnimationFrame", "(", "this", ".", "loop", ")", "\n    ", "this", ".", "render", "(", "frame", ")", "\n  ", "}", "\n\n  ", "onResize", " ", "=", " ", "()", " ", "=>", "  ", "{", "\n    ", "this", ".", "renderer", ".", "resize", "()", "\n\n    ", "const", " ", "cameras", " ", "=", " ", "[", "this", ".", "camera", ",", " ", "this", ".", "cameraOrtho", ",", " ", "this", ".", "controlCamera", "]", "\n    ", "for", " ", "(", "let", " ", "camera", " ", "of", " ", "cameras", ")", " ", "{", "\n      ", "camera", ".", "resize", "()", "\n    ", "}", "\n    ", "this", ".", "sprite", ".", "onResizeWindow", "()", "\n  ", "}", "\n\n  ", "onMouseMove", " ", "=", " ", "(", "event", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "mouse", " ", "=", " ", "{", "\n      ", "x", ":", " ", "(", "event", ".", "clientX", " ", "/", " ", "this", ".", "renderer", ".", "domElement", ".", "clientWidth", ")", " ", "*", " ", "2", " ", "-", " ", "1", ",", "\n      ", "y", ":", " ", "-", "(", "event", ".", "clientY", " ", "/", " ", "this", ".", "renderer", ".", "domElement", ".", "clientHeight", ")", " ", "*", " ", "2", " ", "+", " ", "1", ",", "\n    ", "}", "\n\n    ", "const", " ", "intersects", " ", "=", " ", "this", ".", "rayCaster", ".", "getIntersect", "(", "mouse", ",", " ", "this", ".", "selectCamera", ",", " ", "this", ".", "heightMap", ")", "\n\n    ", "if", " ", "(", "intersects", ".", "length", " ", ">", " ", "0", ")", " ", "{", "\n      ", "this", ".", "helper", ".", "position", ".", "set", "(", "0", ",", " ", "0", ",", " ", "0", ")", "\n      ", "this", ".", "helper", ".", "lookAt", "(", "intersects", "[", "0", "].", "face", ".", "normal", ")", "\n      ", "this", ".", "helper", ".", "position", ".", "copy", "(", "intersects", "[", "0", "].", "point", ")", "\n    ", "}", "\n  ", "}", "\n\n  ", "onMouseClick", " ", "=", " ", "(", "event", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "mouse", " ", "=", " ", "{", "\n      ", "x", ":", " ", "(", "event", ".", "clientX", " ", "/", " ", "this", ".", "renderer", ".", "domElement", ".", "clientWidth", ")", " ", "*", " ", "2", " ", "-", " ", "1", ",", "\n      ", "y", ":", " ", "-", "(", "event", ".", "clientY", " ", "/", " ", "this", ".", "renderer", ".", "domElement", ".", "clientHeight", ")", " ", "*", " ", "2", " ", "+", " ", "1", ",", "\n    ", "}", "\n\n    ", "const", " ", "intersects", " ", "=", " ", "this", ".", "rayCaster", ".", "getIntersect", "(", "mouse", ",", " ", "this", ".", "selectCamera", ",", " ", "this", ".", "heightMap", ")", "\n\n    ", "if", " ", "(", "intersects", ".", "length", " ", ">", " ", "0", ")", " ", "{", "\n      ", "this", ".", "clicked", " ", "=", " ", "true", "\n      ", "this", ".", "clickPos", " ", "=", " ", "intersects", "[", "0", "].", "point", "\n    ", "}", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n    ", "this", ".", "camera", ".", "lookAt", "(", "new", " ", "Vec3", "(", "this", ".", "model", ".", "position", ".", "x", ",", " ", "this", ".", "model", ".", "position", ".", "y", " ", "+", " ", "10", ",", " ", "this", ".", "model", ".", "position", ".", "z", "))", "\n    ", "const", " ", "cameraDir", " ", "=", " ", "new", " ", "Vec3", "(", "this", ".", "model", ".", "position", ".", "x", " ", "-", " ", "this", ".", "camera", ".", "position", ".", "x", ",", " ", "0", ",", " ", "this", ".", "model", ".", "position", ".", "z", " ", "-", " ", "this", ".", "camera", ".", "position", ".", "z", ")", "\n    ", "const", " ", "cameraDistance", " ", "=", " ", "100", "\n    ", "if", " ", "(", "cameraDir", ".", "length", "()", " ", ">", " ", "cameraDistance", ")", " ", "{", "\n      ", "const", " ", "target", " ", "=", " ", "cameraDir", ".", "normalize", "().", "multiplyScalar", "(", "cameraDistance", ")", "\n      ", "this", ".", "camera", ".", "position", ".", "copy", "(", "new", " ", "Vec3", "(", "this", ".", "model", ".", "position", ".", "x", " ", "-", " ", "target", ".", "x", ",", " ", "this", ".", "camera", ".", "position", ".", "y", ",", " ", "this", ".", "model", ".", "position", ".", "z", " ", "-", " ", "target", ".", "z", "))", "\n    ", "}", "\n\n    ", "TWEEN", ".", "update", "(", "frame", ")", " ", "// TWEENオブジェクト更新", "\n    ", "this", ".", "model", ".", "mixer", " ", "&&", " ", "this", ".", "model", ".", "mixer", ".", "update", "(", "delta", ")", " ", "// モデルアニメーション更新", "\n\n    ", "// 動的にオブジェクトを生成する", "\n    ", "if", " ", "(", "this", ".", "dynamicObjects", ".", "length", " ", "<", " ", "5", " ", "&&", " ", "time", " ", ">", " ", "this", ".", "timeNextSpawn", ")", " ", "{", "\n      ", "const", " ", "objectType", " ", "=", " ", "Math", ".", "ceil", "(", "Math", ".", "random", "()", " ", "*", " ", "4", ")", "\n      ", "let", " ", "mesh", " ", "=", " ", "null", "\n      ", "const", " ", "initPos", " ", "=", " ", "new", " ", "Vec3", "(", "0", ",", " ", "100", ",", " ", "0", ")", "\n      ", "const", " ", "objectSize", " ", "=", " ", "2", "\n      ", "switch", " ", "(", "objectType", ")", " ", "{", "\n        ", "case", " ", "1", ":", "\n          ", "mesh", " ", "=", " ", "new", " ", "Sphere", "(", "3", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ")", "\n          ", "mesh", ".", "position", ".", "set", "(", "initPos", ".", "x", ",", " ", "initPos", ".", "y", ",", " ", "initPos", ".", "z", ")", "\n          ", "this", ".", "physicsWorld", ".", "addSphereBody", "(", "mesh", ",", " ", "mesh", ".", "radius", ",", " ", "objectSize", " ", "*", " ", "5", ")", "\n          ", "break", "\n        ", "case", " ", "2", ":", "\n          ", "mesh", " ", "=", " ", "new", " ", "Box", "(", "new", " ", "Vec3", "(", "4", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ",", " ", "4", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ",", " ", "4", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", "))", "\n          ", "mesh", ".", "position", ".", "set", "(", "initPos", ".", "x", ",", " ", "initPos", ".", "y", ",", " ", "initPos", ".", "z", ")", "\n          ", "this", ".", "physicsWorld", ".", "addBoxBody", "(", "mesh", ",", " ", "mesh", ".", "size", ",", " ", "objectSize", " ", "*", " ", "5", ")", "\n          ", "break", "\n        ", "case", " ", "3", ":", "\n          ", "mesh", " ", "=", " ", "new", " ", "Cylinder", "(", "3", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ",", " ", "3", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ")", "\n          ", "mesh", ".", "position", ".", "set", "(", "initPos", ".", "x", ",", " ", "initPos", ".", "y", ",", " ", "initPos", ".", "z", ")", "\n          ", "this", ".", "physicsWorld", ".", "addCylinderBody", "(", "mesh", ",", " ", "mesh", ".", "radius", ",", " ", "mesh", ".", "height", ",", " ", "objectSize", " ", "*", " ", "5", ")", "\n          ", "break", "\n        ", "default", ":", "\n          ", "mesh", " ", "=", " ", "new", " ", "Cone", "(", "3", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ",", " ", "2", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ")", "\n          ", "mesh", ".", "position", ".", "set", "(", "initPos", ".", "x", ",", " ", "initPos", ".", "y", ",", " ", "initPos", ".", "z", ")", "\n          ", "this", ".", "physicsWorld", ".", "addConeBody", "(", "mesh", ",", " ", "mesh", ".", "radius", ",", " ", "mesh", ".", "height", ",", " ", "objectSize", " ", "*", " ", "5", ")", "\n          ", "break", "\n      ", "}", "\n\n      ", "this", ".", "scene", ".", "add", "(", "mesh", ")", "\n      ", "this", ".", "dynamicObjects", ".", "push", "(", "mesh", ")", "\n      ", "this", ".", "timeNextSpawn", " ", "=", " ", "time", " ", "+", " ", "this", ".", "objectTimePeriod", "\n    ", "}", "\n\n    ", "// C", "\n    ", "if", " ", "(", "this", ".", "keyboard", ".", "isPressC", "()", " ", "&&", " ", "!", "this", ".", "prevPressC", ")", " ", "{", "\n      ", "this", ".", "isDebug", " ", "=", " ", "!", "this", ".", "isDebug", "\n      ", "this", ".", "prevPressC", " ", "=", " ", "true", "\n      ", "if", " ", "(", "this", ".", "isDebug", ")", " ", "{", "\n        ", "this", ".", "selectCamera", ".", "remove", "(", "this", ".", "audioListener", ")", "\n        ", "this", ".", "selectCamera", " ", "=", " ", "this", ".", "controlCamera", "\n        ", "this", ".", "camera", ".", "helper", ".", "visible", " ", "=", " ", "true", "\n        ", "this", ".", "grid", ".", "visible", " ", "=", " ", "true", "\n        ", "this", ".", "axis", ".", "visible", " ", "=", " ", "true", "\n        ", "this", ".", "selectCamera", ".", "add", "(", "this", ".", "audioListener", ")", "\n      ", "}", " ", "else", " ", "{", "\n        ", "this", ".", "selectCamera", ".", "remove", "(", "this", ".", "audioListener", ")", "\n        ", "this", ".", "selectCamera", " ", "=", " ", "this", ".", "camera", "\n        ", "this", ".", "camera", ".", "helper", ".", "visible", " ", "=", " ", "false", "\n        ", "this", ".", "grid", ".", "visible", " ", "=", " ", "false", "\n        ", "this", ".", "axis", ".", "visible", " ", "=", " ", "false", "\n        ", "this", ".", "selectCamera", ".", "add", "(", "this", ".", "audioListener", ")", "\n      ", "}", "\n    ", "}", " ", "else", " ", "if", " ", "(", "!", "this", ".", "keyboard", ".", "isPressC", "())", " ", "{", "\n      ", "this", ".", "prevPressC", " ", "=", " ", "false", "\n    ", "}", "\n\n    ", "if", " ", "(", "!", "(", "this", ".", "keyboard", ".", "isPressA", "()", " ", "||", " ", "this", ".", "keyboard", ".", "isPressD", "()", " ", "||", " ", "this", ".", "keyboard", ".", "isPressW", "()", " ", "||", " ", "this", ".", "keyboard", ".", "isPressS", "()))", " ", "{", "\n      ", "this", ".", "model", ".", "stop", "()", "\n    ", "// A", "\n    ", "}", " ", "else", " ", "if", " ", "(", "this", ".", "keyboard", ".", "isPressA", "())", " ", "{", "\n      ", "this", ".", "model", ".", "move", "(", "this", ".", "selectCamera", ",", " ", "Math", ".", "PI", "/", "2", ")", "\n    ", "// D", "\n    ", "}", " ", "else", " ", "if", " ", "(", "this", ".", "keyboard", ".", "isPressD", "())", " ", "{", "\n      ", "this", ".", "model", ".", "move", "(", "this", ".", "selectCamera", ",", " ", "-", "Math", ".", "PI", "/", "2", ")", "\n    ", "// W", "\n    ", "}", " ", "else", " ", "if", " ", "(", "this", ".", "keyboard", ".", "isPressW", "())", " ", "{", "\n      ", "this", ".", "model", ".", "move", "(", "this", ".", "selectCamera", ",", " ", "0", ")", "\n    ", "// S", "\n    ", "}", " ", "else", " ", "if", " ", "(", "this", ".", "keyboard", ".", "isPressS", "())", " ", "{", "\n      ", "this", ".", "model", ".", "move", "(", "this", ".", "selectCamera", ",", " ", "Math", ".", "PI", ")", "\n    ", "}", "\n    ", "if", " ", "(", "this", ".", "clicked", ")", " ", "{", "\n      ", "const", " ", "dir", " ", "=", " ", "new", " ", "Vec3", "(", "this", ".", "clickPos", ".", "x", " ", "-", " ", "this", ".", "model", ".", "position", ".", "x", ",", " ", "0", ",", " ", "this", ".", "clickPos", ".", "z", " ", "-", " ", "this", ".", "model", ".", "position", ".", "z", ")", "\n      ", "if", " ", "(", "dir", ".", "length", "()", " ", "<", " ", "3", ")", " ", "{", "\n        ", "this", ".", "clicked", " ", "=", " ", "false", "\n      ", "}", "\n      ", "this", ".", "model", ".", "moveTo", "(", "this", ".", "clickPos", ")", "\n    ", "}", "\n    ", "// 移動結果を物理計算空間に反映", "\n    ", "this", ".", "physicsWorld", ".", "setPhysicsPose", "(", "this", ".", "model", ")", "\n\n    ", "const", " ", "delay", " ", "=", " ", "3", "\n    ", "if", " ", "(", "this", ".", "isGround", " ", "&&", " ", "time", " ", ">", " ", "(", "this", ".", "jumbTime", " ", "||", " ", "0", ")", " ", "+", " ", "delay", " ", "&&", " ", "this", ".", "keyboard", ".", "isPressSpace", "())", " ", "{", "\n      ", "this", ".", "physicsWorld", ".", "addImpulse", "(", "this", ".", "model", ",", " ", "new", " ", "Vec3", "(", "0", ",", " ", "8000", ",", " ", "0", "))", "\n      ", "this", ".", "sound", ".", "play", "()", "\n      ", "this", ".", "isGround", " ", "=", " ", "false", "\n      ", "this", ".", "jumbTime", " ", "=", " ", "time", "\n    ", "}", "\n    ", "this", ".", "physicsWorld", ".", "addForce", "(", "this", ".", "model", ",", " ", "new", " ", "Vec3", "(", "0", ",", " ", "-", "3000", ",", " ", "0", "))", "\n\n    ", "// 物理計算更新", "\n    ", "this", ".", "physicsWorld", ".", "update", "(", "delta", ")", "\n\n    ", "// 物理空間上のオブジェクトの当たり判定", "\n    ", "const", " ", "hitResult", " ", "=", " ", "this", ".", "physicsWorld", ".", "hitTest", "([", "this", ".", "heightMap", ",", " ", "this", ".", "model", "])", "\n    ", "if", " ", "(", "Object", ".", "keys", "(", "hitResult", ").", "length", " ", ">", " ", "0", ")", " ", "{", "\n      ", "if", " ", "(", "time", " ", ">", " ", "(", "this", ".", "jumbTime", " ", "||", " ", "0", ")", " ", "+", " ", "delay", ")", " ", "{", "\n        ", "this", ".", "isGround", " ", "=", " ", "true", "\n      ", "}", "\n    ", "}", "\n\n    ", "for", " ", "(", "let", " ", "i", " ", "=", " ", "0", ";", " ", "i", " ", "<", " ", "this", ".", "dynamicObjects", ".", "length", ";", " ", "i", "++", ")", " ", "{", "\n      ", "const", " ", "objThree", " ", "=", " ", "this", ".", "dynamicObjects", "[", "i", "]", "\n      ", "// ドラッグしていないオブジェクト以外反映する", "\n      ", "if", " ", "(", "objThree", ".", "userData", " ", "&&", " ", "objThree", ".", "userData", ".", "ignorePhysics", ")", " ", "{", "\n        ", "continue", "\n      ", "}", "\n      ", "this", ".", "physicsWorld", ".", "setModelPose", "(", "objThree", ")", "\n    ", "}", "\n\n    ", "const", " ", "horizontalSpeed", " ", "=", " ", "1.5", "\n    ", "const", " ", "verticalSpeed", " ", "=", " ", "1.33", "\n    ", "this", ".", "particle", ".", "simulate", "(", "delta", ",", " ", "new", " ", "Vec3", "(", "Math", ".", "sin", "(", "this", ".", "particle", ".", "tick", " ", "*", " ", "horizontalSpeed", ")", " ", "*", " ", "20", ",", " ", "Math", ".", "sin", "(", "this", ".", "particle", ".", "tick", " ", "*", " ", "verticalSpeed", ")", " ", "*", " ", "10", " ", "+", " ", "30", ",", " ", "Math", ".", "sin", "(", "this", ".", "particle", ".", "tick", " ", "*", " ", "horizontalSpeed", " ", "+", " ", "verticalSpeed", ")", " ", "*", " ", "5", "))", "\n    ", "this", ".", "water", ".", "update", "()", "\n\n    ", "this", ".", "physicsWorld", ".", "setModelPose", "(", "this", ".", "model", ")", "\n    ", "this", ".", "controlCamera", ".", "controls", ".", "update", "()", "\n    ", "this", ".", "renderer", ".", "setClearColor", "(", "0x000000", ",", " ", "0", ")", "\n    ", "this", ".", "renderer", ".", "clear", "(", "true", ",", " ", "true", ",", " ", "true", ")", "\n    ", "this", ".", "renderer", ".", "render", "(", "this", ".", "scene", ",", " ", "this", ".", "selectCamera", ")", "\n    ", "this", ".", "renderer", ".", "clearDepth", "()", "\n    ", "this", ".", "renderer", ".", "render", "(", "this", ".", "sceneOrtho", ",", " ", "this", ".", "cameraOrtho", ")", "\n  ", "}", "\n", "}", "\n", "\n", "\n"], "code": ["$ ", "brew ", "install ", "yarn\n", "$ ", "yarn global add browser-sync\n", "$ ", "yarn\n", "$ ", "yarn dev\n", "const", " ", "webpack", " ", "=", " ", "require", "(", "'webpack'", ")", "\n", "const", " ", "path", " ", "=", " ", "require", "(", "'path'", ")", "\n\n", "module", ".", "exports", " ", "=", " ", "{", "\n  ", "mode", ":", " ", "'development'", ",", "\n  ", "devtool", ":", " ", "'inline-source-map'", ",", "\n  ", "entry", ":", " ", "[", "'babel-polyfill'", ",", " ", "'./app.js'", "],", "\n  ", "output", ":", " ", "{", "\n    ", "// 出力ファイル名", "\n    ", "filename", ":", " ", "'bundle.js'", ",", "\n  ", "},", "\n  ", "resolve", ":", " ", "{", "\n    ", "// 使用したいコントロールやレンダラを定義しておきます", "\n    ", "alias", ":", " ", "{", "\n      ", "// 物体ドラッグ", "\n      ", "'three/DragControls'", ":", " ", "path", ".", "join", "(", "__dirname", ",", " ", "'node_modules/three/examples/js/controls/DragControls.js'", "),", "\n      ", "// カメラ制御", "\n      ", "'three/OrbitControls'", ":", " ", "path", ".", "join", "(", "__dirname", ",", " ", "'node_modules/three/examples/js/controls/OrbitControls.js'", "),", "\n      ", "// GLTF", "\n      ", "'three/GLTFLoader'", ":", " ", "path", ".", "join", "(", "__dirname", ",", " ", "'node_modules/three/examples/js/loaders/GLTFLoader.js'", "),", "\n      ", "// DracoLoader", "\n      ", "'three/Draco'", ":", " ", "path", ".", "join", "(", "__dirname", ",", " ", "'node_modules/three/examples/js/loaders/DRACOLoader.js'", "),", "\n      ", "// Particle", "\n      ", "'three/Particle'", ":", " ", "path", ".", "join", "(", "__dirname", ",", " ", "'node_modules/three/examples/js/GPUParticleSystem.js'", "),", "\n      ", "// Water", "\n      ", "'three/Water'", ":", " ", "path", ".", "join", "(", "__dirname", ",", " ", "'node_modules/three/examples/js/objects/Water.js'", "),", "\n      ", "// Sky", "\n      ", "'three/Sky'", ":", " ", "path", ".", "join", "(", "__dirname", ",", " ", "'node_modules/three/examples/js/objects/Sky.js'", "),", "\n    ", "},", "\n    ", "extensions", ":", " ", "[", "\n      ", "'.js'", ",", "\n    ", "],", "\n  ", "},", "\n  ", "module", ":", " ", "{", "\n    ", "rules", ":", " ", "[", "\n      ", "{", "\n        ", "// 拡張子 .js の場合", "\n        ", "test", ":", " ", "/", "\\.", "js$/", ",", "\n        ", "use", ":", " ", "[", "\n          ", "{", "\n            ", "loader", ":", " ", "'babel-loader'", ",", "\n            ", "query", ":", " ", "{", "\n              ", "cacheDirectory", ":", " ", "true", ",", "\n              ", "presets", ":", " ", "[", "\n                ", "[", "\n                  ", "'@babel/env'", ",", " ", "{", "\n                    ", "targets", ":", " ", "{", "\n                      ", "browsers", ":", " ", "[", "\n                        ", "'>0.25%'", ",", "\n                        ", "'not ie 11'", ",", "\n                        ", "'not op_mini all'", ",", "\n                      ", "],", "\n                    ", "},", "\n                    ", "modules", ":", " ", "false", ",", "\n                  ", "},", "\n                ", "],", "\n              ", "],", "\n              ", "plugins", ":", " ", "[", "'babel-plugin-transform-class-properties'", "],", "\n            ", "},", "\n          ", "},", "\n        ", "],", "\n      ", "},", "\n    ", "],", "\n  ", "},", "\n  ", "plugins", ":", " ", "[", "\n    ", "// THREE.Scene などの形式で three.js のオブジェクトを使用できるようにします。", "\n    ", "new", " ", "webpack", ".", "ProvidePlugin", "({", "\n      ", "'THREE'", ":", " ", "'three/build/three'", ",", "\n    ", "}),", "\n  ", "],", "\n", "}", "\n", "<!DOCTYPE html>", "\n", "<html", " ", "lang=", "\"ja\"", ">", "\n  ", "<head>", "\n    ", "<meta", " ", "charset=", "\"utf-8\"", " ", "/>", "\n    ", "<title>", "タイトル", "</title>", "\n    ", "<meta", " ", "name=", "\"viewport\"", " ", "content=", "\"width=device-width, initial-scale=1\"", " ", "/>", "\n    ", "<style>", "\n  ", "body", " ", "{", "\n    ", "margin", ":", " ", "0", ";", "\n    ", "overflow", ":", " ", "hidden", ";", "\n  ", "}", "\n    ", "</style>", "\n  ", "</head>", "\n", "<body>", "\n  ", "<div", " ", "id=", "\"startButton\"", ">", "Click to start (※音が出ます)", "</div>", "\n  ", "<script ", "type=", "\"text/javascript\"", " ", "src=", "'node_modules/three/examples/js/ImprovedNoise.js'", "></script>", "\n  ", "<script ", "type=", "\"text/javascript\"", " ", "src=", "\"node_modules/three/examples/js/libs/ammo.js\"", "></script>", "\n  ", "<script ", "type=", "\"text/javascript\"", " ", "src=", "\"dist/bundle.js\"", "></script>", "\n", "</body>", "\n", "</html>", "\n", "import", " ", "Game", " ", "from", " ", "'./game'", "\n\n", "const", " ", "startButton", " ", "=", " ", "document", ".", "getElementById", "(", "'startButton'", ")", "\n\n", "function", " ", "init", "()", " ", "{", "\n  ", "startButton", ".", "remove", "()", "\n  ", "const", " ", "game", " ", "=", " ", "new", " ", "Game", "()", "\n  ", "game", ".", "init", "()", "\n", "}", "\n\n", "startButton", ".", "addEventListener", "(", "'click'", ",", " ", "init", ")", "\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n\n    ", "requestAnimationFrame", "(", "this", ".", "loop", ")", "\n  ", "}", "\n\n  ", "loop", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "requestAnimationFrame", "(", "this", ".", "loop", ")", "\n    ", "this", ".", "render", "(", "frame", ")", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n  ", "}", "\n", "}", "\n", "import", " ", "Render", " ", "from", " ", "'./src/Render'", "\n", "import", " ", "Scene", " ", "from", " ", "'./src/Scene'", "\n", "import", " ", "Clock", " ", "from", " ", "'./src/Clock'", "\n", "import", " ", "Camera3D", " ", "from", " ", "'./src/Camera3D'", "\n", "import", " ", "Vec3", " ", "from", " ", "'./src/Vec3'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// アニメーションとかで使う時間用", "\n    ", "this", ".", "clock", " ", "=", " ", "new", " ", "Clock", "()", "\n    ", "// シーン作成", "\n    ", "this", ".", "scene", " ", "=", " ", "new", " ", "Scene", "()", "\n    ", "// レンダラー作成", "\n    ", "this", ".", "renderer", " ", "=", " ", "new", " ", "Render", "(", "this", ".", "onResize", ")", "\n\n    ", "// 3Dカメラ", "\n    ", "const", " ", "eye", " ", "=", " ", "new", " ", "Vec3", "(", "0", ",", " ", "50", ",", " ", "-", "150", ")", "\n    ", "const", " ", "lookAt", " ", "=", " ", "new", " ", "Vec3", "(", "0", ",", " ", "0", ",", " ", "0", ")", "\n    ", "this", ".", "camera", " ", "=", " ", "new", " ", "Camera3D", "(", "eye", ",", " ", "lookAt", ",", " ", "1", ",", " ", "100", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "camera", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "camera", ".", "helper", ")", " ", "// helper", "\n\n    ", "// コントロールカメラ", "\n    ", "const", " ", "debugEye", " ", "=", " ", "new", " ", "Vec3", "(", "100", ",", " ", "200", ",", " ", "200", ")", "\n    ", "const", " ", "debugLookAt", " ", "=", " ", "new", " ", "Vec3", "(", "0", ",", " ", "0", ",", " ", "0", ")", "\n    ", "this", ".", "controlCamera", " ", "=", " ", "new", " ", "Camera3D", "(", "debugEye", ",", " ", "debugLookAt", ",", " ", "1", ",", " ", "4000", ")", "\n    ", "this", ".", "controlCamera", ".", "controls", " ", "=", " ", "this", ".", "controlCamera", ".", "createControls", "()", "\n\n    ", "requestAnimationFrame", "(", "this", ".", "loop", ")", "\n  ", "}", "\n\n  ", "onResize", " ", "=", " ", "()", " ", "=>", "  ", "{", "\n    ", "this", ".", "renderer", ".", "resize", "()", "\n\n    ", "const", " ", "cameras", " ", "=", " ", "[", "this", ".", "camera", ",", " ", "this", ".", "controlCamera", "]", "\n    ", "for", " ", "(", "let", " ", "camera", " ", "of", " ", "cameras", ")", " ", "{", "\n      ", "camera", ".", "resize", "()", "\n    ", "}", "\n    ", "this", ".", "sprite", ".", "onResizeWindow", "()", "\n  ", "}", "\n\n  ", "loop", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "requestAnimationFrame", "(", "this", ".", "loop", ")", "\n    ", "this", ".", "render", "(", "frame", ")", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "this", ".", "controlCamera", ".", "controls", ".", "update", "()", "\n    ", "this", ".", "renderer", ".", "setClearColor", "(", "0x000000", ",", " ", "0", ")", "\n    ", "this", ".", "renderer", ".", "clear", "(", "true", ",", " ", "true", ",", " ", "true", ")", "\n    ", "this", ".", "renderer", ".", "render", "(", "this", ".", "scene", ",", " ", "this", ".", "controlCamera", ")", "\n  ", "}", "\n", "}", "\n", "import", " ", "Axis", " ", "from", " ", "'./src/Axis'", "\n", "import", " ", "Grid", " ", "from", " ", "'./src/Grid'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// Grid", "\n    ", "this", ".", "grid", " ", "=", " ", "new", " ", "Grid", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "grid", ")", "\n    ", "// Axis", "\n    ", "this", ".", "axis", " ", "=", " ", "new", " ", "Axis", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "axis", ")", "\n  ", "}", "\n\n  ", "...", "略", "\n", "}", "\n", "import", " ", "Sphere", " ", "from", " ", "'./src/Sphere'", "\n", "import", " ", "Box", " ", "from", " ", "'./src/Box'", "\n", "import", " ", "Cylinder", " ", "from", " ", "'./src/Cylinder'", "\n", "import", " ", "Cone", " ", "from", " ", "'./src/Cone'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// Sphere", "\n    ", "const", " ", "sphere", " ", "=", " ", "new", " ", "Sphere", "(", "3", ")", "\n    ", "sphere", ".", "position", ".", "set", "(", "30", ",", " ", "0", ",", " ", "0", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "sphere", ")", "\n\n    ", "// Box", "\n    ", "const", " ", "box", " ", "=", " ", "new", " ", "Box", "(", "new", " ", "Vec3", "(", "2", ",", " ", "10", ",", " ", "4", "))", "\n    ", "box", ".", "position", ".", "set", "(", "10", ",", " ", "0", ",", " ", "0", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "box", ")", "\n\n    ", "// Cylinder", "\n    ", "const", " ", "cylinder", " ", "=", " ", "new", " ", "Cylinder", "(", "3", ",", " ", "10", ")", "\n    ", "cylinder", ".", "position", ".", "set", "(", "-", "10", ",", " ", "0", ",", " ", "0", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "cylinder", ")", "\n\n    ", "// Cone", "\n    ", "const", " ", "cone", " ", "=", " ", "new", " ", "Cone", "(", "3", ",", " ", "8", ")", "\n    ", "cone", ".", "position", ".", "set", "(", "-", "30", ",", " ", "0", ",", " ", "0", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "cone", ")", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "...", "略", "\n", "}", "\n", "import", " ", "DirectionalLight", " ", "from", " ", "'./src/DirectionalLight'", "\n", "import", " ", "AmbientLight", " ", "from", " ", "'./src/AmbientLight'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// lighting", "\n    ", "this", ".", "light", " ", "=", " ", "new", " ", "DirectionalLight", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "light", ")", "\n    ", "// AmbientLight", "\n    ", "this", ".", "ambient", " ", "=", " ", "new", " ", "AmbientLight", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "ambient", ")", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "...", "略", "\n", "}", "\n", "import", " ", "CubeMap", " ", "from", " ", "'./src/CubeMap'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// シーン作成", "\n    ", "this", ".", "scene", " ", "=", " ", "new", " ", "Scene", "()", "\n    ", "this", ".", "cubeMap", " ", "=", " ", "new", " ", "CubeMap", "(", "'textures/'", ")", "\n    ", "this", ".", "scene", ".", "background", " ", "=", " ", "this", ".", "cubeMap", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "...", "略", "\n", "}", "\n", "import", " ", "Fog", " ", "from", " ", "'./src/Fog'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// シーン作成", "\n    ", "this", ".", "scene", " ", "=", " ", "new", " ", "Scene", "()", "\n    ", "this", ".", "scene", ".", "fog", " ", "=", " ", "new", " ", "Fog", "()", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "...", "略", "\n", "}", "\n", "import", " ", "Particle", " ", "from", " ", "'./src/Particle'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// Particle", "\n    ", "this", ".", "particle", " ", "=", " ", "new", " ", "Particle", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "particle", ")", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "// パーティクルの動きをシミュレーションする", "\n    ", "const", " ", "horizontalSpeed", " ", "=", " ", "1.5", "\n    ", "const", " ", "verticalSpeed", " ", "=", " ", "1.33", "\n    ", "this", ".", "particle", ".", "simulate", "(", "delta", ",", " ", "new", " ", "Vec3", "(", "Math", ".", "sin", "(", "this", ".", "particle", ".", "tick", " ", "*", " ", "horizontalSpeed", ")", " ", "*", " ", "20", ",", " ", "Math", ".", "sin", "(", "this", ".", "particle", ".", "tick", " ", "*", " ", "verticalSpeed", ")", " ", "*", " ", "10", " ", "+", " ", "30", ",", " ", "Math", ".", "sin", "(", "this", ".", "particle", ".", "tick", " ", "*", " ", "horizontalSpeed", " ", "+", " ", "verticalSpeed", ")", " ", "*", " ", "5", "))", "\n\n    ", "// デバッグカメラの操作", "\n    ", "this", ".", "controlCamera", ".", "controls", ".", "update", "()", "\n    ", "// 描画画面をクリアする", "\n    ", "this", ".", "renderer", ".", "setClearColor", "(", "0x000000", ",", " ", "0", ")", "\n    ", "this", ".", "renderer", ".", "clear", "(", "true", ",", " ", "true", ",", " ", "true", ")", "\n    ", "// 描画", "\n    ", "this", ".", "renderer", ".", "render", "(", "this", ".", "scene", ",", " ", "this", ".", "controlCamera", ")", "\n  ", "}", "\n", "}", "\n", "// import CubeMap from './src/CubeMap'", "\n", "import", " ", "Water", " ", "from", " ", "'./src/Water'", "\n", "import", " ", "Sky", " ", "from", " ", "'./src/Sky'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n    ", "this", ".", "scene", " ", "=", " ", "new", " ", "Scene", "()", "\n    ", "// this.cubeMap = new CubeMap('textures/')", "\n    ", "// this.scene.background = this.cubeMap", "\n\n    ", "// Sky", "\n    ", "this", ".", "sky", " ", "=", " ", "new", " ", "Sky", "()", "\n    ", "this", ".", "sky", ".", "setEnv", "({", "turbidity", ":", " ", "10", ",", " ", "rayleigh", ":", " ", "2", ",", " ", "luminance", ":", " ", "1", ",", " ", "mieCoefficient", ":", " ", "0.005", ",", " ", "mieDirectionalG", ":", " ", "0.8", "})", "\n    ", "this", ".", "sky", ".", "setLight", "(", "this", ".", "light", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "sky", ")", "\n\n    ", "// Water", "\n    ", "this", ".", "water", " ", "=", " ", "new", " ", "Water", "(", "this", ".", "light", ")", "\n    ", "this", ".", "water", ".", "setEnv", "({", "distortionScale", ":", " ", "3.7", ",", " ", "alpha", ":", " ", "0.95", "})", "\n    ", "this", ".", "water", ".", "setLight", "(", "this", ".", "light", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "water", ")", "\n\n    ", "// Particle", "\n    ", "this", ".", "particle", " ", "=", " ", "new", " ", "Particle", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "particle", ")", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "// 波を動かす", "\n    ", "this", ".", "water", ".", "update", "()", "\n\n    ", "...", "\n    ", "// 描画", "\n  ", "}", "\n", "}", "\n", "import", " ", "HeightMap", " ", "from", " ", "'./src/HeightMap'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n    ", "// HeightMap", "\n    ", "this", ".", "heightMap", " ", "=", " ", "new", " ", "HeightMap", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "heightMap", ")", "\n\n    ", "...", "\n  ", "}", "\n\n", "}", "\n", "import", " ", "Loader", " ", "from", " ", "'./src/Loader'", "\n", "import", " ", "GLTFModel", " ", "from", " ", "'./src/GLTFModel'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n    ", "// Loader", "\n    ", "this", ".", "loader", " ", "=", " ", "new", " ", "Loader", "()", "\n\n    ", "// GLTF", "\n    ", "const", " ", "tree", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadGLTFModel", "(", "'./model/tree.glb'", ")", "\n    ", "const", " ", "treePositions", " ", "=", " ", "[", "\n      ", "new", " ", "Vec3", "(", "132", ",", " ", "20", ",", " ", "-", "190", "),", "\n      ", "new", " ", "Vec3", "(", "216", ",", " ", "20", ",", " ", "80", "),", "\n      ", "new", " ", "Vec3", "(", "-", "82", ",", " ", "20", ",", " ", "222", "),", "\n      ", "new", " ", "Vec3", "(", "13", ",", " ", "20", ",", " ", "-", "125", "),", "\n      ", "new", " ", "Vec3", "(", "-", "100", ",", " ", "20", ",", " ", "31", "),", "\n    ", "]", "\n    ", "this", ".", "trees", " ", "=", " ", "[]", "\n    ", "for", " ", "(", "let", " ", "i", " ", "=", " ", "0", ";", " ", "i", " ", "<", " ", "5", ";", " ", "i", "++", ")", " ", "{", "\n      ", "this", ".", "trees", ".", "push", "(", "new", " ", "GLTFModel", "(", "tree", ",", " ", "true", ",", " ", "true", "))", "\n      ", "this", ".", "trees", "[", "i", "].", "init", "(", "treePositions", "[", "i", "],", " ", "0", ",", " ", "8", ")", "\n      ", "this", ".", "scene", ".", "add", "(", "this", ".", "trees", "[", "i", "])", "\n    ", "}", "\n\n    ", "// GLTF Skin", "\n    ", "const", " ", "gltf", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadGLTFModel", "(", "'./model/CesiumMan.gltf'", ")", "\n    ", "this", ".", "model", " ", "=", " ", "new", " ", "GLTFModel", "(", "gltf", ",", " ", "true", ")", "\n    ", "this", ".", "model", ".", "init", "(", "new", " ", "Vec3", "(", "0", ",", " ", "20", ",", " ", "0", "),", " ", "-", "Math", ".", "PI", "/", "2", ",", " ", "10", ")", "\n    ", "this", ".", "model", ".", "actions", "[", "0", "].", "play", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "model", ")", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "this", ".", "model", ".", "mixer", " ", "&&", " ", "this", ".", "model", ".", "mixer", ".", "update", "(", "delta", ")", " ", "// モデルアニメーション更新", "\n\n    ", "...", "\n    ", "// 描画", "\n  ", "}", "\n", "}", "\n", "import", " ", "Camera2D", " ", "from", " ", "'./src/Camera2D'", "\n", "import", " ", "Sprite", " ", "from", " ", "'./src/Sprite'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// シーン作成", "\n    ", "this", ".", "scene", " ", "=", " ", "new", " ", "Scene", "()", "\n    ", "this", ".", "sceneOrtho", " ", "=", " ", "new", " ", "Scene", "()", "\n\n    ", "// 2Dカメラ", "\n    ", "this", ".", "cameraOrtho", " ", "=", " ", "new", " ", "Camera2D", "()", "\n\n    ", "// Sprite", "\n    ", "const", " ", "texture", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadTexture", "(", "'./textures/sprite1.png'", ")", "\n    ", "this", ".", "sprite", " ", "=", " ", "new", " ", "Sprite", "(", "texture", ")", "\n    ", "this", ".", "sprite", ".", "setPos", "(", "-", "1", ",", " ", "1", ")", "\n    ", "this", ".", "sprite", ".", "setCenter", "({", "right", ":", " ", "true", ",", " ", "bottom", ":", " ", "true", "})", "\n    ", "this", ".", "sprite", ".", "setSize", "(", "64", ",", " ", "64", ")", "\n    ", "this", ".", "sceneOrtho", ".", "add", "(", "this", ".", "sprite", ")", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "onResize", " ", "=", " ", "()", " ", "=>", "  ", "{", "\n    ", "this", ".", "renderer", ".", "resize", "()", "\n\n    ", "// 2Dカメラ追加", "\n    ", "const", " ", "cameras", " ", "=", " ", "[", "this", ".", "camera", ",", " ", "this", ".", "cameraOrtho", ",", " ", "this", ".", "controlCamera", "]", "\n    ", "for", " ", "(", "let", " ", "camera", " ", "of", " ", "cameras", ")", " ", "{", "\n      ", "camera", ".", "resize", "()", "\n    ", "}", "\n    ", "this", ".", "sprite", ".", "onResizeWindow", "()", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "this", ".", "controlCamera", ".", "controls", ".", "update", "()", "\n    ", "this", ".", "renderer", ".", "setClearColor", "(", "0x000000", ",", " ", "0", ")", "\n    ", "this", ".", "renderer", ".", "clear", "(", "true", ",", " ", "true", ",", " ", "true", ")", "\n    ", "this", ".", "renderer", ".", "render", "(", "this", ".", "scene", ",", " ", "this", ".", "controlCamera", ")", "\n    ", "// 2D描画前にレンダラのzバッファをクリアする", "\n    ", "this", ".", "renderer", ".", "clearDepth", "()", "\n    ", "// 2D描画", "\n    ", "this", ".", "renderer", ".", "render", "(", "this", ".", "sceneOrtho", ",", " ", "this", ".", "cameraOrtho", ")", "\n  ", "}", "\n", "}", "\n", "import", " ", "TWEEN", " ", "from", " ", "'@tweenjs/tween.js'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "const", " ", "coords", " ", "=", " ", "{", " ", "x", ":", " ", "-", "1", ",", " ", "y", ":", " ", "1", " ", "}", "\n    ", "this", ".", "tween", " ", "=", " ", "new", " ", "TWEEN", ".", "Tween", "(", "coords", ")", "\n        ", ".", "to", "({", " ", "x", ":", " ", "-", "1", ",", " ", "y", ":", " ", "0", " ", "},", " ", "3000", ")", "\n        ", ".", "easing", "(", "TWEEN", ".", "Easing", ".", "Quadratic", ".", "Out", ")", "\n        ", ".", "onUpdate", "(()", " ", "=>", " ", "{", "\n          ", "this", ".", "sprite", ".", "setPos", "(", "coords", ".", "x", ",", " ", "coords", ".", "y", ")", "\n        ", "})", "\n\n    ", "this", ".", "tweenBack", " ", "=", " ", "new", " ", "TWEEN", ".", "Tween", "(", "coords", ")", "\n        ", ".", "to", "({", " ", "x", ":", " ", "-", "1", ",", " ", "y", ":", " ", "1", " ", "},", " ", "3000", ")", "\n        ", ".", "easing", "(", "TWEEN", ".", "Easing", ".", "Quadratic", ".", "Out", ")", "\n        ", ".", "onUpdate", "(()", " ", "=>", " ", "{", "\n          ", "this", ".", "sprite", ".", "setPos", "(", "coords", ".", "x", ",", " ", "coords", ".", "y", ")", "\n        ", "})", "\n\n    ", "this", ".", "tween", ".", "chain", "(", "this", ".", "tweenBack", ")", "\n    ", "this", ".", "tweenBack", ".", "chain", "(", "this", ".", "tween", ")", "\n    ", "this", ".", "tween", "\n      ", ".", "delay", "(", "3000", ")", "\n      ", ".", "start", "()", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "TWEEN", ".", "update", "(", "frame", ")", " ", "// TWEENオブジェクト更新", "\n\n    ", "...", "\n    ", "// 描画", "\n  ", "}", "\n", "}", "\n", "import", " ", "Audio", " ", "from", " ", "'./src/Audio'", "\n", "import", " ", "AudioListener", " ", "from", " ", "'./src/AudioListener'", "\n", "import", " ", "PositionalAudio", " ", "from", " ", "'./src/PositionalAudio'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// Audio", "\n    ", "this", ".", "audioListener", " ", "=", " ", "new", " ", "AudioListener", "()", "\n    ", "this", ".", "buffer", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadAudio", "(", "'./sounds/bgm_maoudamashii_healing13.mp3'", ")", "\n    ", "this", ".", "bgm", " ", "=", " ", "new", " ", "Audio", "(", "this", ".", "buffer", ",", " ", "this", ".", "audioListener", ")", "\n    ", "this", ".", "bgm", ".", "setLoop", "(", "true", ")", "\n    ", "this", ".", "bgm", ".", "setVolume", "(", "0.1", ")", "\n    ", "this", ".", "bgm", ".", "play", "()", "\n    ", "// PositionalAudio(3Dサウンド)", "\n    ", "this", ".", "soundBuffer", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadAudio", "(", "'./sounds/ping_pong.mp3'", ")", "\n    ", "this", ".", "sound", " ", "=", " ", "new", " ", "PositionalAudio", "(", "this", ".", "soundBuffer", ",", " ", "this", ".", "audioListener", ")", "\n    ", "this", ".", "sound", ".", "setVolume", "(", "10", ")", "\n    ", "this", ".", "sound", ".", "setRefDistance", "(", "20", ")", "\n    ", "// 3Dサウンドの場合は音を聞く位置をカメラに紐付ける", "\n    ", "this", ".", "controlCamera", ".", "add", "(", "this", ".", "audioListener", ")", "\n    ", "// 3Dオブジェクトに3Dサウンドを紐付ける", "\n    ", "this", ".", "model", ".", "add", "(", "this", ".", "sound", ")", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "// 一定時間おきに再生", "\n    ", "this", ".", "count", " ", "=", " ", "this", ".", "count", " ", "||", " ", "0", "\n    ", "if", " ", "(", "this", ".", "count", " ", "%", " ", "60", " ", "===", " ", "0", ")", " ", "{", "\n      ", "this", ".", "sound", ".", "play", "()", "\n    ", "}", "\n    ", "this", ".", "count", "++", "\n\n    ", "...", "\n    ", "// 描画", "\n  ", "}", "\n", "}", "\n", "import", " ", "PhysicsWorld", " ", "from", " ", "'./src/PhysicsWorld'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// 物理世界作成", "\n    ", "this", ".", "physicsWorld", " ", "=", " ", "new", " ", "PhysicsWorld", "()", "\n\n\n    ", "// HeightMap", "\n    ", "this", ".", "heightMap", " ", "=", " ", "new", " ", "HeightMap", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "heightMap", ")", "\n    ", "// HeightMapオブジェクトを物理空間に追加", "\n    ", "this", ".", "physicsWorld", ".", "addHeightMapBody", "(", "this", ".", "heightMap", ")", "\n\n    ", "// Loader", "\n    ", "this", ".", "loader", " ", "=", " ", "new", " ", "Loader", "()", "\n\n    ", "// GLTF", "\n    ", "const", " ", "tree", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadGLTFModel", "(", "'./model/tree.glb'", ")", "\n    ", "const", " ", "treePositions", " ", "=", " ", "[", "\n      ", "new", " ", "Vec3", "(", "132", ",", " ", "20", ",", " ", "-", "190", "),", "\n      ", "new", " ", "Vec3", "(", "216", ",", " ", "20", ",", " ", "80", "),", "\n      ", "new", " ", "Vec3", "(", "-", "82", ",", " ", "20", ",", " ", "222", "),", "\n      ", "new", " ", "Vec3", "(", "13", ",", " ", "20", ",", " ", "-", "125", "),", "\n      ", "new", " ", "Vec3", "(", "-", "100", ",", " ", "20", ",", " ", "31", "),", "\n    ", "]", "\n    ", "this", ".", "trees", " ", "=", " ", "[]", "\n    ", "for", " ", "(", "let", " ", "i", " ", "=", " ", "0", ";", " ", "i", " ", "<", " ", "5", ";", " ", "i", "++", ")", " ", "{", "\n      ", "this", ".", "trees", ".", "push", "(", "new", " ", "GLTFModel", "(", "tree", ",", " ", "true", ",", " ", "true", "))", "\n      ", "this", ".", "trees", "[", "i", "].", "init", "(", "treePositions", "[", "i", "],", " ", "0", ",", " ", "8", ")", "\n      ", "this", ".", "trees", "[", "i", "].", "getCenter", "()", "\n      ", "this", ".", "scene", ".", "add", "(", "this", ".", "trees", "[", "i", "])", "\n      ", "// Kinematicオブジェクトを物理空間に追加", "\n      ", "let", " ", "size", " ", "=", " ", "new", " ", "Vec3", "()", "\n      ", "this", ".", "trees", "[", "i", "].", "boundingBox", ".", "getSize", "(", "size", ")", "\n      ", "this", ".", "physicsWorld", ".", "addBoxBody", "(", "this", ".", "trees", "[", "i", "],", " ", "size", ".", "multiplyScalar", "(", "6", "),", " ", "0", ",", " ", "true", ")", "\n    ", "}", "\n\n    ", "// GLTF Skin", "\n    ", "const", " ", "gltf", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadGLTFModel", "(", "'./model/CesiumMan.gltf'", ")", "\n    ", "this", ".", "model", " ", "=", " ", "new", " ", "GLTFModel", "(", "gltf", ",", " ", "true", ")", "\n    ", "this", ".", "model", ".", "init", "(", "new", " ", "Vec3", "(", "0", ",", " ", "20", ",", " ", "0", "),", " ", "-", "Math", ".", "PI", "/", "2", ",", " ", "10", ")", "\n    ", "this", ".", "model", ".", "actions", "[", "0", "].", "play", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "model", ")", "\n    ", "// 物理空間に追加", "\n    ", "this", ".", "model", ".", "getCenter", "()", "\n    ", "this", ".", "physicsWorld", ".", "addHumanBody", "(", "this", ".", "model", ",", " ", "0.8", ")", "\n\n    ", "...", "\n  ", "}", "\n\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "// 物理計算更新", "\n    ", "this", ".", "physicsWorld", ".", "update", "(", "delta", ")", "\n\n    ", "// 物理空間上のオブジェクトの当たり判定", "\n    ", "const", " ", "hitResult", " ", "=", " ", "this", ".", "physicsWorld", ".", "hitTest", "([", "this", ".", "heightMap", ",", " ", "this", ".", "model", "])", "\n    ", "if", " ", "(", "Object", ".", "keys", "(", "hitResult", ").", "length", " ", ">", " ", "0", ")", " ", "{", "\n      ", "this", ".", "physicsWorld", ".", "addImpulse", "(", "this", ".", "model", ",", " ", "new", " ", "Vec3", "(", "0", ",", " ", "50", ",", " ", "0", "))", "\n    ", "}", " ", "else", " ", "{", "\n      ", "this", ".", "physicsWorld", ".", "addForce", "(", "this", ".", "model", ",", " ", "new", " ", "Vec3", "(", "0", ",", " ", "0", ",", " ", "50", "))", "\n    ", "}", "\n    ", "this", ".", "physicsWorld", ".", "setModelPose", "(", "this", ".", "model", ")", "\n\n    ", "...", "\n    ", "描画", "\n  ", "}", "\n", "}", "\n", "import", " ", "Keyboard", " ", "from", " ", "'./src/Keyboard'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// キーボード", "\n    ", "this", ".", "keyboard", " ", "=", " ", "new", " ", "Keyboard", "()", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "if", " ", "(", "!", "(", "this", ".", "keyboard", ".", "isPressA", "()", " ", "||", " ", "this", ".", "keyboard", ".", "isPressD", "()", " ", "||", " ", "this", ".", "keyboard", ".", "isPressW", "()", " ", "||", " ", "this", ".", "keyboard", ".", "isPressS", "()))", " ", "{", "\n      ", "this", ".", "model", ".", "stop", "()", "\n    ", "// A", "\n    ", "}", " ", "else", " ", "if", " ", "(", "this", ".", "keyboard", ".", "isPressA", "())", " ", "{", "\n      ", "this", ".", "model", ".", "move", "(", "this", ".", "controlCamera", ",", " ", "Math", ".", "PI", "/", "2", ")", "\n    ", "// D", "\n    ", "}", " ", "else", " ", "if", " ", "(", "this", ".", "keyboard", ".", "isPressD", "())", " ", "{", "\n      ", "this", ".", "model", ".", "move", "(", "this", ".", "controlCamera", ",", " ", "-", "Math", ".", "PI", "/", "2", ")", "\n    ", "// W", "\n    ", "}", " ", "else", " ", "if", " ", "(", "this", ".", "keyboard", ".", "isPressW", "())", " ", "{", "\n      ", "this", ".", "model", ".", "move", "(", "this", ".", "controlCamera", ",", " ", "0", ")", "\n    ", "// S", "\n    ", "}", " ", "else", " ", "if", " ", "(", "this", ".", "keyboard", ".", "isPressS", "())", " ", "{", "\n      ", "this", ".", "model", ".", "move", "(", "this", ".", "controlCamera", ",", " ", "Math", ".", "PI", ")", "\n    ", "}", "\n    ", "// 移動結果を物理計算空間に反映", "\n    ", "this", ".", "physicsWorld", ".", "setPhysicsPose", "(", "this", ".", "model", ")", "\n\n    ", "// 物理計算更新", "\n    ", "this", ".", "physicsWorld", ".", "update", "(", "delta", ")", "\n\n    ", "/*\n    // 物理空間上のオブジェクトの当たり判定\n    const hitResult = this.physicsWorld.hitTest([this.heightMap, this.model])\n    if (Object.keys(hitResult).length > 0) {\n      this.physicsWorld.addImpulse(this.model, new Vec3(0, 50, 0))\n    } else {\n      this.physicsWorld.addForce(this.model, new Vec3(0, 0, 50))\n    }\n    */", "\n    ", "this", ".", "physicsWorld", ".", "setModelPose", "(", "this", ".", "model", ")", "\n\n    ", "...", "\n    ", "描画", "\n  ", "}", "\n", "}", "\n", "export", " ", "default", " ", "class", " ", "Keyboard", " ", "{", "\n  ", "constructor", " ", "()", " ", "{", "\n    ", "this", ".", "keys", " ", "=", " ", "[]", "\n    ", "document", ".", "addEventListener", "(", "'keydown'", ",", " ", "(", "e", ")", " ", "=>", " ", "{", "\n      ", "const", " ", "keycode", " ", "=", " ", "e", ".", "keyCode", "\n      ", "this", ".", "keys", "[", "keycode", "]", " ", "=", " ", "true", "\n      ", "e", ".", "preventDefault", "()", "\n      ", "e", ".", "stopPropagation", "()", "\n      ", "return", " ", "false", "\n    ", "})", "\n    ", "document", ".", "addEventListener", "(", "'keyup'", ",", " ", "(", "e", ")", " ", "=>", " ", "{", "\n      ", "const", " ", "keycode", " ", "=", " ", "e", ".", "keyCode", "\n      ", "this", ".", "keys", "[", "keycode", "]", " ", "=", " ", "false", "\n      ", "e", ".", "preventDefault", "()", "\n      ", "e", ".", "stopPropagation", "()", "\n      ", "return", " ", "false", "\n    ", "})", "\n  ", "}", "\n\n  ", "isPressEnter", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "13", ")", "\n  ", "isPressSpace", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "32", ")", "\n  ", "isPressA", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "65", ")", "\n  ", "isPressD", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "68", ")", "\n  ", "isPressW", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "87", ")", "\n  ", "isPressS", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "83", ")", "\n  ", "isPressC", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "67", ")", "\n  ", "isPressLeft", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "37", ")", "\n  ", "isPressRight", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "39", ")", "\n  ", "isPressUp", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "38", ")", "\n  ", "isPressDown", " ", "=", " ", "()", " ", "=>", " ", "this", ".", "getKey", "(", "40", ")", "\n\n  ", "getKey", " ", "=", " ", "(", "keycode", ")", " ", "=>", " ", "{", "\n    ", "return", " ", "this", ".", "keys", "[", "keycode", "]", "\n  ", "}", "\n", "}", "\n", "import", " ", "DragControls", " ", "from", " ", "'./src/DragControls'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n\n    ", "/*\n    // Sphere\n    const sphere = new Sphere(3)\n    sphere.position.set(30, 0, 0)\n    this.scene.add(sphere)\n\n    // Box\n    const box = new Box(new Vec3(2, 10, 4))\n    box.position.set(10, 0, 0)\n    this.scene.add(box)\n\n    // Cylinder\n    const cylinder = new Cylinder(3, 10)\n    cylinder.position.set(-10, 0, 0)\n    this.scene.add(cylinder)\n\n    // Cone\n    const cone = new Cone(3, 8)\n    cone.position.set(-30, 0, 0)\n    this.scene.add(cone)\n    */", "\n\n    ", "// ドラッグ処理", "\n    ", "this", ".", "dynamicObjects", " ", "=", " ", "[]", "\n    ", "this", ".", "dragControls", " ", "=", " ", "new", " ", "DragControls", "(", "this", ".", "dynamicObjects", ",", " ", "this", ".", "controlCamera", ",", " ", "this", ".", "renderer", ",", " ", "this", ".", "onDragStart", ",", " ", "this", ".", "onDragEnd", ")", "\n    ", "this", ".", "objectTimePeriod", " ", "=", " ", "3", "\n    ", "this", ".", "timeNextSpawn", " ", "=", " ", "this", ".", "objectTimePeriod", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "onDragStart", " ", "=", " ", "(", "e", ")", " ", "=>", " ", "{", "\n    ", "if", " ", "(", "this", ".", "controlCamera", ".", "controls", ")", " ", "{", "\n      ", "this", ".", "controlCamera", ".", "controls", ".", "enabled", " ", "=", " ", "false", "\n    ", "}", "\n    ", "if", " ", "(", "e", ".", "object", ".", "userData", ")", " ", "{", "\n      ", "e", ".", "object", ".", "userData", ".", "ignorePhysics", " ", "=", " ", "true", "\n    ", "}", "\n  ", "}", "\n\n  ", "onDragEnd", " ", "=", " ", "(", "e", ")", " ", "=>", " ", "{", "\n    ", "if", " ", "(", "e", ".", "object", ".", "userData", ")", " ", "{", "\n      ", "this", ".", "physicsWorld", ".", "setPhysicsPose", "(", "e", ".", "object", ")", "\n      ", "e", ".", "object", ".", "userData", ".", "ignorePhysics", " ", "=", " ", "false", "\n    ", "}", "\n    ", "if", " ", "(", "this", ".", "controlCamera", ".", "controls", ")", " ", "{", "\n      ", "this", ".", "controlCamera", ".", "controls", ".", "enabled", " ", "=", " ", "true", "\n    ", "}", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "// 一定時間おきに動的にオブジェクトを生成する", "\n    ", "if", " ", "(", "this", ".", "dynamicObjects", ".", "length", " ", "<", " ", "5", " ", "&&", " ", "time", " ", ">", " ", "this", ".", "timeNextSpawn", ")", " \n    ", "{", "\n      ", "const", " ", "objectType", " ", "=", " ", "Math", ".", "ceil", "(", "Math", ".", "random", "()", " ", "*", " ", "4", ")", "\n      ", "let", " ", "mesh", " ", "=", " ", "null", "\n      ", "const", " ", "initPos", " ", "=", " ", "new", " ", "Vec3", "(", "0", ",", " ", "100", ",", " ", "0", ")", "\n      ", "const", " ", "objectSize", " ", "=", " ", "2", "\n      ", "switch", " ", "(", "objectType", ")", " ", "{", "\n        ", "case", " ", "1", ":", "\n          ", "mesh", " ", "=", " ", "new", " ", "Sphere", "(", "3", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ")", "\n          ", "mesh", ".", "position", ".", "set", "(", "initPos", ".", "x", ",", " ", "initPos", ".", "y", ",", " ", "initPos", ".", "z", ")", "\n          ", "this", ".", "physicsWorld", ".", "addSphereBody", "(", "mesh", ",", " ", "mesh", ".", "radius", ",", " ", "objectSize", " ", "*", " ", "5", ")", "\n          ", "break", "\n        ", "case", " ", "2", ":", "\n          ", "mesh", " ", "=", " ", "new", " ", "Box", "(", "new", " ", "Vec3", "(", "4", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ",", " ", "4", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ",", " ", "4", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", "))", "\n          ", "mesh", ".", "position", ".", "set", "(", "initPos", ".", "x", ",", " ", "initPos", ".", "y", ",", " ", "initPos", ".", "z", ")", "\n          ", "this", ".", "physicsWorld", ".", "addBoxBody", "(", "mesh", ",", " ", "mesh", ".", "size", ",", " ", "objectSize", " ", "*", " ", "5", ")", "\n          ", "break", "\n        ", "case", " ", "3", ":", "\n          ", "mesh", " ", "=", " ", "new", " ", "Cylinder", "(", "3", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ",", " ", "3", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ")", "\n          ", "mesh", ".", "position", ".", "set", "(", "initPos", ".", "x", ",", " ", "initPos", ".", "y", ",", " ", "initPos", ".", "z", ")", "\n          ", "this", ".", "physicsWorld", ".", "addCylinderBody", "(", "mesh", ",", " ", "mesh", ".", "radius", ",", " ", "mesh", ".", "height", ",", " ", "objectSize", " ", "*", " ", "5", ")", "\n          ", "break", "\n        ", "default", ":", "\n          ", "mesh", " ", "=", " ", "new", " ", "Cone", "(", "3", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ",", " ", "2", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ")", "\n          ", "mesh", ".", "position", ".", "set", "(", "initPos", ".", "x", ",", " ", "initPos", ".", "y", ",", " ", "initPos", ".", "z", ")", "\n          ", "this", ".", "physicsWorld", ".", "addConeBody", "(", "mesh", ",", " ", "mesh", ".", "radius", ",", " ", "mesh", ".", "height", ",", " ", "objectSize", " ", "*", " ", "5", ")", "\n          ", "break", "\n      ", "}", "\n\n      ", "this", ".", "scene", ".", "add", "(", "mesh", ")", "\n      ", "this", ".", "dynamicObjects", ".", "push", "(", "mesh", ")", "\n      ", "this", ".", "timeNextSpawn", " ", "=", " ", "time", " ", "+", " ", "this", ".", "objectTimePeriod", "\n    ", "}", "\n\n    ", "// 物理計算更新", "\n    ", "this", ".", "physicsWorld", ".", "update", "(", "delta", ")", "\n\n", "for", " ", "(", "let", " ", "i", " ", "=", " ", "0", ";", " ", "i", " ", "<", " ", "this", ".", "dynamicObjects", ".", "length", ";", " ", "i", "++", ")", " ", "{", "\n      ", "const", " ", "objThree", " ", "=", " ", "this", ".", "dynamicObjects", "[", "i", "]", "\n      ", "// ドラッグしていないオブジェクト以外反映する", "\n      ", "if", " ", "(", "objThree", ".", "userData", " ", "&&", " ", "objThree", ".", "userData", ".", "ignorePhysics", ")", " ", "{", "\n        ", "continue", "\n      ", "}", "\n      ", "this", ".", "physicsWorld", ".", "setModelPose", "(", "objThree", ")", "\n    ", "}", "\n\n    ", "...", "\n    ", "描画", "\n  ", "}", "\n", "}", "\n", "import", " ", "RayCaster", " ", "from", " ", "'./src/RayCaster'", "\n", "import", " ", "ConeMarker", " ", "from", " ", "'./src/ConeMarker'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// レンダラ作成の処理", "\n    ", "...", "\n\n    ", "// RayCaster", "\n    ", "this", ".", "rayCaster", " ", "=", " ", "new", " ", "RayCaster", "()", "\n    ", "// マウス/タッチ", "\n    ", "this", ".", "helper", " ", "=", " ", "new", " ", "ConeMarker", "(", "20", ",", " ", "100", ")", "\n    ", "this", ".", "helper", ".", "geometry", ".", "translate", "(", "0", ",", " ", "50", ",", " ", "0", ")", "\n    ", "this", ".", "helper", ".", "geometry", ".", "rotateX", "(", "Math", ".", "PI", " ", "/", " ", "2", ")", "\n    ", "this", ".", "helper", ".", "geometry", ".", "scale", "(", "0.1", ",", " ", "0.1", ",", " ", "0.1", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "helper", ")", "\n    ", "document", ".", "addEventListener", "(", "'mousemove'", ",", " ", "this", ".", "onMouseMove", ",", " ", "false", ")", "\n    ", "document", ".", "addEventListener", "(", "'mousedown'", ",", " ", "this", ".", "onMouseClick", ",", " ", "false", ")", "\n    ", "this", ".", "clicked", " ", "=", " ", "false", "\n    ", "this", ".", "clickPos", " ", "=", " ", "new", " ", "Vec3", "()", "\n\n    ", "...", "\n  ", "}", "\n\n  ", "onMouseMove", " ", "=", " ", "(", "event", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "mouse", " ", "=", " ", "{", "\n      ", "x", ":", " ", "(", "event", ".", "clientX", " ", "/", " ", "this", ".", "renderer", ".", "domElement", ".", "clientWidth", ")", " ", "*", " ", "2", " ", "-", " ", "1", ",", "\n      ", "y", ":", " ", "-", "(", "event", ".", "clientY", " ", "/", " ", "this", ".", "renderer", ".", "domElement", ".", "clientHeight", ")", " ", "*", " ", "2", " ", "+", " ", "1", ",", "\n    ", "}", "\n\n    ", "const", " ", "intersects", " ", "=", " ", "this", ".", "rayCaster", ".", "getIntersect", "(", "mouse", ",", " ", "this", ".", "controlCamera", ",", " ", "this", ".", "heightMap", ")", "\n\n    ", "if", " ", "(", "intersects", ".", "length", " ", ">", " ", "0", ")", " ", "{", "\n      ", "this", ".", "helper", ".", "position", ".", "set", "(", "0", ",", " ", "0", ",", " ", "0", ")", "\n      ", "this", ".", "helper", ".", "lookAt", "(", "intersects", "[", "0", "].", "face", ".", "normal", ")", "\n      ", "this", ".", "helper", ".", "position", ".", "copy", "(", "intersects", "[", "0", "].", "point", ")", "\n    ", "}", "\n  ", "}", "\n\n  ", "onMouseClick", " ", "=", " ", "(", "event", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "mouse", " ", "=", " ", "{", "\n      ", "x", ":", " ", "(", "event", ".", "clientX", " ", "/", " ", "this", ".", "renderer", ".", "domElement", ".", "clientWidth", ")", " ", "*", " ", "2", " ", "-", " ", "1", ",", "\n      ", "y", ":", " ", "-", "(", "event", ".", "clientY", " ", "/", " ", "this", ".", "renderer", ".", "domElement", ".", "clientHeight", ")", " ", "*", " ", "2", " ", "+", " ", "1", ",", "\n    ", "}", "\n\n    ", "const", " ", "intersects", " ", "=", " ", "this", ".", "rayCaster", ".", "getIntersect", "(", "mouse", ",", " ", "this", ".", "controlCamera", ",", " ", "this", ".", "heightMap", ")", "\n\n    ", "if", " ", "(", "intersects", ".", "length", " ", ">", " ", "0", ")", " ", "{", "\n      ", "this", ".", "clicked", " ", "=", " ", "true", "\n      ", "this", ".", "clickPos", " ", "=", " ", "intersects", "[", "0", "].", "point", "\n    ", "}", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n\n    ", "if", " ", "(", "this", ".", "clicked", ")", " ", "{", "\n      ", "const", " ", "dir", " ", "=", " ", "new", " ", "Vec3", "(", "this", ".", "clickPos", ".", "x", " ", "-", " ", "this", ".", "model", ".", "position", ".", "x", ",", " ", "0", ",", " ", "this", ".", "clickPos", ".", "z", " ", "-", " ", "this", ".", "model", ".", "position", ".", "z", ")", "\n      ", "if", " ", "(", "dir", ".", "length", "()", " ", "<", " ", "3", ")", " ", "{", "\n        ", "this", ".", "clicked", " ", "=", " ", "false", "\n      ", "}", "\n      ", "this", ".", "model", ".", "moveTo", "(", "this", ".", "clickPos", ")", "\n    ", "}", "\n    ", "// 移動結果を物理計算空間に反映", "\n    ", "this", ".", "physicsWorld", ".", "setPhysicsPose", "(", "this", ".", "model", ")", "\n\n    ", "// 物理計算更新", "\n    ", "this", ".", "physicsWorld", ".", "update", "(", "delta", ")", "\n\n    ", "...", "\n    ", "描画", "\n  ", "}", "\n", "}", "\n\n", "import", " ", "TWEEN", " ", "from", " ", "'@tweenjs/tween.js'", "\n", "import", " ", "Render", " ", "from", " ", "'./src/Render'", "\n", "import", " ", "Scene", " ", "from", " ", "'./src/Scene'", "\n", "import", " ", "Clock", " ", "from", " ", "'./src/Clock'", "\n", "import", " ", "Vec3", " ", "from", " ", "'./src/Vec3'", "\n", "import", " ", "Axis", " ", "from", " ", "'./src/Axis'", "\n", "import", " ", "Grid", " ", "from", " ", "'./src/Grid'", "\n", "import", " ", "Camera2D", " ", "from", " ", "'./src/Camera2D'", "\n", "import", " ", "Camera3D", " ", "from", " ", "'./src/Camera3D'", "\n", "// import CubeMap from './src/CubeMap'", "\n", "import", " ", "DirectionalLight", " ", "from", " ", "'./src/DirectionalLight'", "\n", "import", " ", "AmbientLight", " ", "from", " ", "'./src/AmbientLight'", "\n", "import", " ", "Loader", " ", "from", " ", "'./src/Loader'", "\n", "import", " ", "HeightMap", " ", "from", " ", "'./src/HeightMap'", "\n", "import", " ", "Fog", " ", "from", " ", "'./src/Fog'", "\n", "import", " ", "Sprite", " ", "from", " ", "'./src/Sprite'", "\n", "import", " ", "Sphere", " ", "from", " ", "'./src/Sphere'", "\n", "import", " ", "Box", " ", "from", " ", "'./src/Box'", "\n", "import", " ", "Cylinder", " ", "from", " ", "'./src/Cylinder'", "\n", "import", " ", "Cone", " ", "from", " ", "'./src/Cone'", "\n", "import", " ", "ConeMarker", " ", "from", " ", "'./src/ConeMarker'", "\n", "import", " ", "GLTFModel", " ", "from", " ", "'./src/GLTFModel'", "\n", "import", " ", "PhysicsWorld", " ", "from", " ", "'./src/PhysicsWorld'", "\n", "import", " ", "DragControls", " ", "from", " ", "'./src/DragControls'", "\n", "import", " ", "Keyboard", " ", "from", " ", "'./src/Keyboard'", "\n", "import", " ", "AudioListener", " ", "from", " ", "'./src/AudioListener'", "\n", "import", " ", "PositionalAudio", " ", "from", " ", "'./src/PositionalAudio'", "\n", "import", " ", "Audio", " ", "from", " ", "'./src/Audio'", "\n", "import", " ", "Particle", " ", "from", " ", "'./src/Particle'", "\n", "import", " ", "Water", " ", "from", " ", "'./src/Water'", "\n", "import", " ", "Sky", " ", "from", " ", "'./src/Sky'", "\n", "import", " ", "RayCaster", " ", "from", " ", "'./src/RayCaster'", "\n\n", "export", " ", "default", " ", "class", " ", "Game", " ", "{", "\n\n  ", "init", " ", "=", " ", "async", " ", "()", " ", "=>", " ", "{", "\n    ", "// アニメーションとかで使う時間用", "\n    ", "this", ".", "clock", " ", "=", " ", "new", " ", "Clock", "()", "\n    ", "this", ".", "loader", " ", "=", " ", "new", " ", "Loader", "()", "\n    ", "// シーン作成", "\n    ", "this", ".", "scene", " ", "=", " ", "new", " ", "Scene", "()", "\n    ", "this", ".", "sceneOrtho", " ", "=", " ", "new", " ", "Scene", "()", "\n    ", "// this.cubeMap = new CubeMap('textures/')", "\n    ", "// this.scene.background = this.cubeMap", "\n    ", "this", ".", "scene", ".", "fog", " ", "=", " ", "new", " ", "Fog", "()", "\n    ", "// レンダラー作成", "\n    ", "this", ".", "renderer", " ", "=", " ", "new", " ", "Render", "(", "this", ".", "onResize", ")", "\n    ", "// 物理世界作成", "\n    ", "this", ".", "physicsWorld", " ", "=", " ", "new", " ", "PhysicsWorld", "()", "\n\n    ", "// RayCaster", "\n    ", "this", ".", "rayCaster", " ", "=", " ", "new", " ", "RayCaster", "()", "\n\n    ", "// 3Dカメラ", "\n    ", "const", " ", "eye", " ", "=", " ", "new", " ", "Vec3", "(", "0", ",", " ", "50", ",", " ", "-", "150", ")", "\n    ", "const", " ", "lookAt", " ", "=", " ", "new", " ", "Vec3", "(", "0", ",", " ", "0", ",", " ", "0", ")", "\n    ", "this", ".", "camera", " ", "=", " ", "new", " ", "Camera3D", "(", "eye", ",", " ", "lookAt", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "camera", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "camera", ".", "helper", ")", " ", "// helper", "\n\n    ", "// コントロールカメラ", "\n    ", "const", " ", "debugEye", " ", "=", " ", "new", " ", "Vec3", "(", "100", ",", " ", "200", ",", " ", "200", ")", "\n    ", "const", " ", "debugLookAt", " ", "=", " ", "new", " ", "Vec3", "(", "0", ",", " ", "0", ",", " ", "0", ")", "\n    ", "this", ".", "controlCamera", " ", "=", " ", "new", " ", "Camera3D", "(", "debugEye", ",", " ", "debugLookAt", ",", " ", "1", ",", " ", "4000", ")", "\n    ", "this", ".", "controlCamera", ".", "controls", " ", "=", " ", "this", ".", "controlCamera", ".", "createControls", "()", "\n\n    ", "this", ".", "selectCamera", " ", "=", " ", "this", ".", "controlCamera", "\n    ", "this", ".", "isDebug", " ", "=", " ", "true", "\n\n    ", "// 2Dカメラ", "\n    ", "this", ".", "cameraOrtho", " ", "=", " ", "new", " ", "Camera2D", "()", "\n\n    ", "// Audio", "\n    ", "this", ".", "audioListener", " ", "=", " ", "new", " ", "AudioListener", "()", "\n    ", "this", ".", "buffer", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadAudio", "(", "'./sounds/bgm_maoudamashii_healing13.mp3'", ")", "\n    ", "this", ".", "bgm", " ", "=", " ", "new", " ", "Audio", "(", "this", ".", "buffer", ",", " ", "this", ".", "audioListener", ")", "\n    ", "this", ".", "bgm", ".", "setLoop", "(", "true", ")", "\n    ", "this", ".", "bgm", ".", "setVolume", "(", "0.1", ")", "\n    ", "this", ".", "bgm", ".", "play", "()", "\n    ", "this", ".", "soundBuffer", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadAudio", "(", "'./sounds/ping_pong.mp3'", ")", "\n    ", "this", ".", "selectCamera", ".", "add", "(", "this", ".", "audioListener", ")", "\n    ", "this", ".", "sound", " ", "=", " ", "new", " ", "PositionalAudio", "(", "this", ".", "soundBuffer", ",", " ", "this", ".", "audioListener", ")", "\n    ", "this", ".", "sound", ".", "setVolume", "(", "10", ")", "\n\n    ", "// lighting", "\n    ", "this", ".", "light", " ", "=", " ", "new", " ", "DirectionalLight", "()", "\n\n    ", "const", " ", "parameters", " ", "=", " ", "{", "\n      ", "distance", ":", " ", "400", ",", "\n      ", "inclination", ":", " ", "0.3", ",", "\n      ", "azimuth", ":", " ", "0.205", ",", "\n    ", "}", "\n    ", "const", " ", "theta", " ", "=", " ", "Math", ".", "PI", " ", "*", " ", "(", "parameters", ".", "inclination", " ", "-", " ", "0.5", ")", "\n    ", "const", " ", "phi", " ", "=", " ", "2", " ", "*", " ", "Math", ".", "PI", " ", "*", " ", "(", "parameters", ".", "azimuth", " ", "-", " ", "0.5", ")", "\n    ", "this", ".", "light", ".", "position", ".", "x", " ", "=", " ", "parameters", ".", "distance", " ", "*", " ", "Math", ".", "cos", "(", "phi", ")", "\n    ", "this", ".", "light", ".", "position", ".", "y", " ", "=", " ", "parameters", ".", "distance", " ", "*", " ", "Math", ".", "sin", "(", "phi", ")", " ", "*", " ", "Math", ".", "sin", "(", "theta", ")", "\n    ", "this", ".", "light", ".", "position", ".", "z", " ", "=", " ", "parameters", ".", "distance", " ", "*", " ", "Math", ".", "sin", "(", "phi", ")", " ", "*", " ", "Math", ".", "cos", "(", "theta", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "light", ")", "\n    ", "this", ".", "ambient", " ", "=", " ", "new", " ", "AmbientLight", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "ambient", ")", "\n\n    ", "// Sky", "\n    ", "this", ".", "sky", " ", "=", " ", "new", " ", "Sky", "()", "\n    ", "this", ".", "sky", ".", "setEnv", "({", "turbidity", ":", " ", "10", ",", " ", "rayleigh", ":", " ", "2", ",", " ", "luminance", ":", " ", "1", ",", " ", "mieCoefficient", ":", " ", "0.005", ",", " ", "mieDirectionalG", ":", " ", "0.8", "})", "\n    ", "this", ".", "sky", ".", "setLight", "(", "this", ".", "light", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "sky", ")", "\n\n    ", "// Water", "\n    ", "this", ".", "water", " ", "=", " ", "new", " ", "Water", "(", "this", ".", "light", ")", "\n    ", "this", ".", "water", ".", "setEnv", "({", "distortionScale", ":", " ", "3.7", ",", " ", "alpha", ":", " ", "0.95", "})", "\n    ", "this", ".", "water", ".", "setLight", "(", "this", ".", "light", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "water", ")", "\n\n    ", "// HeightMap", "\n    ", "this", ".", "heightMap", " ", "=", " ", "new", " ", "HeightMap", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "heightMap", ")", "\n    ", "this", ".", "physicsWorld", ".", "addHeightMapBody", "(", "this", ".", "heightMap", ")", "\n\n    ", "// GLTF", "\n    ", "const", " ", "tree", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadGLTFModel", "(", "'./model/tree.glb'", ")", "\n    ", "const", " ", "treePositions", " ", "=", " ", "[", "\n      ", "new", " ", "Vec3", "(", "132", ",", " ", "20", ",", " ", "-", "190", "),", "\n      ", "new", " ", "Vec3", "(", "216", ",", " ", "20", ",", " ", "80", "),", "\n      ", "new", " ", "Vec3", "(", "-", "82", ",", " ", "20", ",", " ", "222", "),", "\n      ", "new", " ", "Vec3", "(", "13", ",", " ", "20", ",", " ", "-", "125", "),", "\n      ", "new", " ", "Vec3", "(", "-", "100", ",", " ", "20", ",", " ", "31", "),", "\n    ", "]", "\n    ", "this", ".", "trees", " ", "=", " ", "[]", "\n    ", "for", " ", "(", "let", " ", "i", " ", "=", " ", "0", ";", " ", "i", " ", "<", " ", "5", ";", " ", "i", "++", ")", " ", "{", "\n      ", "this", ".", "trees", ".", "push", "(", "new", " ", "GLTFModel", "(", "tree", ",", " ", "true", ",", " ", "true", "))", "\n      ", "this", ".", "trees", "[", "i", "].", "init", "(", "treePositions", "[", "i", "],", " ", "0", ",", " ", "8", ")", "\n      ", "this", ".", "trees", "[", "i", "].", "getCenter", "()", "\n      ", "let", " ", "size", " ", "=", " ", "new", " ", "Vec3", "()", "\n      ", "this", ".", "trees", "[", "i", "].", "boundingBox", ".", "getSize", "(", "size", ")", "\n      ", "this", ".", "physicsWorld", ".", "addBoxBody", "(", "this", ".", "trees", "[", "i", "],", " ", "size", ".", "multiplyScalar", "(", "6", "),", " ", "0", ",", " ", "true", ")", "\n      ", "this", ".", "scene", ".", "add", "(", "this", ".", "trees", "[", "i", "])", "\n      ", "// const box = new Box(this.trees[i].boundingBox.size().multiplyScalar(6))", "\n      ", "// box.position.copy(this.trees[i].position)", "\n      ", "// this.scene.add(box)", "\n    ", "}", "\n\n    ", "// GLTF Skin", "\n    ", "const", " ", "gltf", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadGLTFModel", "(", "'./model/CesiumMan.gltf'", ")", "\n    ", "this", ".", "model", " ", "=", " ", "new", " ", "GLTFModel", "(", "gltf", ",", " ", "true", ")", "\n    ", "this", ".", "model", ".", "init", "(", "new", " ", "Vec3", "(", "0", ",", " ", "20", ",", " ", "0", "),", " ", "-", "Math", ".", "PI", "/", "2", ",", " ", "10", ")", "\n    ", "this", ".", "model", ".", "actions", "[", "0", "].", "play", "()", "\n    ", "this", ".", "model", ".", "getCenter", "()", "\n    ", "this", ".", "physicsWorld", ".", "addHumanBody", "(", "this", ".", "model", ",", " ", "0.8", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "model", ")", "\n    ", "this", ".", "model", ".", "add", "(", "this", ".", "sound", ")", "\n    ", "// this.scene.add(this.model.boxHelper)", "\n    ", "this", ".", "isGround", " ", "=", " ", "false", "\n\n    ", "// Particle", "\n    ", "this", ".", "particle", " ", "=", " ", "new", " ", "Particle", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "particle", ")", "\n\n    ", "// Grid", "\n    ", "this", ".", "grid", " ", "=", " ", "new", " ", "Grid", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "grid", ")", "\n    ", "// Axis", "\n    ", "this", ".", "axis", " ", "=", " ", "new", " ", "Axis", "()", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "axis", ")", "\n\n    ", "// Sprite", "\n    ", "const", " ", "texture", " ", "=", " ", "await", " ", "this", ".", "loader", ".", "loadTexture", "(", "'./textures/sprite1.png'", ")", "\n    ", "this", ".", "sprite", " ", "=", " ", "new", " ", "Sprite", "(", "texture", ")", "\n    ", "this", ".", "sprite", ".", "setPos", "(", "-", "1", ",", " ", "1", ")", "\n    ", "this", ".", "sprite", ".", "setCenter", "({", "right", ":", " ", "true", ",", " ", "bottom", ":", " ", "true", "})", "\n    ", "this", ".", "sprite", ".", "setSize", "(", "64", ",", " ", "64", ")", "\n    ", "this", ".", "sceneOrtho", ".", "add", "(", "this", ".", "sprite", ")", "\n\n    ", "const", " ", "coords", " ", "=", " ", "{", " ", "x", ":", " ", "-", "1", ",", " ", "y", ":", " ", "1", " ", "}", "\n    ", "this", ".", "tween", " ", "=", " ", "new", " ", "TWEEN", ".", "Tween", "(", "coords", ")", "\n        ", ".", "to", "({", " ", "x", ":", " ", "-", "1", ",", " ", "y", ":", " ", "0", " ", "},", " ", "3000", ")", "\n        ", ".", "easing", "(", "TWEEN", ".", "Easing", ".", "Quadratic", ".", "Out", ")", "\n        ", ".", "onUpdate", "(()", " ", "=>", " ", "{", "\n          ", "this", ".", "sprite", ".", "setPos", "(", "coords", ".", "x", ",", " ", "coords", ".", "y", ")", "\n        ", "})", "\n\n    ", "this", ".", "tweenBack", " ", "=", " ", "new", " ", "TWEEN", ".", "Tween", "(", "coords", ")", "\n        ", ".", "to", "({", " ", "x", ":", " ", "-", "1", ",", " ", "y", ":", " ", "1", " ", "},", " ", "3000", ")", "\n        ", ".", "easing", "(", "TWEEN", ".", "Easing", ".", "Quadratic", ".", "Out", ")", "\n        ", ".", "onUpdate", "(()", " ", "=>", " ", "{", "\n          ", "this", ".", "sprite", ".", "setPos", "(", "coords", ".", "x", ",", " ", "coords", ".", "y", ")", "\n        ", "})", "\n\n    ", "this", ".", "tween", ".", "chain", "(", "this", ".", "tweenBack", ")", "\n    ", "this", ".", "tweenBack", ".", "chain", "(", "this", ".", "tween", ")", "\n    ", "this", ".", "tween", "\n      ", ".", "delay", "(", "3000", ")", "\n      ", ".", "start", "()", "\n\n    ", "// キーボード", "\n    ", "this", ".", "keyboard", " ", "=", " ", "new", " ", "Keyboard", "()", "\n\n    ", "// ドラッグ処理", "\n    ", "this", ".", "dynamicObjects", " ", "=", " ", "[]", "\n    ", "this", ".", "dragControls", " ", "=", " ", "new", " ", "DragControls", "(", "this", ".", "dynamicObjects", ",", " ", "this", ".", "controlCamera", ",", " ", "this", ".", "renderer", ",", " ", "this", ".", "onDragStart", ",", " ", "this", ".", "onDragEnd", ")", "\n\n    ", "// マウス/タッチ", "\n    ", "this", ".", "helper", " ", "=", " ", "new", " ", "ConeMarker", "(", "20", ",", " ", "100", ")", "\n    ", "this", ".", "helper", ".", "geometry", ".", "translate", "(", "0", ",", " ", "50", ",", " ", "0", ")", "\n    ", "this", ".", "helper", ".", "geometry", ".", "rotateX", "(", "Math", ".", "PI", " ", "/", " ", "2", ")", "\n    ", "this", ".", "helper", ".", "geometry", ".", "scale", "(", "0.1", ",", " ", "0.1", ",", " ", "0.1", ")", "\n    ", "this", ".", "scene", ".", "add", "(", "this", ".", "helper", ")", "\n    ", "document", ".", "addEventListener", "(", "'mousemove'", ",", " ", "this", ".", "onMouseMove", ",", " ", "false", ")", "\n    ", "document", ".", "addEventListener", "(", "'mousedown'", ",", " ", "this", ".", "onMouseClick", ",", " ", "false", ")", "\n    ", "this", ".", "clicked", " ", "=", " ", "false", "\n    ", "this", ".", "clickPos", " ", "=", " ", "new", " ", "Vec3", "()", "\n\n    ", "this", ".", "objectTimePeriod", " ", "=", " ", "3", "\n    ", "this", ".", "timeNextSpawn", " ", "=", " ", "this", ".", "objectTimePeriod", "\n\n    ", "requestAnimationFrame", "(", "this", ".", "loop", ")", "\n  ", "}", "\n\n  ", "onDragStart", " ", "=", " ", "(", "e", ")", " ", "=>", " ", "{", "\n    ", "if", " ", "(", "this", ".", "selectCamera", ".", "controls", ")", " ", "{", "\n      ", "this", ".", "selectCamera", ".", "controls", ".", "enabled", " ", "=", " ", "false", "\n    ", "}", "\n    ", "if", " ", "(", "e", ".", "object", ".", "userData", ")", " ", "{", "\n      ", "e", ".", "object", ".", "userData", ".", "ignorePhysics", " ", "=", " ", "true", "\n    ", "}", "\n  ", "}", "\n\n  ", "onDragEnd", " ", "=", " ", "(", "e", ")", " ", "=>", " ", "{", "\n    ", "if", " ", "(", "e", ".", "object", ".", "userData", ")", " ", "{", "\n      ", "this", ".", "physicsWorld", ".", "setPhysicsPose", "(", "e", ".", "object", ")", "\n      ", "e", ".", "object", ".", "userData", ".", "ignorePhysics", " ", "=", " ", "false", "\n    ", "}", "\n    ", "if", " ", "(", "this", ".", "selectCamera", ".", "controls", ")", " ", "{", "\n      ", "this", ".", "selectCamera", ".", "controls", ".", "enabled", " ", "=", " ", "true", "\n    ", "}", "\n  ", "}", "\n\n  ", "loop", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "requestAnimationFrame", "(", "this", ".", "loop", ")", "\n    ", "this", ".", "render", "(", "frame", ")", "\n  ", "}", "\n\n  ", "onResize", " ", "=", " ", "()", " ", "=>", "  ", "{", "\n    ", "this", ".", "renderer", ".", "resize", "()", "\n\n    ", "const", " ", "cameras", " ", "=", " ", "[", "this", ".", "camera", ",", " ", "this", ".", "cameraOrtho", ",", " ", "this", ".", "controlCamera", "]", "\n    ", "for", " ", "(", "let", " ", "camera", " ", "of", " ", "cameras", ")", " ", "{", "\n      ", "camera", ".", "resize", "()", "\n    ", "}", "\n    ", "this", ".", "sprite", ".", "onResizeWindow", "()", "\n  ", "}", "\n\n  ", "onMouseMove", " ", "=", " ", "(", "event", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "mouse", " ", "=", " ", "{", "\n      ", "x", ":", " ", "(", "event", ".", "clientX", " ", "/", " ", "this", ".", "renderer", ".", "domElement", ".", "clientWidth", ")", " ", "*", " ", "2", " ", "-", " ", "1", ",", "\n      ", "y", ":", " ", "-", "(", "event", ".", "clientY", " ", "/", " ", "this", ".", "renderer", ".", "domElement", ".", "clientHeight", ")", " ", "*", " ", "2", " ", "+", " ", "1", ",", "\n    ", "}", "\n\n    ", "const", " ", "intersects", " ", "=", " ", "this", ".", "rayCaster", ".", "getIntersect", "(", "mouse", ",", " ", "this", ".", "selectCamera", ",", " ", "this", ".", "heightMap", ")", "\n\n    ", "if", " ", "(", "intersects", ".", "length", " ", ">", " ", "0", ")", " ", "{", "\n      ", "this", ".", "helper", ".", "position", ".", "set", "(", "0", ",", " ", "0", ",", " ", "0", ")", "\n      ", "this", ".", "helper", ".", "lookAt", "(", "intersects", "[", "0", "].", "face", ".", "normal", ")", "\n      ", "this", ".", "helper", ".", "position", ".", "copy", "(", "intersects", "[", "0", "].", "point", ")", "\n    ", "}", "\n  ", "}", "\n\n  ", "onMouseClick", " ", "=", " ", "(", "event", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "mouse", " ", "=", " ", "{", "\n      ", "x", ":", " ", "(", "event", ".", "clientX", " ", "/", " ", "this", ".", "renderer", ".", "domElement", ".", "clientWidth", ")", " ", "*", " ", "2", " ", "-", " ", "1", ",", "\n      ", "y", ":", " ", "-", "(", "event", ".", "clientY", " ", "/", " ", "this", ".", "renderer", ".", "domElement", ".", "clientHeight", ")", " ", "*", " ", "2", " ", "+", " ", "1", ",", "\n    ", "}", "\n\n    ", "const", " ", "intersects", " ", "=", " ", "this", ".", "rayCaster", ".", "getIntersect", "(", "mouse", ",", " ", "this", ".", "selectCamera", ",", " ", "this", ".", "heightMap", ")", "\n\n    ", "if", " ", "(", "intersects", ".", "length", " ", ">", " ", "0", ")", " ", "{", "\n      ", "this", ".", "clicked", " ", "=", " ", "true", "\n      ", "this", ".", "clickPos", " ", "=", " ", "intersects", "[", "0", "].", "point", "\n    ", "}", "\n  ", "}", "\n\n  ", "render", " ", "=", " ", "(", "frame", ")", " ", "=>", " ", "{", "\n    ", "const", " ", "{", "delta", ",", " ", "time", "}", " ", "=", " ", "this", ".", "clock", ".", "update", "()", "\n    ", "this", ".", "camera", ".", "lookAt", "(", "new", " ", "Vec3", "(", "this", ".", "model", ".", "position", ".", "x", ",", " ", "this", ".", "model", ".", "position", ".", "y", " ", "+", " ", "10", ",", " ", "this", ".", "model", ".", "position", ".", "z", "))", "\n    ", "const", " ", "cameraDir", " ", "=", " ", "new", " ", "Vec3", "(", "this", ".", "model", ".", "position", ".", "x", " ", "-", " ", "this", ".", "camera", ".", "position", ".", "x", ",", " ", "0", ",", " ", "this", ".", "model", ".", "position", ".", "z", " ", "-", " ", "this", ".", "camera", ".", "position", ".", "z", ")", "\n    ", "const", " ", "cameraDistance", " ", "=", " ", "100", "\n    ", "if", " ", "(", "cameraDir", ".", "length", "()", " ", ">", " ", "cameraDistance", ")", " ", "{", "\n      ", "const", " ", "target", " ", "=", " ", "cameraDir", ".", "normalize", "().", "multiplyScalar", "(", "cameraDistance", ")", "\n      ", "this", ".", "camera", ".", "position", ".", "copy", "(", "new", " ", "Vec3", "(", "this", ".", "model", ".", "position", ".", "x", " ", "-", " ", "target", ".", "x", ",", " ", "this", ".", "camera", ".", "position", ".", "y", ",", " ", "this", ".", "model", ".", "position", ".", "z", " ", "-", " ", "target", ".", "z", "))", "\n    ", "}", "\n\n    ", "TWEEN", ".", "update", "(", "frame", ")", " ", "// TWEENオブジェクト更新", "\n    ", "this", ".", "model", ".", "mixer", " ", "&&", " ", "this", ".", "model", ".", "mixer", ".", "update", "(", "delta", ")", " ", "// モデルアニメーション更新", "\n\n    ", "// 動的にオブジェクトを生成する", "\n    ", "if", " ", "(", "this", ".", "dynamicObjects", ".", "length", " ", "<", " ", "5", " ", "&&", " ", "time", " ", ">", " ", "this", ".", "timeNextSpawn", ")", " ", "{", "\n      ", "const", " ", "objectType", " ", "=", " ", "Math", ".", "ceil", "(", "Math", ".", "random", "()", " ", "*", " ", "4", ")", "\n      ", "let", " ", "mesh", " ", "=", " ", "null", "\n      ", "const", " ", "initPos", " ", "=", " ", "new", " ", "Vec3", "(", "0", ",", " ", "100", ",", " ", "0", ")", "\n      ", "const", " ", "objectSize", " ", "=", " ", "2", "\n      ", "switch", " ", "(", "objectType", ")", " ", "{", "\n        ", "case", " ", "1", ":", "\n          ", "mesh", " ", "=", " ", "new", " ", "Sphere", "(", "3", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ")", "\n          ", "mesh", ".", "position", ".", "set", "(", "initPos", ".", "x", ",", " ", "initPos", ".", "y", ",", " ", "initPos", ".", "z", ")", "\n          ", "this", ".", "physicsWorld", ".", "addSphereBody", "(", "mesh", ",", " ", "mesh", ".", "radius", ",", " ", "objectSize", " ", "*", " ", "5", ")", "\n          ", "break", "\n        ", "case", " ", "2", ":", "\n          ", "mesh", " ", "=", " ", "new", " ", "Box", "(", "new", " ", "Vec3", "(", "4", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ",", " ", "4", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ",", " ", "4", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", "))", "\n          ", "mesh", ".", "position", ".", "set", "(", "initPos", ".", "x", ",", " ", "initPos", ".", "y", ",", " ", "initPos", ".", "z", ")", "\n          ", "this", ".", "physicsWorld", ".", "addBoxBody", "(", "mesh", ",", " ", "mesh", ".", "size", ",", " ", "objectSize", " ", "*", " ", "5", ")", "\n          ", "break", "\n        ", "case", " ", "3", ":", "\n          ", "mesh", " ", "=", " ", "new", " ", "Cylinder", "(", "3", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ",", " ", "3", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ")", "\n          ", "mesh", ".", "position", ".", "set", "(", "initPos", ".", "x", ",", " ", "initPos", ".", "y", ",", " ", "initPos", ".", "z", ")", "\n          ", "this", ".", "physicsWorld", ".", "addCylinderBody", "(", "mesh", ",", " ", "mesh", ".", "radius", ",", " ", "mesh", ".", "height", ",", " ", "objectSize", " ", "*", " ", "5", ")", "\n          ", "break", "\n        ", "default", ":", "\n          ", "mesh", " ", "=", " ", "new", " ", "Cone", "(", "3", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ",", " ", "2", " ", "+", " ", "Math", ".", "random", "()", " ", "*", " ", "objectSize", ")", "\n          ", "mesh", ".", "position", ".", "set", "(", "initPos", ".", "x", ",", " ", "initPos", ".", "y", ",", " ", "initPos", ".", "z", ")", "\n          ", "this", ".", "physicsWorld", ".", "addConeBody", "(", "mesh", ",", " ", "mesh", ".", "radius", ",", " ", "mesh", ".", "height", ",", " ", "objectSize", " ", "*", " ", "5", ")", "\n          ", "break", "\n      ", "}", "\n\n      ", "this", ".", "scene", ".", "add", "(", "mesh", ")", "\n      ", "this", ".", "dynamicObjects", ".", "push", "(", "mesh", ")", "\n      ", "this", ".", "timeNextSpawn", " ", "=", " ", "time", " ", "+", " ", "this", ".", "objectTimePeriod", "\n    ", "}", "\n\n    ", "// C", "\n    ", "if", " ", "(", "this", ".", "keyboard", ".", "isPressC", "()", " ", "&&", " ", "!", "this", ".", "prevPressC", ")", " ", "{", "\n      ", "this", ".", "isDebug", " ", "=", " ", "!", "this", ".", "isDebug", "\n      ", "this", ".", "prevPressC", " ", "=", " ", "true", "\n      ", "if", " ", "(", "this", ".", "isDebug", ")", " ", "{", "\n        ", "this", ".", "selectCamera", ".", "remove", "(", "this", ".", "audioListener", ")", "\n        ", "this", ".", "selectCamera", " ", "=", " ", "this", ".", "controlCamera", "\n        ", "this", ".", "camera", ".", "helper", ".", "visible", " ", "=", " ", "true", "\n        ", "this", ".", "grid", ".", "visible", " ", "=", " ", "true", "\n        ", "this", ".", "axis", ".", "visible", " ", "=", " ", "true", "\n        ", "this", ".", "selectCamera", ".", "add", "(", "this", ".", "audioListener", ")", "\n      ", "}", " ", "else", " ", "{", "\n        ", "this", ".", "selectCamera", ".", "remove", "(", "this", ".", "audioListener", ")", "\n        ", "this", ".", "selectCamera", " ", "=", " ", "this", ".", "camera", "\n        ", "this", ".", "camera", ".", "helper", ".", "visible", " ", "=", " ", "false", "\n        ", "this", ".", "grid", ".", "visible", " ", "=", " ", "false", "\n        ", "this", ".", "axis", ".", "visible", " ", "=", " ", "false", "\n        ", "this", ".", "selectCamera", ".", "add", "(", "this", ".", "audioListener", ")", "\n      ", "}", "\n    ", "}", " ", "else", " ", "if", " ", "(", "!", "this", ".", "keyboard", ".", "isPressC", "())", " ", "{", "\n      ", "this", ".", "prevPressC", " ", "=", " ", "false", "\n    ", "}", "\n\n    ", "if", " ", "(", "!", "(", "this", ".", "keyboard", ".", "isPressA", "()", " ", "||", " ", "this", ".", "keyboard", ".", "isPressD", "()", " ", "||", " ", "this", ".", "keyboard", ".", "isPressW", "()", " ", "||", " ", "this", ".", "keyboard", ".", "isPressS", "()))", " ", "{", "\n      ", "this", ".", "model", ".", "stop", "()", "\n    ", "// A", "\n    ", "}", " ", "else", " ", "if", " ", "(", "this", ".", "keyboard", ".", "isPressA", "())", " ", "{", "\n      ", "this", ".", "model", ".", "move", "(", "this", ".", "selectCamera", ",", " ", "Math", ".", "PI", "/", "2", ")", "\n    ", "// D", "\n    ", "}", " ", "else", " ", "if", " ", "(", "this", ".", "keyboard", ".", "isPressD", "())", " ", "{", "\n      ", "this", ".", "model", ".", "move", "(", "this", ".", "selectCamera", ",", " ", "-", "Math", ".", "PI", "/", "2", ")", "\n    ", "// W", "\n    ", "}", " ", "else", " ", "if", " ", "(", "this", ".", "keyboard", ".", "isPressW", "())", " ", "{", "\n      ", "this", ".", "model", ".", "move", "(", "this", ".", "selectCamera", ",", " ", "0", ")", "\n    ", "// S", "\n    ", "}", " ", "else", " ", "if", " ", "(", "this", ".", "keyboard", ".", "isPressS", "())", " ", "{", "\n      ", "this", ".", "model", ".", "move", "(", "this", ".", "selectCamera", ",", " ", "Math", ".", "PI", ")", "\n    ", "}", "\n    ", "if", " ", "(", "this", ".", "clicked", ")", " ", "{", "\n      ", "const", " ", "dir", " ", "=", " ", "new", " ", "Vec3", "(", "this", ".", "clickPos", ".", "x", " ", "-", " ", "this", ".", "model", ".", "position", ".", "x", ",", " ", "0", ",", " ", "this", ".", "clickPos", ".", "z", " ", "-", " ", "this", ".", "model", ".", "position", ".", "z", ")", "\n      ", "if", " ", "(", "dir", ".", "length", "()", " ", "<", " ", "3", ")", " ", "{", "\n        ", "this", ".", "clicked", " ", "=", " ", "false", "\n      ", "}", "\n      ", "this", ".", "model", ".", "moveTo", "(", "this", ".", "clickPos", ")", "\n    ", "}", "\n    ", "// 移動結果を物理計算空間に反映", "\n    ", "this", ".", "physicsWorld", ".", "setPhysicsPose", "(", "this", ".", "model", ")", "\n\n    ", "const", " ", "delay", " ", "=", " ", "3", "\n    ", "if", " ", "(", "this", ".", "isGround", " ", "&&", " ", "time", " ", ">", " ", "(", "this", ".", "jumbTime", " ", "||", " ", "0", ")", " ", "+", " ", "delay", " ", "&&", " ", "this", ".", "keyboard", ".", "isPressSpace", "())", " ", "{", "\n      ", "this", ".", "physicsWorld", ".", "addImpulse", "(", "this", ".", "model", ",", " ", "new", " ", "Vec3", "(", "0", ",", " ", "8000", ",", " ", "0", "))", "\n      ", "this", ".", "sound", ".", "play", "()", "\n      ", "this", ".", "isGround", " ", "=", " ", "false", "\n      ", "this", ".", "jumbTime", " ", "=", " ", "time", "\n    ", "}", "\n    ", "this", ".", "physicsWorld", ".", "addForce", "(", "this", ".", "model", ",", " ", "new", " ", "Vec3", "(", "0", ",", " ", "-", "3000", ",", " ", "0", "))", "\n\n    ", "// 物理計算更新", "\n    ", "this", ".", "physicsWorld", ".", "update", "(", "delta", ")", "\n\n    ", "// 物理空間上のオブジェクトの当たり判定", "\n    ", "const", " ", "hitResult", " ", "=", " ", "this", ".", "physicsWorld", ".", "hitTest", "([", "this", ".", "heightMap", ",", " ", "this", ".", "model", "])", "\n    ", "if", " ", "(", "Object", ".", "keys", "(", "hitResult", ").", "length", " ", ">", " ", "0", ")", " ", "{", "\n      ", "if", " ", "(", "time", " ", ">", " ", "(", "this", ".", "jumbTime", " ", "||", " ", "0", ")", " ", "+", " ", "delay", ")", " ", "{", "\n        ", "this", ".", "isGround", " ", "=", " ", "true", "\n      ", "}", "\n    ", "}", "\n\n    ", "for", " ", "(", "let", " ", "i", " ", "=", " ", "0", ";", " ", "i", " ", "<", " ", "this", ".", "dynamicObjects", ".", "length", ";", " ", "i", "++", ")", " ", "{", "\n      ", "const", " ", "objThree", " ", "=", " ", "this", ".", "dynamicObjects", "[", "i", "]", "\n      ", "// ドラッグしていないオブジェクト以外反映する", "\n      ", "if", " ", "(", "objThree", ".", "userData", " ", "&&", " ", "objThree", ".", "userData", ".", "ignorePhysics", ")", " ", "{", "\n        ", "continue", "\n      ", "}", "\n      ", "this", ".", "physicsWorld", ".", "setModelPose", "(", "objThree", ")", "\n    ", "}", "\n\n    ", "const", " ", "horizontalSpeed", " ", "=", " ", "1.5", "\n    ", "const", " ", "verticalSpeed", " ", "=", " ", "1.33", "\n    ", "this", ".", "particle", ".", "simulate", "(", "delta", ",", " ", "new", " ", "Vec3", "(", "Math", ".", "sin", "(", "this", ".", "particle", ".", "tick", " ", "*", " ", "horizontalSpeed", ")", " ", "*", " ", "20", ",", " ", "Math", ".", "sin", "(", "this", ".", "particle", ".", "tick", " ", "*", " ", "verticalSpeed", ")", " ", "*", " ", "10", " ", "+", " ", "30", ",", " ", "Math", ".", "sin", "(", "this", ".", "particle", ".", "tick", " ", "*", " ", "horizontalSpeed", " ", "+", " ", "verticalSpeed", ")", " ", "*", " ", "5", "))", "\n    ", "this", ".", "water", ".", "update", "()", "\n\n    ", "this", ".", "physicsWorld", ".", "setModelPose", "(", "this", ".", "model", ")", "\n    ", "this", ".", "controlCamera", ".", "controls", ".", "update", "()", "\n    ", "this", ".", "renderer", ".", "setClearColor", "(", "0x000000", ",", " ", "0", ")", "\n    ", "this", ".", "renderer", ".", "clear", "(", "true", ",", " ", "true", ",", " ", "true", ")", "\n    ", "this", ".", "renderer", ".", "render", "(", "this", ".", "scene", ",", " ", "this", ".", "selectCamera", ")", "\n    ", "this", ".", "renderer", ".", "clearDepth", "()", "\n    ", "this", ".", "renderer", ".", "render", "(", "this", ".", "sceneOrtho", ",", " ", "this", ".", "cameraOrtho", ")", "\n  ", "}", "\n", "}", "\n"]},
{"title": ["Swiftでデザインパターン　テンプレートパターン"], "body": ["\n", "\n", "テンプレートパターン", "\n\n", "\n", "アルゴリズムの骨組みを決めておき、実装はそれを継承したクラスで行う", "\n", "細かい実装を気にせず、protocolで呼び出しできるメリットが有る", "\n", "\n\n", "\n", "前提", "\n\n", "\n", "JapaneseManとEnglishManという２つのクラスがある", "\n", "sayHelloというメソッドがあり、挨拶をそれぞれの国の言葉でできる", "\n", "\n\n", "class", " ", "JapaneseMan", " ", "{", "\n    ", "func", " ", "sayHello", "()", " ", "->", " ", "String", " ", "{", "\n        ", "return", " ", "\"こんにちは\"", " ", "// 日本語で返す", "\n    ", "}", "\n", "}", "\n\n", "class", " ", "EnglishMan", " ", "{", "\n    ", "func", " ", "sayHello", "()", " ", "->", " ", "String", " ", "{", "\n        ", "return", " ", "\"Hello\"", " ", "// 英語で返す", "\n    ", "}", "\n", "}", "\n", "\n\n", "\n", "問題", "\n\n", "\n", "似たような関数であるsayHelloを使うのに、classが違うため、面倒", "\n", "たとえ話ですが、arrayに無理やり入れようとするとAnyとなる", "\n", "AnyではsayHelloを呼び出すことはできず、一度キャストする必要が出てくる", "\n", "\n\n", "\n", "let", " ", "peopleArray", " ", "=", " ", "[", "JapaneseMan", ",", " ", "englishMan", "]", " ", "as", " ", "[", "Any", "]", "\n", "peopleArray", "[", "0", "]", " ", "// <- このときanyになる", "\n", "\n\n", "\n", "テンプレートパターン", "\n\n", "\n", "protocolで予め骨組みを作成し、各クラスで継承し、実装する", "\n", "配列で使うときなどはprotocolを指定して受け皿を作成し、利用する", "\n", "こうすることで実装は気にせず、オブジェクトを抽象的に扱うことができる", "\n", "\n\n", "\n", "protocol", " ", "Greetings", " ", "{", "\n    ", "func", " ", "sayHello", "()", " ", "->", " ", "String", "\n", "}", "\n\n", "extension", " ", "JapaneseMan", ":", " ", "Greetings", " ", "{", "\n    ", "func", " ", "sayHello", "()", " ", "->", " ", "String", " ", "{", "\n        ", "return", " ", "\"こんにちは\"", " ", "// 日本語で返す", "\n    ", "}", "\n", "}", "\n\n", "extension", " ", "EnglishMan", ":", " ", "Greetings", " ", "{", "\n    ", "func", " ", "sayHello", "()", " ", "->", " ", "String", " ", "{", "\n        ", "return", " ", "\"Hello\"", " ", "// 英語で返す", "\n    ", "}", "\n", "}", "\n\n", "let", " ", "greetingsArray", ":", " ", "[", "Greetings", "]", " ", "=", " ", "[", "japaneseMan", ",", " ", "englishMan", "]", "\n", "greetingsArray", "[", "0", "]", " ", "// <- このときGreetingsになる", "\n", "greetingsArray", "[", "0", "]", ".", "sayHello", "()", "\n", "greetingsArray", "[", "1", "]", ".", "sayHello", "()", "\n", "\n"], "code": ["class", " ", "JapaneseMan", " ", "{", "\n    ", "func", " ", "sayHello", "()", " ", "->", " ", "String", " ", "{", "\n        ", "return", " ", "\"こんにちは\"", " ", "// 日本語で返す", "\n    ", "}", "\n", "}", "\n\n", "class", " ", "EnglishMan", " ", "{", "\n    ", "func", " ", "sayHello", "()", " ", "->", " ", "String", " ", "{", "\n        ", "return", " ", "\"Hello\"", " ", "// 英語で返す", "\n    ", "}", "\n", "}", "\n", "\n", "let", " ", "peopleArray", " ", "=", " ", "[", "JapaneseMan", ",", " ", "englishMan", "]", " ", "as", " ", "[", "Any", "]", "\n", "peopleArray", "[", "0", "]", " ", "// <- このときanyになる", "\n", "\n", "protocol", " ", "Greetings", " ", "{", "\n    ", "func", " ", "sayHello", "()", " ", "->", " ", "String", "\n", "}", "\n\n", "extension", " ", "JapaneseMan", ":", " ", "Greetings", " ", "{", "\n    ", "func", " ", "sayHello", "()", " ", "->", " ", "String", " ", "{", "\n        ", "return", " ", "\"こんにちは\"", " ", "// 日本語で返す", "\n    ", "}", "\n", "}", "\n\n", "extension", " ", "EnglishMan", ":", " ", "Greetings", " ", "{", "\n    ", "func", " ", "sayHello", "()", " ", "->", " ", "String", " ", "{", "\n        ", "return", " ", "\"Hello\"", " ", "// 英語で返す", "\n    ", "}", "\n", "}", "\n\n", "let", " ", "greetingsArray", ":", " ", "[", "Greetings", "]", " ", "=", " ", "[", "japaneseMan", ",", " ", "englishMan", "]", "\n", "greetingsArray", "[", "0", "]", " ", "// <- このときGreetingsになる", "\n", "greetingsArray", "[", "0", "]", ".", "sayHello", "()", "\n", "greetingsArray", "[", "1", "]", ".", "sayHello", "()", "\n"]},
{"title": ["C++ - struct vs class"], "body": ["Great explain.", "\n\n", "\n", "there is no technical difference. It means that ", "class", " and ", "struct", " are both belong class data type.", "\n", "struct = data is public, with very simple helper methods", "\n", "class = strongly encapsulated, data is modified / accessed only through methods", "\n", "struct defaults to public access and class defaults to private access.", "\n", "When inheriting, struct defaults to public inheritance and class defaults to private inheritance. ", "\n", "\n\n", "https://stackoverflow.com/questions/54585/when-should-you-use-a-class-vs-a-struct-in-c", "\n", "https://stackoverflow.com/questions/543515/structs-vs-classes-in-c?noredirect=1&lq=1", "\n", "https://stackoverflow.com/questions/54585/when-should-you-use-a-class-vs-a-struct-in-c", "\n"], "code": []},
{"title": ["※メモ　Bitnami MEAN  (MongoDB password reset) 　"], "body": ["Edit the /opt/bitnami/mongodb/mongodb.conf file and replace the following lines:", "\n\n", "# Turn on/off security.  Off is currently the default\n#noauth = true\nauth = true\n\n# Disable the HTTP interface (Defaults to localhost:27018).\n#nohttpinterface = true\nsetParameter = enableLocalhostAuthBypass=0\n", "\n\n", "with:", "\n\n", "# Turn on/off security.  Off is currently the default\nnoauth = true\n#auth = true\n\n# Disable the HTTP interface (Defaults to localhost:27018).\n#nohttpinterface = true\n#setParameter = enableLocalhostAuthBypass=0\n", "\n\n", "Restart the MongoDB server:", "\n\n", "cd /opt/bitnami\nsudo /opt/bitnami/ctlscript.sh restart mongodb\n", "\n\n", "Create a new administrative user with a new password. Run the following commands to do so (remember to replace NEWPASSWORD with the new one you want to set):", "\n\n", "mongo\n> db = db.getSiblingDB('admin')\nadmin\n> db.changeUserPassword(\"root\", \"NEWPASSWORD\")\n", "\n\n", "Revert the modifications made to /opt/bitnami/mongodb/mongodb.conf by replacing:", "\n\n", "# Turn on/off security.  Off is currently the default\nnoauth = true\n#auth = true\n\n# Disable the HTTP interface (Defaults to localhost:27018).\n#nohttpinterface = true\n#setParameter = enableLocalhostAuthBypass=0\n", "\n\n", "with:", "\n\n", "# Turn on/off security. Off is currently the default\n#noauth = true\nauth = true\n\n# Disable the HTTP interface (Defaults to localhost:27018).\n#nohttpinterface = true\nsetParameter = enableLocalhostAuthBypass=0\n", "\n\n", "Restart the MongoDB server again:", "\n\n", "cd /opt/bitnami\nsudo /opt/bitnami/ctlscript.sh restart mongodb\n", "\n"], "code": ["# Turn on/off security.  Off is currently the default\n#noauth = true\nauth = true\n\n# Disable the HTTP interface (Defaults to localhost:27018).\n#nohttpinterface = true\nsetParameter = enableLocalhostAuthBypass=0\n", "# Turn on/off security.  Off is currently the default\nnoauth = true\n#auth = true\n\n# Disable the HTTP interface (Defaults to localhost:27018).\n#nohttpinterface = true\n#setParameter = enableLocalhostAuthBypass=0\n", "cd /opt/bitnami\nsudo /opt/bitnami/ctlscript.sh restart mongodb\n", "mongo\n> db = db.getSiblingDB('admin')\nadmin\n> db.changeUserPassword(\"root\", \"NEWPASSWORD\")\n", "# Turn on/off security.  Off is currently the default\nnoauth = true\n#auth = true\n\n# Disable the HTTP interface (Defaults to localhost:27018).\n#nohttpinterface = true\n#setParameter = enableLocalhostAuthBypass=0\n", "# Turn on/off security. Off is currently the default\n#noauth = true\nauth = true\n\n# Disable the HTTP interface (Defaults to localhost:27018).\n#nohttpinterface = true\nsetParameter = enableLocalhostAuthBypass=0\n", "cd /opt/bitnami\nsudo /opt/bitnami/ctlscript.sh restart mongodb\n"]},
{"title": ["Raspberry Pi→AWS IoT→dynamoDB にデータ送信"], "body": ["チュートリアルをやって雰囲気がわかったので、dynamoDBにデータを書き込むところまでできたメモをまとめした。", "\n\n", "\n", "全体の流れ", "\n\n", "\n", "AWS IoT Coreでモノ・証明書・ポリシーを作成", "\n", "ルールを作成", "\n", "dynamoDBでテーブルを作成", "\n", "RasPiプログラム側にAWS IoT Coreへデータ送信する行を実装", "\n", "AWSIoTの「テスト」機能を使って確認", "\n", "\n\n", "です。", "\n\n", "作業を進める中で参考にさせて頂いた記事：", "\n", "DynamoDBに書き込む AWS IoT のルールの作り方", "\n", "ラズパイ３上のPythonでMQTTの通信をやってみる", "\n", "AWS IoTにPythonでMQTTイベントの送信、受信するまで", "\n", "import error！パスを通す？？pythonあるある。", "\n\n", "\n", "1. AWS IoT Coreでモノ・証明書・ポリシーを作成", "\n\n", "今回はチュートリアルと違って、モノを新規作成→1-Click 証明書作成 (推奨) で証明書を作ってRasPi側にダウンロードしておきます。証明書をポリシーとモノにアタッチします。", "\n\n", "\n", "2. ルールを作成", "\n\n", "の途中で", "\n\n", "\n", "3. dynamoDBでテーブルを作成", "\n\n", "DynamoDBに書き込む AWS IoT のルールの作り方", "\n基本的には↑の通り進めますが、なぜかうまくいかなかったメモとして、事前にdynamoDBを作ってからこのルールで選択して進めると成功しませんでした。なので、", "ルールを作っている途中で", "テーブルを選ぶときに「新しいリソースを作成する」を押してdynamoDBの作成画面に飛び、DBを作成する。が良いと思います。", "\n上記の記事ではjsonを送ってテストすることになってるんですが、私はテストプログラムの中にてjson形式でメッセージ送信することにしました。", "\nなのでDBができたらいちどこのステップは終わりにします。", "\n\n", "\n", "4. RasPiプログラム側にAWS IoT Coreへデータ送信する行を実装", "\n\n", "from AWSIoTPythonSDK.MQTTLib import AWSIoTMQTTClient", "\nからエラーを吐いたので心が折れそうになりましたが、下記の記事を読んでパスを通してみたところ無事できました。", "\n", "import error！パスを通す？？pythonあるある。", "\n\n", "import sys", "\nsys.path.append('usr/local/lib/.......')", "\nfrom AWSIoTPythonSDK.MQTTLib import AWSIoTMQTTClient", "\n\n", "jsonファイルを送る、じゃなくてプログラムの中でjson形式にして送るようにして、いろいろ試しながらテストしてみました。", "\n\n", "\n", "test_basicPubSub.py", "\n", "import", " ", "logging", "\n", "import", " ", "getopt", "\n", "import", " ", "time", "\n", "import", " ", "json", "\n", "import", " ", "datetime", "\n", "import", " ", "sys", "\n", "sys", ".", "path", ".", "append", "(", "'usr/local/lib/.......'", ")", "\n", "from", " ", "AWSIoTPythonSDK.MQTTLib", " ", "import", " ", "AWSIoTMQTTClient", "\n\n", "def", " ", "customCallback", "(", "client", ",", " ", "userdata", ",", " ", "message", "):", "\n  ", "print", "(", "'Received new message'", ")", "\n  ", "print", "(", "message", ".", "payload", ")", "\n  ", "print", "(", "'from Topic'", ")", "\n  ", "print", "(", "message", ".", "topic", ")", "\n  ", "print", "(", "'--------", "\\n\\n", "'", ")", "\n\n", "Ymd", " ", "=", " ", "datetime", ".", "datetime", ".", "now", "()", ".", "strftime", "(", "\"", "%", "Y/", "%", "m/", "%", "d\"", ")", "\n", "sending_msg", " ", "=", " ", "json", ".", "dumps", "({", "\"deviceid\"", ":", "\"Raspi-1\"", ",", "\"time_in\"", ",", "Ymd", ",", "\"sentmessage\"", ":", "\"this is a test from RasPi1\"", "})", "\n\n", "myMQTTClient", " ", "=", " ", "AWSIoTMQTTClient", "(", "'mycliId'", ")", " ", "#適当で良い", "\n", "myMQTTClient", ".", "configureEndpoint", "(", "'エンドポイント'", ",", "8883", ")", " ", "#8883はポート", "\n", "myMQTTClient", ".", "configureCredentials", "(", "'rootCA.pem'", ",", "'privatekey'", ",", "'nnn-certificate.pem.crt'", ")", " ", "#証明書3つ、同じフォルダ内に置いてます", "\n", "myMQTTClient", ".", "configureOfflinePublishQueueing", "(", "-", "1", ")", "\n", "myMQTTClient", ".", "configureDrainingFrequency", "(", "2", ")", "\n", "myMQTTClient", ".", "configureConnectDisconnectTimeout", "(", "10", ")", "\n", "myMQTTClient", ".", "configureMQTTOperationTimeout", "(", "5", ")", "\n", "myMQTTClient", ".", "connect", "()", "\n\n", "myMQTTClient", ".", "subscribe", "(", "\"AWSIoTのテストに入れるトピック名\"", ",", " ", "1", ",", " ", "CustomCallback", ")", "\n", "myMQTTClient", ".", "publish", "(", "\"AWSIoTのテストに入れるトピック名\"", ",", " ", "sending_msg", ",", " ", "1", ")", "\n", "\n", "\n\n", "\n", "5. AWSIoTの「テスト」機能を使って確認", "\n\n", "トピックのサブスクリプション　欄に上記テストコードの中で\"AWSIoTのテストに入れるトピック名\"に入れたトピック名を入れて、しばらく(2-3分)経ってから4のテストコードを実行。", "\nRasPi側から送ったsending_msgの内容が表示されたら成功です！", "\n続いてAWSIoTのコンソールからdynamoDBに移動して、データが入ってきていればこちらも成功です(・∀・)！", "\n\n", "\n\n", "色々はまったところがありましたが、先人の皆さんのおかげでうまいことできました。", "\n上記のテストコードがうまくいったら、後はほぼこれを使いまわして色んなものに埋めていけばいいので、ここで少々時間がかかっても確認ができてよかったです。", "\n"], "code": ["import", " ", "logging", "\n", "import", " ", "getopt", "\n", "import", " ", "time", "\n", "import", " ", "json", "\n", "import", " ", "datetime", "\n", "import", " ", "sys", "\n", "sys", ".", "path", ".", "append", "(", "'usr/local/lib/.......'", ")", "\n", "from", " ", "AWSIoTPythonSDK.MQTTLib", " ", "import", " ", "AWSIoTMQTTClient", "\n\n", "def", " ", "customCallback", "(", "client", ",", " ", "userdata", ",", " ", "message", "):", "\n  ", "print", "(", "'Received new message'", ")", "\n  ", "print", "(", "message", ".", "payload", ")", "\n  ", "print", "(", "'from Topic'", ")", "\n  ", "print", "(", "message", ".", "topic", ")", "\n  ", "print", "(", "'--------", "\\n\\n", "'", ")", "\n\n", "Ymd", " ", "=", " ", "datetime", ".", "datetime", ".", "now", "()", ".", "strftime", "(", "\"", "%", "Y/", "%", "m/", "%", "d\"", ")", "\n", "sending_msg", " ", "=", " ", "json", ".", "dumps", "({", "\"deviceid\"", ":", "\"Raspi-1\"", ",", "\"time_in\"", ",", "Ymd", ",", "\"sentmessage\"", ":", "\"this is a test from RasPi1\"", "})", "\n\n", "myMQTTClient", " ", "=", " ", "AWSIoTMQTTClient", "(", "'mycliId'", ")", " ", "#適当で良い", "\n", "myMQTTClient", ".", "configureEndpoint", "(", "'エンドポイント'", ",", "8883", ")", " ", "#8883はポート", "\n", "myMQTTClient", ".", "configureCredentials", "(", "'rootCA.pem'", ",", "'privatekey'", ",", "'nnn-certificate.pem.crt'", ")", " ", "#証明書3つ、同じフォルダ内に置いてます", "\n", "myMQTTClient", ".", "configureOfflinePublishQueueing", "(", "-", "1", ")", "\n", "myMQTTClient", ".", "configureDrainingFrequency", "(", "2", ")", "\n", "myMQTTClient", ".", "configureConnectDisconnectTimeout", "(", "10", ")", "\n", "myMQTTClient", ".", "configureMQTTOperationTimeout", "(", "5", ")", "\n", "myMQTTClient", ".", "connect", "()", "\n\n", "myMQTTClient", ".", "subscribe", "(", "\"AWSIoTのテストに入れるトピック名\"", ",", " ", "1", ",", " ", "CustomCallback", ")", "\n", "myMQTTClient", ".", "publish", "(", "\"AWSIoTのテストに入れるトピック名\"", ",", " ", "sending_msg", ",", " ", "1", ")", "\n"]},
{"title": ["C++ - using vs using namespace"], "body": ["\n", "using namespace makes visible all the names of the namespace", "\n", "using on a specific object of the namespace makes only that object visible", "\n", "\n\n", "https://stackoverflow.com/questions/25006127/difference-between-using-and-using-namespace", "\n"], "code": []},
{"title": ["Ubuntu Docker インストールとproxyとsudo無し実行"], "body": ["\n", "\n", "はじめに", "\n\n", "インストールですが鍵からリポジトリ取得してインストールが上手く出来ず挫折...", "\n普通にWEBからダウンロードして", "dpkg", "でインストールすることできるので同じような方は、そうすることがおすすめです。", "\n\n", "\n", "Docker Download", "\n\n", "ダウンロードサイト", "\nここの一番新しいやつダウンロード", "\n\n", "\n", "Docker install", "\n\n", "ダウンロードに移動して", "\n", "$ cd ~/Download/", "\nインストール開始", "\n", "$ sudo dpkg -i [file name_amd64.deb]", "\nコマンドを確認", "\n", "$ docker --version", "\n\n", "\n", "proxyに対応させる", "\n\n", "docker", "のオプション付けるディレクトリ作成", "\n", "$ sudo mkdir -p /etc/systemd/system/docker.service.d", "\n", "$ cd /etc/systemd/system/docker.service.d/", "\n\n", "\n", "編集", "\n\n", "http-proxy.confの作成", "\n", "$ sudo vi http-proxy.conf", "\n\n", "[Service]\nEnvironment=\"HTTP_PROXY=http://[id]:[passwd]@[proxy.example]:[port]/\"\n", "\n\n", "https-proxy.confの作成", "\n", "$ sudo cp http-proxy.conf https-proxy.conf", "\n", "$ sudo vi https-proxy.conf", "\n\n", "[Service]\nEnvironment=\"HTTPS_PROXY=http://[id]:[passwd]@[proxy.example]:[port]/\"\n", "\n\n", "HTTP ▷ HTTPSにするだけ", "\n\n", "\n", "反映", "\n\n", "$ sudo systemctl daemon-reload", "\n", "$ sudo systemctl restart docker", "\n\n", "\n", "sudo無しでDocker動かしたい", "\n\n", "UbuntuでDockerの環境整えたのだが", "\nsudo無いとコマンド実行できず", "\n\n", "Macでは、sudo無しなのでうざったい。", "\nそこでsudo無しでも行けるよってのは、公式にも書いてある。", "\n\n", "\n", "docker", "のグループ作成", "\n\n", "$ sudo groupadd docker", "\nこれは、既に作成している。", "\n\n", "\n", "ユーザーを", "docker", "に追加", "\n\n", "$ sudo gpasswd -a $USER docker", "\nここで設定は完了", "\n\n", "しかしこのままでは、まだsudoが必要", "\n再起動すればおそらく問題ないが面倒...", "\n\n", "\n", "shellを更新", "\n\n", "$ newgrp docker", "\nこれで行ける。", "\n"], "code": ["[Service]\nEnvironment=\"HTTP_PROXY=http://[id]:[passwd]@[proxy.example]:[port]/\"\n", "[Service]\nEnvironment=\"HTTPS_PROXY=http://[id]:[passwd]@[proxy.example]:[port]/\"\n"]},
{"title": ["iOS12のショートカットアプリを使ってマストドンAPIを叩いて呟いた"], "body": ["\n", "\n", "初めに", "\n\n", "Qiita初投稿の内容となります。始めまして。Hello, World.", "\n\n", "先日iOS12の正式版リリースが行われました。", "\nパフォーマンスの改善はもちろん、ミー文字やスクリーンタイムなど様々な追加要素がありますが、", "\n注目点(?)の一つとして、「ショートカット」アプリ(旧WorkFlow)が挙げられます。", "\n\n", "実際はWorkFlowというアプリのリニューアル版らしいのですが、iOS12からショートカットとして生まれ変わったものらしいです。WorkFlow自体は触ったこと無いのですが、生まれ変わったこの機会に触ってみたら、割と凄そうなので、この可能性に共感して頂けたらと思いこの記事を書きました。", "\n\n", "ショートカットアプリは様々なアプリやシステムと連携することが可能であり、実際Twitterと連携したアクションは非常に簡単に作成できます。", "\nそんな簡単なことはすぐに飽きるというあなたのために、今回は", "音声入力を利用して、喋った内容をMastodonで呟いて、そして呟いた内容を音声出力する", "、というショートカットを作って見たいと思います(Mastodonについて知らない方はggって頂くと多くの記事が出るので、興味を湧かしてください)。  ", "\n\n", "この記事はWeb初心者の方にもわかりやすい説明を心がけていますので、若干回りくどかったりもします。", "\nまた、内容も内容なので説明を投げ捨ててる部分もあります。", "どっちつかずが一番問題だと思います。", "\n\n", "\n", "事前準備", "\n\n", "この記事でやること自体は単純ですが、事前準備はちょっと面倒です。  ", "\n\n", "\n", "最初にやること", "\n\n", "iOSデバイスをiOS12にアップデートしてください。iOS12未満の方でもWorkFlowを使って同じことが出来る(はずです)けど、画面などが異なる(かもしれない)ので適宜変換をお願いします。", "\n\n", "あと、Mastodonにユーザーがない場合はユーザーを作成しましょう。", "\nちなみに、私は", "社畜丼(労働者たちのマストドン)", "のユーザーでございます。", "\n\n", "\n", "ショートカットアプリのインストール", "\n\n", "AppStoreでショートカットと入力し、一番上にあるアプリをインストールしましょう。", "\n\n", "ちなみにiOS12未満のユーザーでWorkFlowを使っていた方は自動的にアプリが切り替わっているようです。", "\n\n", "\n", "マストドンでアプリを作成", "\n\n", "Mastodon(やTwitter)でアプリを作成したことのある方はわかると思いますが、Mastodonで外部から呟いたりするためには自分でアプリを作らないといけません。", "\n幸いMastodonは非常に簡単にアプリが作成できるようになりました。", "\n以下アプリの作成の仕方になりますが、Mastodonのバージョンによっては見た目が違ったり(そもそもアプリが簡単に作れなかったり)しますが、適宜変換をお願いします。", "\n\n", "まずはMastodonのユーザー設定へ行きましょう。", "\n\n", "下の方に開発と書かれた部分があるので、それを開くとアプリというものが現れます。", "\nここでアプリを追加することができます。", "\n\n", "\n\n", "アプリ名はショートカットアプリで作ったショートカットはSiriからでも呼び出せるということを意味づけて、 ", "Osiridon", " にでもしておきます。", "\n以下、特に設定を変える必要はないのでそのまま送信してください。", "\n\n", "\n\n", "アプリが作成されました、という表示とともにOsiridon(先程作ったアプリ)が追加されているので、開いてください。", "\n\n", "すると下の方にアクセストークンと書かれた部分があるので、クリップボードにコピーしておいてください。また、この値がバレるとさきほど設定したすべての権限を悪用できるのでバレないよう注意してください。", "\n\n", "\n\n", "以上でマストドンのアプリ作成は終了です。", "\n\n", "\n", "呟いてみよう", "\n\n", "ここでは、ショートカットを使って「にゃーん」って呟いてみたいと思います。  ", "\n\n", "呟いてみようと気軽なタイトルですが、実際知らないと一番難しいのがここだったりします。", "\nが、手順通りやれば簡単に出来ます。興味が湧いたら原理なども調べてみてください。", "\n\n", "\n", "ショートカットを作成!", "\n\n", "兎にも角にもまずはショートカットアプリを開かないとコトは始まらないので、開いてみましょう。", "\nまっさらな画面にショートカットを作成と書かれたものがぽつんと置いてあります。", "\n\n", "誘われるがままショートカットを作成ボタンをタップしてみると新しくショートカットが作成されました。", "\n\n", "\n\n", "画像にあるように、ショートカットアプリではアクションを追加していって一つのショートカットを作っていきます。さながらプログラミングみたいですよ。", "\n\n", "それでは「下部」をタップしてみましょう。   現れたコンテンツの中から必要なアクションを並べていきショートカットを作成していきます。", "\n\n", "\n", "今回使うアクションを追加", "\n\n", "まず最初に必要なアクションであるWeb→URLのURLとWeb→URLの内容を取得の2つをショートカットに追加します。", "\n上部の検索窓にURLと入力すれば2つとも表示されるはずです。", "\n\n", "\n\n", "説明はしませんが、詳しいことは各アクションの右側のiマークをタップすると表示されます。", "\n\n", "URLとURLの内容を取得アクションを追加してみましょう。タップするだけで追加されます。", "\nURLとURLの内容を取得が線で繋がれていますが、これはURLアクションで入力した内容をURLの内容を取得アクションで使うからです。(URLアクションの出力がURLの内容を取得アクションの入力につながっていると考えましょう)。  非常にどうでもいいですが、このアクションとアクションが線でつながるのを見てちょっとだけ", "LabView", "を思い出しました。", "\n\n", "\n\n", "\n", "呟いてみよう", "\n\n", "まずはURLの欄に事前準備でアプリを作ったインスタンスのURLを入力してください。", "\n私でしたら社畜丼ですので", "https://mstdn-workers.com", ", jpユーザーの方は", "https://mstdn.jp", "という具合です。", "\nそして、その後ろに更に追加して", "/api/v1/statuses", "という値を入力します。これはマストドンで呟くためのAPIのURLです。", "\n\n", "URLの内容を取得アクションですが、詳細をタップすると方法、ヘッダという項目が現れます。", "\n\n", "まずは方法の項目をタップし、POSTを選択します。", "\n\n", "ヘッダの部分をタップすると、キー、テキストと書かれた項目が現れます。", "\nそこに次の表のような値を入力します。", "\nこうすることでHTTPヘッダに指定したキーとテキストを含めることができます。", "\nまた、Mastodonではヘッダに表のような値を含めることで、トークンの権限に応じた操作を行えるようになります。", "\n\n", "\n", "\n", "\n", "キー", "\n", "テキスト", "\n", "\n", "\n", "\n", "\n", "authorization", "\n", "Bearer(半角空白)事前準備でコピーしたアクセストークン", "\n", "\n", "\n", "\n\n", "次に本文を要求項目です。", "\n本文を要求項目の下の新規フィールドを追加をタップすると、テキスト、数字、配列、辞書、ブール値の中から選択するよう要求されるので\"テキスト\"を選択してください。", "\nするとまたキーとテキストの入力が求められるので、今度は次の表の通りに入力してください。この部分がなどういう意味かはなんとなく勘づくと思います。", "\n\n", "\n", "\n", "\n", "キー", "\n", "テキスト", "\n", "\n", "\n", "\n", "\n", "status", "\n", "にゃーん(呟く内容)", "\n", "\n", "\n", "\n\n", "ここまでの状態で次のような画像になっていると思います。これでとりあえず呟けます。", "\n\n", "\n\n", "試しに上部真ん中にある再生ボタンを押してみましょう。", "\n\n", "\n\n", "ハロー! Osiridon!", "\n\n", "\n", "音声入力を使ってみよう", "\n\n", "正しく入力できていれば、すでに呟ける環境が整っているので、あとは簡単です。", "\n\n", "下部の検索バーをタップしてテキスト→テキストを音声入力アクションをショートカットに追加してください。", "\nその後、テキストを音声入力アクションをロングタップし、位置を変更できるようになったら一番上に持ってきます。それで、先程の", "にゃーん(呟く内容)", "をタップし内容を一旦削除します。", "\nその後キーボードの上らへんにある", "音声入力されたテキスト", "を選択します。", "\n\n", "\n\n", "この", "音声入力されたテキスト", "はいわゆる変数で、この記事では扱いませんが、変数を自分で作ることも可能です。", "\n\n", "これで完了しました。再生ボタンを押しましょう。", "\n\n", "\n\n", "ハロー! Oppaidon!", "　", "※社畜丼での挨拶です", "\n\n", "\n", "呟いた内容を喋らせよう", "\n\n", "今まで呟いてみて、下の方になにかよくわからない(分かる人にはわかる)表示があったのに気づきましたか?", "\n\n", "それはこっちから送ったメッセージの返答で、今回の場合は今回呟いたTootの情報を返してくれています。 ", "Jsonという気味の悪い拡張子", "のデータが返ってきているのですが、このJsonデータからデータを抜き出すアクションも既にあります。", "\n\n", "下部のバーをタップして、スクリプティング→辞書→辞書の値を取得アクションをショートカットに追加します。", "\nそして、キーの部分に", "content", "と入力してください。", "\n\n", "これで呟いた内容を取得できるので、次に、これを喋らせてみましょう。", "\n\n", "音声入力が可能なので、音声出力も当然可能です。テキスト→テキストを読み上げるアクションをショートカットに追加しましょう。", "\n\n", "これで、現在テキストを音声入力→URL→URLの内容を取得→辞書の値を取得、テキストを読み上げる、とアクションが並んでると思います。いざ、再生してみましょう。", "\n\n", "\n\n", "どうですか。良さげな感じですが、呟いた内容の前後に変なのが聞こえますね。", "\n最下部を見てみると、", "<p>呟いた内容</p>", "という表示があると思います。これが音声再生された内容なのですが、邪魔なもので囲まれています。", "\n\n", "\n\n", "実は、Mastodonが返すTootの内容は、Web上で表示するのに適した形に変換されたものが返ってきます(実際に<p>や<br>など、htmlでお馴染みのタグを含んだものが返ってきます)。", "\nこのhtmlのタグを削除するアクション自体はショートカットにはありませんが、複数のアクションを組み合わせて(ある程度)削除することができます(多分)。完全に削除することは今のところできてませんが。", "\nヒントは正規表現、リスト、繰り返しです。", "\n\n", "\n", "まとめ", "\n\n", "ショートカットアプリを使ってMastodonで呟くことが出来ました。これらを活かせば読み上げクライアントもワンタップで出来そうですね。", "\n\n", "回りくどい説明が多くて、結局分かりづらい内容になってしまったかもしれませんが、ショートカットアプリの可能性を共感いただけたら幸いです。", "\n\n", "また今回の記事で作ったショートカットのアクションとその内容のまとめを以下の表にまとめました。", "\nこの表があれば上記の長い文章はほぼ必要ありませんが、何卒。", "\n\n", "\n", "\n", "\n", "アクション名(一番上から)", "\n", "設定項目", "\n", "設定内容", "\n", "\n", "\n", "\n", "\n", "テキストを音声入力", "\n", "特になし", "\n", "\n", "\n", "\n", "URL", "\n", "URL", "\n", "アプリを設定したインスタンスのURL/api/v1/statuses", "\n", "\n", "\n", "URLの内容を取得", "\n", "方法", "\n", "POST", "\n", "\n", "\n", "\n", "ヘッダ", "\n", "キー: authorization", "\n", "\n", "\n", "\n", "\n", "テキスト: Bearer(半角空白)access_token", "\n", "\n", "\n", "\n", "本文を要求", "\n", "キー: status", "\n", "\n", "\n", "\n", "\n", "テキスト: ", "音声入力されたテキスト", "\n", "\n", "\n", "\n", "辞書の値を取得", "\n", "キー", "\n", "content", "\n", "\n", "\n", "テキストを読み上げる", "\n", "特になし", "\n", "\n", "\n", "\n", "\n\n", "以上になります。", "\n以下は、Bearerって何? statusってどっから来たの? みたいな人のための欄外です。", "\n\n", "\n", "いろいろ気になった人のための用語集", "\n\n", "今回の記事でBearerやAPIって何? , statusとかcontentってどこから来てるのと気になった人のために関連する用語やページを至極簡単にですがまとめました。気になった単語でggってみるとQiitaやブログなどにより詳しい内容があるのでここでは深く触れることはしませんが、気になったらココらへんの単語を基に調べてみるのも良いかもしれません。", "\n\n", "\n", "API", "\n\n", "\n", "Web API(今回の記事のAPIが表すもの)", "\n", "\n", "HTTPのメソッド, GET, POST", "\n", "Json", "\n", "REST api", "\n", "\n\n", "\n", "Bearer", "\n\n", "\n", "OAuth 2.0", "\n", "RFC6750", "\n", "ちなみにMastodonが使っている", "doorkeeper gemのドキュメント", "のUsing the Access Tokenにも使用方法が書いてある。", "\n", "\n\n", "\n", "Status, Contentがどこから来たのか", "\n\n", "\n", "MasotdonのAPIドキュメント", "\n", "\n"], "code": []},
{"title": ["Elasticsearch の バージョンアップ（備忘録）"], "body": ["Elasticsearch を 6.4 に バージョンアップしたあとにやること", "\n\n", "yum update elasticsearch\n\n# kuromoji 更新\nES_JAVA_OPTS=\"-Dhttp.proxyHost=proxy.*****.co.jp -Dhttp.proxyPort=8080 -Dhttps.proxyHost=proxy.*****.co.jp -Dhttps.proxyPort=8080\" ./elasticsearch-plugin remove analysis-kuromoji\nES_JAVA_OPTS=\"-Dhttp.proxyHost=proxy.*****.co.jp -Dhttp.proxyPort=8080 -Dhttps.proxyHost=proxy.*****.co.jp -Dhttps.proxyPort=8080\" ./elasticsearch-plugin install analysis-kuromoji\n\n# geoip 更新\nES_JAVA_OPTS=\"-Dhttp.proxyHost=proxy.*****.co.jp -Dhttp.proxyPort=8080 -Dhttps.proxyHost=proxy.*****.co.jp -Dhttps.proxyPort=8080\" ./elasticsearch-plugin remove ingest-geoip\nES_JAVA_OPTS=\"-Dhttp.proxyHost=proxy.*****.co.jp -Dhttp.proxyPort=8080 -Dhttps.proxyHost=proxy.*****.co.jp -Dhttps.proxyPort=8080\" ./elasticsearch-plugin install ingest-geoip\n\n# user-agent 更新\nES_JAVA_OPTS=\"-Dhttp.proxyHost=proxy.*****.co.jp -Dhttp.proxyPort=8080 -Dhttps.proxyHost=proxy.*****.co.jp -Dhttps.proxyPort=8080\" ./elasticsearch-plugin remove ingest-user-agent\nES_JAVA_OPTS=\"-Dhttp.proxyHost=proxy.*****.co.jp -Dhttp.proxyPort=8080 -Dhttps.proxyHost=proxy.*****.co.jp -Dhttps.proxyPort=8080\" ./elasticsearch-plugin install ingest-user-agent\n", "\n"], "code": ["yum update elasticsearch\n\n# kuromoji 更新\nES_JAVA_OPTS=\"-Dhttp.proxyHost=proxy.*****.co.jp -Dhttp.proxyPort=8080 -Dhttps.proxyHost=proxy.*****.co.jp -Dhttps.proxyPort=8080\" ./elasticsearch-plugin remove analysis-kuromoji\nES_JAVA_OPTS=\"-Dhttp.proxyHost=proxy.*****.co.jp -Dhttp.proxyPort=8080 -Dhttps.proxyHost=proxy.*****.co.jp -Dhttps.proxyPort=8080\" ./elasticsearch-plugin install analysis-kuromoji\n\n# geoip 更新\nES_JAVA_OPTS=\"-Dhttp.proxyHost=proxy.*****.co.jp -Dhttp.proxyPort=8080 -Dhttps.proxyHost=proxy.*****.co.jp -Dhttps.proxyPort=8080\" ./elasticsearch-plugin remove ingest-geoip\nES_JAVA_OPTS=\"-Dhttp.proxyHost=proxy.*****.co.jp -Dhttp.proxyPort=8080 -Dhttps.proxyHost=proxy.*****.co.jp -Dhttps.proxyPort=8080\" ./elasticsearch-plugin install ingest-geoip\n\n# user-agent 更新\nES_JAVA_OPTS=\"-Dhttp.proxyHost=proxy.*****.co.jp -Dhttp.proxyPort=8080 -Dhttps.proxyHost=proxy.*****.co.jp -Dhttps.proxyPort=8080\" ./elasticsearch-plugin remove ingest-user-agent\nES_JAVA_OPTS=\"-Dhttp.proxyHost=proxy.*****.co.jp -Dhttp.proxyPort=8080 -Dhttps.proxyHost=proxy.*****.co.jp -Dhttps.proxyPort=8080\" ./elasticsearch-plugin install ingest-user-agent\n"]},
{"title": ["gatsbyのgatsby-plugin-manifestプラグインを使ってwebmanifestを自動生成する"], "body": ["\n", "\n", "gatsby-plugin-manifest", "\n\n", "https://www.gatsbyjs.org/packages/gatsby-plugin-manifest/?=gatsby-plugin-manifest", "\n\n", "基本はここに書いてあるが、細かな工夫点をいくつか", "\n\n", "\n", "そのままの状態ではiPhone Safariの「ホーム画面に追加」のアイコンにならない", "\n\n", "\n\n", "react-helmet", "などを使って", "head", "タグ内に以下を記載", "\n\n", "/* icons/icon-48x48.pngなどは、gatsby-plugin-manifestで自動生成される */\n", "<link", " ", "rel=", "\"apple-touch-icon\"", " ", "href=", "\"icons/icon-48x48.png\"", " ", "sizes=", "\"48x48\"", " ", "/>", "\n", "<link", " ", "rel=", "\"apple-touch-icon\"", " ", "href=", "\"icons/icon-72x72.png\"", " ", "sizes=", "\"72x72\"", " ", "/>", "\n", "<link", " ", "rel=", "\"apple-touch-icon\"", " ", "href=", "\"icons/icon-96x96.png\"", " ", "sizes=", "\"96x96\"", " ", "/>", "\n", "<link", " ", "rel=", "\"apple-touch-icon\"", " ", "href=", "\"icons/icon-144x144.png\"", " ", "sizes=", "\"144x144\"", " ", "/>", "\n", "<link", " ", "rel=", "\"apple-touch-icon\"", " ", "href=", "\"icons/icon-192x192.png\"", " ", "sizes=", "\"192x192\"", " ", "/>", "\n", "<link", " ", "rel=", "\"apple-touch-icon\"", " ", "href=", "\"icons/icon-256x256.png\"", " ", "sizes=", "\"256x256\"", " ", "/>", "\n", "<link", " ", "rel=", "\"apple-touch-icon\"", " ", "href=", "\"icons/icon-384x384.png\"", " ", "sizes=", "\"384x384\"", " ", "/>", "\n", "<link", " ", "rel=", "\"apple-touch-icon\"", " ", "href=", "\"icons/icon-512x512.png\"", " ", "sizes=", "\"512x512\"", " ", "/>", "\n", "\n\n", "\n", "自動生成の元となる画像が透過や正方形じゃない場合は、iPhoneで背景色ブラック固定になってしまう", "\n\n", "元となる画像を正方形、透過無しでつくるしかない。", "\n\n", "\n", "gatsby-config.js", "\n", "  ", "{", "\n    ", "resolve", ":", " ", "`gatsby-plugin-manifest`", ",", "\n    ", "options", ":", " ", "{", "\n      ", "name", ":", " ", "`GatsbyJS`", ",", "\n      ", "short_name", ":", " ", "`GatsbyJS`", ",", "\n      ", "start_url", ":", " ", "`/`", ",", "\n      ", "background_color", ":", " ", "`#f7f0eb`", ",", "\n      ", "theme_color", ":", " ", "`#a2466c`", ",", "\n      ", "display", ":", " ", "`minimal-ui`", ",", "\n      ", "icon", ":", " ", "`src/images/icon.png`", ",", " ", "// この画像を正方形、透過無しで作る", "\n    ", "}", "\n  ", "}", "\n", "\n", "\n\n", "\n", " タブやブックマークのfaviconだけは自動生成の物にしたくない", "\n\n", "faviconはここで指定されているので、自動生成される48x48が上書き出来れば良い。", "\n", "\n\n", "Adding Assets Outside of the Module System", "\n", "https://www.gatsbyjs.org/docs/adding-images-fonts-files/", "\n", "\ngatsbyプロジェクトのルートフォルダに", "static", "フォルダを作りその中に", "icons/icon-48x48.png", "を作ると、", "gatsby develop", "時に", "gatsby-plugin-manifest", "で自動生成されたアイコンを上書きする。", "\n\n", "\n", "画像を変更したけど、faviconのキャッシュが効いてて新しい画像が見えない", "\n\n", "\n", "Chromeの場合", "\n\n", "強制的にfaviconキャッシュを全部消す", "\n\n", "rm", " /Users/ユーザー名/Library/Application Support/Google/Chrome/Default/Favicons\n", "\n"], "code": ["/* icons/icon-48x48.pngなどは、gatsby-plugin-manifestで自動生成される */\n", "<link", " ", "rel=", "\"apple-touch-icon\"", " ", "href=", "\"icons/icon-48x48.png\"", " ", "sizes=", "\"48x48\"", " ", "/>", "\n", "<link", " ", "rel=", "\"apple-touch-icon\"", " ", "href=", "\"icons/icon-72x72.png\"", " ", "sizes=", "\"72x72\"", " ", "/>", "\n", "<link", " ", "rel=", "\"apple-touch-icon\"", " ", "href=", "\"icons/icon-96x96.png\"", " ", "sizes=", "\"96x96\"", " ", "/>", "\n", "<link", " ", "rel=", "\"apple-touch-icon\"", " ", "href=", "\"icons/icon-144x144.png\"", " ", "sizes=", "\"144x144\"", " ", "/>", "\n", "<link", " ", "rel=", "\"apple-touch-icon\"", " ", "href=", "\"icons/icon-192x192.png\"", " ", "sizes=", "\"192x192\"", " ", "/>", "\n", "<link", " ", "rel=", "\"apple-touch-icon\"", " ", "href=", "\"icons/icon-256x256.png\"", " ", "sizes=", "\"256x256\"", " ", "/>", "\n", "<link", " ", "rel=", "\"apple-touch-icon\"", " ", "href=", "\"icons/icon-384x384.png\"", " ", "sizes=", "\"384x384\"", " ", "/>", "\n", "<link", " ", "rel=", "\"apple-touch-icon\"", " ", "href=", "\"icons/icon-512x512.png\"", " ", "sizes=", "\"512x512\"", " ", "/>", "\n", "  ", "{", "\n    ", "resolve", ":", " ", "`gatsby-plugin-manifest`", ",", "\n    ", "options", ":", " ", "{", "\n      ", "name", ":", " ", "`GatsbyJS`", ",", "\n      ", "short_name", ":", " ", "`GatsbyJS`", ",", "\n      ", "start_url", ":", " ", "`/`", ",", "\n      ", "background_color", ":", " ", "`#f7f0eb`", ",", "\n      ", "theme_color", ":", " ", "`#a2466c`", ",", "\n      ", "display", ":", " ", "`minimal-ui`", ",", "\n      ", "icon", ":", " ", "`src/images/icon.png`", ",", " ", "// この画像を正方形、透過無しで作る", "\n    ", "}", "\n  ", "}", "\n", "rm", " /Users/ユーザー名/Library/Application Support/Google/Chrome/Default/Favicons\n"]},
{"title": ["XcodeでIPhoneを繋いでビルドした時のエラーを対処した"], "body": ["\n", "\n", "nodeのパスを直す", "\n\n", "こういったエラー\nCan’t find ‘node’ binary to build React Native bundle\n", "\n\n", "React-NativeをiOS実機でビルドしたら，node binaryが見つからないとエラーが出た件", "\nmkazutakaさんの記事を参考にさせていただきました。", "\n\n", "\n", "証明書を発行する", "\n\n", "こういったエラー文字\n Code signing is required for product type 'Application' in SDK 'iOS 10.0'\n", "\n\n", "\n\n", "stackoverflowの質問の", "683の回答を参照すればOKでした。", "\n\n", "\n", "Signingのプルダウンを変更する", "\n\n", "こういったエラー\nFailed to create provisioning profile. The app ID \"hogehoge.hello_world\" cannot be registered to your development team. Change your bundle identifier to a unique string to try again.\n", "\n\n", "\n\n", "\n", "Bundle React Native code and imagesを書きコードに書き換える", "\n\n", "こういったエラー\n../node_modules/react-native/packager/react-native-xcode.sh: No such file or directory\n", "\n\n", "\n\n", "../node_modules/react-native/packager/react-native-xcode.sh\n\n//↓これに書き換える\n\n../node_modules/react-native/scripts/react-native-xcode.sh\n", "\n\n", "\n", "IPnoneにいれたアプリを信頼する", "\n\n", "おそらくiPhoneに入ったアプリをタップすると ", "信頼されていない開発元", " と表示されるのでこれを行う", "\n", "【iOS 10】iPhoneにインストールしたアプリの「信頼されていない開発元」を“信頼”する手順", "\n\n", "はじめて自分のiPhoneに作ったアプリがデプロイされると嬉しいですね！！", "\n"], "code": ["こういったエラー\nCan’t find ‘node’ binary to build React Native bundle\n", "こういったエラー文字\n Code signing is required for product type 'Application' in SDK 'iOS 10.0'\n", "こういったエラー\nFailed to create provisioning profile. The app ID \"hogehoge.hello_world\" cannot be registered to your development team. Change your bundle identifier to a unique string to try again.\n", "こういったエラー\n../node_modules/react-native/packager/react-native-xcode.sh: No such file or directory\n", "../node_modules/react-native/packager/react-native-xcode.sh\n\n//↓これに書き換える\n\n../node_modules/react-native/scripts/react-native-xcode.sh\n"]},
{"title": ["C++ - Pointer vs Reference"], "body": ["Clear and simple answer.", "\n\n", "\n", "Once a reference is created, it cannot be later made to reference another object; it cannot be reseated. This is often done with pointers.", "\n", "References cannot be NULL. Pointers are often made NULL to indicate that they are not pointing to any valid thing.", "\n", "A reference must be initialized when declared. There is no such restriction with pointers", "\n", "\n\n", "https://stackoverflow.com/questions/114180/pointer-vs-reference", "\n"], "code": []},
{"title": ["[BTC101]#2: ちびっと技術的なBitcoin説明〜その1〜"], "body": ["前々回記事(#0)：", "10分でわかった気になるBitcoinとBlockchain", "\n前回記事(#1)：　", "猿でも出来るBitcoin送金ハンズオン", "\n\n", "前回記事ではハンズオン中心に技術的な話には触れませんでしたが、今回から2回かけてチビっとだけ技術的な説明にトライします。", "\nまぁ僕の理解自体が「良いかげん」ですので、一緒に調べながら技術を楽しみましょう", "\n\n", "なお次回記事(#3)では今回説明しないBlock・マイニング・PoWなどの説明を予定しています。", "\n\n", "\n", "AGENDA", "\n\n", "\n", "ハッシュ関数・公開鍵暗号方式・電子署名", "\n", "Bitcoinアドレス", "\n", "UTXO", "\n", "Transactionの構造", "\n", "送金処理", "\n", "\n\n", "\n", "1.ハッシュ関数・公開鍵暗号方式・電子署名", "\n\n", "前々回", "、", "前回", "の説明で、ハッシュ関数・公開鍵暗号方式・電子署名ってのが出てきました。", "\nなーんとなく分かってるつもりでいるけど、人に説明するのって難しいですよね", "\nBitcoin, Blockchainのもっとも基本的な基礎技術なので、ちょっと復習しておきましょう。", "\n\n", "参考サイト", "\n", "ビットコインに使われている暗号化技術を解説｜なぜ暗号化が必要なの？", "\n\n", "\n", "(1)ハッシュ関数", "\n\n", "参考サイトからの", "パクリ", "引用です", "\n", "\n", "暗号学的ハッシュ関数とは簡単に言うと、任意の長さの文字列を入力すると一定のサイズのランダムな数値を返すような関数です。この一定のサイズのランダムな値をハッシュ値と呼びます。暗号学的ハッシュ関数は出力された数値から、元のメッセージに復号化することは出来ません。", "\n\n", "利用例の抜粋：", "\n", "\n\n", "どんなものかちょっとハッシュ計算をやってみましょう。", "\nハッシュ関数にはいろんな種類がありますが、Bitcoinでよく使われるのはSHA256(SHA2 256bit)です。", "\nMacだとshasumコマンドを使ってこんな感じになります。1文字変更しただけでまったく異なるハッシュ値になっています。", "\n", "\n\n", "Mac持ってない方は、以下のようなWebサイトでも確認できます。このサイトはメジャーなハッシュ関数の結果が同時に得られます。", "\n", "http://www.blockchain-basics.com/HashFunctions.html", "\n", "\n\n", "\n", "(2)公開鍵暗号方式", "\n\n", "ITの世界で言う「暗号方式」ってのは、あるデータを「鍵」を使ってごにょごにょして意味不明なデータに変換(暗号化）し、「鍵」を知っている人が、その暗号化データから元データを復元する(復号化)っていう、その「ごにょごにょ」の方式です。元データのことを「平文」、暗号化データを「暗号文」と言ったりします。", "\n\n", "その暗号方式の１つである公開鍵暗号方式は「非対称暗号方式」とも呼ばれます。「非対称」ってことは「対称」があるってことで、この「対称」の方は「共通鍵暗号方式」と呼ばれます。", "\n", "\n\n", "この「共通鍵暗号方式」は「鍵配送問題」という根源的な課題があります。", "\n復号して欲しい人に事前に鍵を届けておく必要がある、その「鍵の配送」をどうやって安全に行うか？という課題です。平文を安全に届けるための暗号方式なのに、そのための鍵を安全に届ける方法が課題って面白いですよね。", "\n\n", "で、この鍵配送問題を解決するのが「非対称暗号方式＝公開鍵暗号方式」です。", "\n暗号化と復号化に同じ鍵使っている（対称）から鍵配送問題が起こる訳で、違う鍵を使えば（非対称）良い訳です。うーん、もっとも論を言うのはすごく簡単", "\n", "\n\n", "・図の例：", "\n- 送信者(Aさん)が、鍵ペア・秘密鍵と公開鍵を作成します。", "\n- Aさんは受信者（Bさん）に自分の公開鍵を送っておきます（誰でも見れるよう公開しておいてもOKです）。", "\n- Aさんは自分の秘密鍵を使って暗号文を作成します。", "\n- Aさんは作成した暗号文をBさんに送ります。", "\n- BさんはAさんの公開鍵で暗号文を復号化します。", "\n\n", "あれっ？この例では誰でも暗号文を復号化して見れますね？（Aさんの公開鍵が公開されている場合）", "\nはい、これは元データが確かにAさんによって暗号化されているっていう証明に使う方法なんです。", "\n\n", "二人の秘密にしたいデータを送る時は以下のようにします。", "\n- 受信者(Bさん)が、鍵ペア・秘密鍵と公開鍵を作成します（図では暗号キーと復号キー）。", "\n- Bさんは送信者（Aさん）に自分の公開鍵を送っておきます（誰でも見れるよう公開しておいてもOKです）。", "\n- AさんはBさんの公開鍵を使って暗号文を作成します。", "\n- Aさんは作成した暗号文をBさんに送ります。", "\n- Bさんは自分の秘密鍵で暗号文を復号化します。", "\n\n", "Bさんの秘密鍵を知っているのはBさんだけなので、元データを二人の秘密にできます", "\n\n", "\n", "(3)電子署名", "\n\n", "電子署名とは、文書への押印やサインを行う行為とよく似た機能を持つ公開鍵暗号技術です。", "\n電子署名の機能は電子的なメッセージに対して、", "\n「そのメッセージの作成者は誰か」「そのメッセージが1ビットも改ざんされていない」", "\nという2つを証明することが出来ます。", "\nそしてこの電子署名を作成する人を「署名者」と呼びます。署名者はメッセージと自分の秘密鍵を使って固有の電子署名のデータを作成します。この計算を署名作成と呼びます。", "\nこの電子署名を利用して、メッセージの完全性などを検証するのは第三者で、「署名検証者」といいます。この署名検証者は、メッセージと電子署名に対して署名作成者の公開鍵を使った計算によって電子署名の検証を行います。この計算を署名検証と呼びます。", "\n\n", "以下の図にあるように、元データ(文書)・署名者の公開鍵・電子署名の３点があると、その「電子署名文書」を署名したのが、署名者であることが検証できます。", "\n\n", "Wiki:", "電子署名", "にある図", "\n", "\n\n", "\n", "2.Bitcoinアドレス", "\n\n", "Walletは、まず乱数を発生させて「秘密鍵」を作り、それからペアとなる「公開鍵」を作ります。Bitcoinアドレスはこの「公開鍵」から作成されます。", "\n\n", "\n\n", "もちっと詳しく：", "ビットコインアドレス生成のロジック", "\n", "\n\n", "上はMainnetの一般的なアドレス形式(P2PKH: Pay to Public Key Hash)の場合で、「5.先頭に0x00入れて」はVersion Prefix　(Version Byte)と呼ばれます。Bitcoinアドレスには他の形式もあり、MainnetとTestnetのBitcoinアドレスもこれで分けられています。", "\n\n", "List of address prefixes", "一部抜粋", "\n\n", "\n", "\n", "\n", "アドレス形式", "\n", "Version Prefix", "\n", "Bitcoinアドレスの先頭", "\n", "\n", "\n", "\n", "\n", "P2PKH(Mainnet)", "\n", "0x00", "\n", "1", "\n", "\n", "\n", "P2PKH(Testnet)", "\n", "0x6F", "\n", "m or n", "\n", "\n", "\n", "P2SH(Mainnet)", "\n", "0x05", "\n", "3", "\n", "\n", "\n", "P2SH(Testnet)", "\n", "0xCF", "\n", "2", "\n", "\n", "\n", "\n\n", "\n", "3.UTXO", "\n\n", "さて、Bitcoinアドレスの「残高」ですが、普通に考えると「Aさんアドレス：Aさん残高」のような口座残高方式で保持できそうですが、BitcoinではUTXOと呼ぶ自分宛てのTransactionを集計する方法を採用しています(ちなみにEthereumは口座残高方式です）。", "\n\n", "参考：", "UTXO", "\n\n", "UTXOとは、「Unspent Transaction Output」の略で、日本語では「未使用トランザクションアウトプット」などと呼ばれています。これは簡潔に言えば、通帳のようにアカウントの残高をそのままデータとして管理・記録するのではなく、取引データのみに基いて残高を計算して求める方法です。", "\n\n", "Transactionには次章で説明するように「誰から・いくら来たか、誰に・いくら送るか」の情報が含まれます。", "\n\n", "ちょっとホリエモンさんのBitcoinアドレスをExplorerで覗いてみましょう。", "\n", "\n\n", "https://live.blockcypher.com/btc/address/1G2jt5WeGhqWtDKEkcKY2GrZKjfYsuiVxX/", "\n", "\n\n", "左側が「誰から・いくら来たか」で、右側の2つが「誰に・いくら送るか」です。右側の上は(spent)、下は(unspent)となっていて、(unspent)のアドレスは自分のアドレスです。", "\n上の(spent)はすでに誰かに送っていて自分ではもう使えませんが、下の自分に送ったものはまた使えます(unspent)。80円の支払い(spent)に、持っていた１００円で支払って20円のお釣り(unspent)が返ってくるようなイメージです。", "\n\n", "ちなみに、80円の支払い(spent)に、持っていた１００円で支払って「お釣りはいいよ」っていったどうなるでしょう？", "\nBitcoinでは　IN(100円)-OUT(80円)が「手数料(20円)」としてマイナーに支払われます。", "\nホリエモンさんのTransaction例だと、以下が手数料です。", "\n", "0.01859968 - (0.00358838 + 0.015) = 0.0000113", "\n", "\n\n", "マイナーは手数料の多いTransactionを優先してBlockに取り込んでマイニングします。つまり手数料の多いTransactionは早めにBlockchainに書き込まれます。", "\nチップが多いとサービスが良いって感じで、ここもインセンティブが効いています", "\n\n", "この(unspent)を、UTXO(Unspent Transaction Output)と呼び、このUTXOの合計がそのBitcoinアドレスの「残高」になります。", "\n\n", "\n\n", "\n", "4.Transactionの構造", "\n\n", "Transactionには複数の入力(使えるUTXO)と、複数の出力（誰にいくら送るか）を指定する以下のような構造になっています。", "\n\n", "参考：", "ビットコイン（ブロックチェーン）", "\n", "\n", "\n", "\n\n", "このデータ構造で、以下のようなTransaction間のINPUTとOUTPUTの関係を表現できるようになっています。", "\n", "\n\n", "\n", "5.送金処理", "\n\n", "前々回", "にこんなざっくり説明をしました。", "\n", "\n\n", "送金者(Aさん)が自分のUTXOを送金額＋手数料分集めてINPUTにセットし、受領者(Bさん)のBitcoinアドレスと送金額をOUTPUTにセットします。", "\n\n", "このOUTPUT側には受領者のBitcoinアドレスをセットしています（scriptPubKey)。", "\nINPUT側には、対象UTXOの識別子(Transaction ID)と自分の電子鍵で作った署名データと自分の公開鍵をセットします(scriptSig)。", "\n\n", "これって何やってんでしょう？？", "\nこれはAさんが作成したTransactionを受け取ったNodeに、そのTransactionを「検証」してもらうためのデータ設定なんです。", "\n\n", "さっき出てきた以下図で考えましょう(説明上手数料は0とします）。", "\n", "\n\n", "・INPUT#0", "\n\n", "\n", "\n", "\n", "データ項目", "\n", "設定値", "\n", "\n", "\n", "\n", "\n", "トランザクションハッシュ", "\n", "UTXO1のTransaction ID", "\n", "\n", "\n", "出力番号", "\n", "０から始まる連番、最初なので0", "\n", "\n", "\n", "署名スクリプト", "\n", "Aさんの公開鍵と自分の秘密鍵で作成する署名データ", "\n", "\n", "\n", "\n\n", "署名対象データは署名スクリプトを除いたTransactionデータ全体です。", "\n\n", "・OUTPUT#0", "\n\n", "\n", "\n", "\n", "データ項目", "\n", "設定値", "\n", "\n", "\n", "\n", "\n", "出金学", "\n", "3BTC", "\n", "\n", "\n", "出金先を示すスクリプト", "\n", "BさんのBitcoinアドレス", "\n", "\n", "\n", "\n\n", "・OUTPUT#1", "\n\n", "\n", "\n", "\n", "データ項目", "\n", "設定値", "\n", "\n", "\n", "\n", "\n", "出金学", "\n", "2BTC", "\n", "\n", "\n", "出金先を示すスクリプト", "\n", "AさんのBitcoinアドレス", "\n", "\n", "\n", "\n\n", "このTransactionを受け取ったNodeは以下のような検証を行ないます。", "\n\n", "・INPUT#0の署名スクリプト内の公開鍵からAさんBitcoinアドレスの確認", "\n・INPUT#0の署名スクリプト内の署名データ・公開鍵から、このTransactionがAさんによって作成されたことの確認(電子署名は、署名データ・公開鍵・元データがあれば検証できることを思い出しましょう。)", "\n\n", "言い換えると各Nodeが行う検証とは、このTransactionは、間違いなくAさんが、Aさん宛てのUTXO(5BTC)を使って、Bさん(3BTC)とAさん(2BTC)に送金しようとしているってことの確認です。", "\nNodeは検証OKであれば、送信元にOK返信して他のNodeにそのTransactionを転送しますので、転送と検証を繰り返してTransacrionは全P2Pネットワークに伝搬されます。", "\n検証NGの場合は、Nodeは送信元にNG返信して転送は行いません。このため不正なTransactionによる攻撃をうけてもDOS耐性があります。", "\n\n", "電子署名を使って、自分宛てのUTXO(残高)をロック解除して、送金先・送金金額をロックするってのが、WalletがやっているTransaction作成なんですねー。すっごく面白い！！", "\n\n", "でも、この検証だけだと、Aさんが同じUTXO1(5BTC)を別のCさんに送金する署名検証OKなTransactionも作成できますよね（二重支払い問題）。", "\n次回はこの二重支払い問題を解決するBlockchainについて説明します。", "\n\n", "Enjoy", "\n"], "code": []},
{"title": ["THETAプラグインでマイクを使って録音する #thetaplugin"], "body": ["リコーの ", "@kushimoto", " です。", "\n\n", "いきなりですが、", "RICOH THETA V", "は、AndroidベースのOSなので、アプリをインストールすることで機能拡張でき、THETA界隈ではアプリのことをプラグインと呼んでいます。", "\n\n", "プラグインを開発してみたいという方はまずは「", "THETAプラグインパートナープログラムはじめました", "」や「", "【THETAプラグイン開発】THETAを開発者モードにする手順", "」をご覧ください。", "\n\n", "この記事では、THETAプラグインでマイクを使って録音する方法を紹介します。", "\n\n", "\n", "ポイント", "\n\n", "ポイントとしては以下の2点です。", "\n\n", "\n", "モノラルで録音するように設定する", "\n", "オーディオ設定を変更する権限を追加する", "\n", "\n\n", "\n", "1. モノラルで録音するように設定する", "\n\n", "THETA Vは4chマイクによる360°空間音声の記録が可能です。", "\n", "Web API", "を使って動画撮影すると空間音声付きの動画を取得できますし、", "Camera API", "を使って動画撮影すると空間音声のwavファイルを取得することも可能です（Camera APIに関しては今後コミュニティのメンバーが記事にする予定です）。", "\nただし、スタンダードなAndroidのAPIを利用する場合は、360°空間音声には対応していないため、モノラルで録音する必要があります。", "\n\n", "THETA Vは", "AudioManager", " APIに", "いくつかのパラメータを追加", "しています。", "\n\n", "B-format Selection", "パラメータを利用すると、モノラルで録音するように設定できます。", "\n\n", "モノラルに設定するには、下記のように、マイクを使う前にAudioManagerの", "setParameters()", "に", "\"RicUseBFormat=false\"", "を渡します。", "\n\n", "    ", "AudioManager", " ", "audioManager", " ", "=", " ", "(", "AudioManager", ")", " ", "getSystemService", "(", "Context", ".", "AUDIO_SERVICE", ");", "\n    ", "audioManager", ".", "setParameters", "(", "\"RicUseBFormat=false\"", ");", "\n", "\n\n", "\n", "2. オーディオ設定を変更する権限を追加する", "\n\n", "1.のようにAudioManagerを使ってオーディオの設定を変更するので、", "AndroidManifest.xml", "に下記の権限を追加します（", "RECORD_AUDIO", "も必ず必要になるので記載しました）。", "\n\n", "    ", "<uses-permission", " ", "android:name=", "\"android.permission.MODIFY_AUDIO_SETTINGS\"", " ", "/>", "\n    ", "<uses-permission", " ", "android:name=", "\"android.permission.RECORD_AUDIO\"", " ", "/>", "\n", "\n\n", "\n", "サンプルコード", "\n\n", "以上のポイントをおさえれば、あとは一般的なAndroidアプリ開発と同じです。", "\n\n", "この記事ではサンプルコードとして、", "MediaRecorder", "を使って録音するプラグインを作ってみました。", "\n\n", "ソースコードはこの記事の下部にあります。", "\n\n", "無線ボタンを押すと録音開始し、もう一度無線ボタンを押すと録音終了します。", "\n録音した音声はシャッターボタンを押すと再生できます。", "\n\n", "サンプルコードを動かしていただくとわかるのですが、再生される音量は結構小さめです。", "\n\n", "これはTHETA Vのスピーカーはオリジナルの操作音を再生するためだけに設計されているからです。", "\n\n", "電子音はそれなりに鳴らせますが、今回のような録音した自然音には強くないので、スピーカーを使ったプラグインを作る際にはご注意ください。", "\n\n", "動かしてみるとこんな感じです（↓はYouTubeへのリンクです）。", "\n\n", "\n\n", "\n", "まとめ", "\n\n", "この記事では、THETAでマイクを使う方法を紹介しました。", "\n\n", "THETA V固有のポイントをおさえれば、一般的なAndroidアプリと同じように開発できるので、Android開発者の方は気軽に試してみてはいかがでしょうか。", "\n\n", "THETAプラグイン開発に興味を持たれた方はぜひパートナープログラムにご登録ください！", "\n\n", "なお、登録時に申請したシリアルナンバーのTHETAについてはメーカーサポート対象外になりますので、ご注意ください。", "\n\n", "\n", "パートナープログラムの詳細は", "こちら", "\n", "\n", "登録フォームは", "こちら", "\n", "\n", "\n\n", "また、こちらの", "Twitterアカウント", "でTHETAプラグインに関する情報を発信していますので、フォローお願いします。", "\n\n", "\n", "ソースコード", "\n\n", "\n", "MainActivity.java", "\n", "package", " ", "com", ".", "theta360", ".", "pluginapplication", ";", "\n\n", "import", " ", "android.content.Context", ";", "\n", "import", " ", "android.media.AudioAttributes", ";", "\n", "import", " ", "android.media.AudioManager", ";", "\n", "import", " ", "android.media.MediaPlayer", ";", "\n", "import", " ", "android.media.MediaPlayer.OnCompletionListener", ";", "\n", "import", " ", "android.media.MediaPlayer.OnPreparedListener", ";", "\n", "import", " ", "android.media.MediaRecorder", ";", "\n", "import", " ", "android.media.MediaRecorder.AudioEncoder", ";", "\n", "import", " ", "android.media.MediaRecorder.AudioSource", ";", "\n", "import", " ", "android.media.MediaRecorder.OutputFormat", ";", "\n", "import", " ", "android.os.AsyncTask", ";", "\n", "import", " ", "android.os.Bundle", ";", "\n", "import", " ", "android.util.Log", ";", "\n", "import", " ", "android.view.KeyEvent", ";", "\n", "import", " ", "com.theta360.pluginlibrary.activity.PluginActivity", ";", "\n", "import", " ", "com.theta360.pluginlibrary.callback.KeyCallback", ";", "\n", "import", " ", "com.theta360.pluginlibrary.receiver.KeyReceiver", ";", "\n", "import", " ", "com.theta360.pluginlibrary.values.LedColor", ";", "\n", "import", " ", "com.theta360.pluginlibrary.values.LedTarget", ";", "\n", "import", " ", "java.io.File", ";", "\n\n", "public", " ", "class", " ", "MainActivity", " ", "extends", " ", "PluginActivity", " ", "{", "\n\n    ", "private", " ", "static", " ", "final", " ", "String", " ", "RECORDER_TAG", " ", "=", " ", "\"Recorder\"", ";", "\n    ", "private", " ", "static", " ", "final", " ", "String", " ", "PLAYER_TAG", " ", "=", " ", "\"Player\"", ";", "\n\n    ", "private", " ", "boolean", " ", "isRecording", " ", "=", " ", "false", ";", "\n    ", "private", " ", "MediaRecorder", " ", "mediaRecorder", ";", "\n    ", "private", " ", "String", " ", "soundFilePath", ";", "\n\n    ", "@Override", "\n    ", "protected", " ", "void", " ", "onCreate", "(", "Bundle", " ", "savedInstanceState", ")", " ", "{", "\n        ", "super", ".", "onCreate", "(", "savedInstanceState", ");", "\n        ", "setContentView", "(", "R", ".", "layout", ".", "activity_main", ");", "\n\n        ", "soundFilePath", " ", "=", " ", "getFilesDir", "()", " ", "+", " ", "File", ".", "separator", " ", "+", " ", "\"mySound.wav\"", ";", "\n\n        ", "setKeyCallback", "(", "new", " ", "KeyCallback", "()", " ", "{", "\n            ", "@Override", "\n            ", "public", " ", "void", " ", "onKeyDown", "(", "int", " ", "keyCode", ",", " ", "KeyEvent", " ", "event", ")", " ", "{", "\n                ", "if", " ", "(", "keyCode", " ", "==", " ", "KeyReceiver", ".", "KEYCODE_WLAN_ON_OFF", ")", " ", "{", "\n                    ", "if", " ", "(!", "isRecording", ")", " ", "{", "\n                        ", "startRecorder", "();", "\n                        ", "notificationLedBlink", "(", "LedTarget", ".", "LED7", ",", " ", "LedColor", ".", "RED", ",", " ", "2000", ");", "\n                    ", "}", " ", "else", " ", "{", "\n                        ", "stopRecorder", "();", "\n                        ", "notificationLedHide", "(", "LedTarget", ".", "LED7", ");", "\n                    ", "}", "\n                ", "}", " ", "else", " ", "if", " ", "(", "keyCode", " ", "==", " ", "KeyReceiver", ".", "KEYCODE_CAMERA", " ", "&&", " ", "!", "isRecording", ")", " ", "{", "\n                    ", "startPlayer", "();", "\n                ", "}", "\n            ", "}", "\n\n            ", "@Override", "\n            ", "public", " ", "void", " ", "onKeyUp", "(", "int", " ", "keyCode", ",", " ", "KeyEvent", " ", "event", ")", " ", "{", "\n            ", "}", "\n\n            ", "@Override", "\n            ", "public", " ", "void", " ", "onKeyLongPress", "(", "int", " ", "keyCode", ",", " ", "KeyEvent", " ", "event", ")", " ", "{", "\n            ", "}", "\n        ", "});", "\n    ", "}", "\n\n    ", "@Override", "\n    ", "protected", " ", "void", " ", "onPause", "()", " ", "{", "\n        ", "super", ".", "onPause", "();", "\n        ", "releaseMediaRecorder", "();", "\n    ", "}", "\n\n    ", "private", " ", "void", " ", "startRecorder", "()", " ", "{", "\n        ", "new", " ", "MediaRecorderPrepareTask", "().", "execute", "();", "\n    ", "}", "\n\n    ", "private", " ", "void", " ", "stopRecorder", "()", " ", "{", "\n        ", "try", " ", "{", "\n            ", "mediaRecorder", ".", "stop", "();", "\n        ", "}", " ", "catch", " ", "(", "RuntimeException", " ", "e", ")", " ", "{", "\n            ", "Log", ".", "d", "(", "RECORDER_TAG", ",", " ", "\"RuntimeException: stop() is called immediately after start()\"", ");", "\n            ", "deleteSoundFile", "();", "\n        ", "}", " ", "finally", " ", "{", "\n            ", "isRecording", " ", "=", " ", "false", ";", "\n            ", "releaseMediaRecorder", "();", "\n        ", "}", "\n        ", "Log", ".", "d", "(", "RECORDER_TAG", ",", " ", "\"Stop\"", ");", "\n    ", "}", "\n\n    ", "private", " ", "void", " ", "startPlayer", "()", " ", "{", "\n        ", "File", " ", "file", " ", "=", " ", "new", " ", "File", "(", "soundFilePath", ");", "\n        ", "if", " ", "(!", "file", ".", "exists", "())", " ", "{", "\n            ", "return", ";", "\n        ", "}", "\n        ", "file", " ", "=", " ", "null", ";", "\n\n        ", "AudioManager", " ", "audioManager", " ", "=", " ", "(", "AudioManager", ")", " ", "getSystemService", "(", "Context", ".", "AUDIO_SERVICE", ");", "\n        ", "int", " ", "maxVol", " ", "=", " ", "audioManager", ".", "getStreamMaxVolume", "(", "AudioManager", ".", "STREAM_MUSIC", ");", "\n        ", "audioManager", ".", "setStreamVolume", "(", "AudioManager", ".", "STREAM_MUSIC", ",", " ", "maxVol", ",", " ", "0", ");", "\n\n        ", "MediaPlayer", " ", "mediaPlayer", " ", "=", " ", "new", " ", "MediaPlayer", "();", "\n        ", "AudioAttributes", " ", "attributes", " ", "=", " ", "new", " ", "AudioAttributes", ".", "Builder", "()", "\n                ", ".", "setUsage", "(", "AudioAttributes", ".", "USAGE_MEDIA", ")", "\n                ", ".", "setContentType", "(", "AudioAttributes", ".", "CONTENT_TYPE_MUSIC", ")", "\n                ", ".", "build", "();", "\n        ", "try", " ", "{", "\n            ", "mediaPlayer", ".", "setAudioAttributes", "(", "attributes", ");", "\n            ", "mediaPlayer", ".", "setDataSource", "(", "soundFilePath", ");", "\n            ", "mediaPlayer", ".", "setVolume", "(", "1.0f", ",", " ", "1.0f", ");", "\n            ", "mediaPlayer", ".", "setOnCompletionListener", "(", "new", " ", "OnCompletionListener", "()", " ", "{", "\n                ", "@Override", "\n                ", "public", " ", "void", " ", "onCompletion", "(", "MediaPlayer", " ", "mp", ")", " ", "{", "\n                    ", "mp", ".", "release", "();", "\n                ", "}", "\n            ", "});", "\n            ", "mediaPlayer", ".", "setOnPreparedListener", "(", "new", " ", "OnPreparedListener", "()", " ", "{", "\n                ", "@Override", "\n                ", "public", " ", "void", " ", "onPrepared", "(", "MediaPlayer", " ", "mp", ")", " ", "{", "\n                    ", "mp", ".", "start", "();", "\n                ", "}", "\n            ", "});", "\n            ", "mediaPlayer", ".", "prepare", "();", "\n            ", "Log", ".", "d", "(", "PLAYER_TAG", ",", " ", "\"Start\"", ");", "\n        ", "}", " ", "catch", " ", "(", "Exception", " ", "e", ")", " ", "{", "\n            ", "Log", ".", "e", "(", "RECORDER_TAG", ",", " ", "\"Exception starting MediaPlayer: \"", " ", "+", " ", "e", ".", "getMessage", "());", "\n            ", "mediaPlayer", ".", "release", "();", "\n            ", "notificationError", "(", "\"\"", ");", "\n        ", "}", "\n    ", "}", "\n\n    ", "private", " ", "boolean", " ", "prepareMediaRecorder", "()", " ", "{", "\n        ", "Log", ".", "d", "(", "RECORDER_TAG", ",", " ", "soundFilePath", ");", "\n        ", "deleteSoundFile", "();", "\n\n        ", "AudioManager", " ", "audioManager", " ", "=", " ", "(", "AudioManager", ")", " ", "getSystemService", "(", "Context", ".", "AUDIO_SERVICE", ");", "\n        ", "audioManager", ".", "setParameters", "(", "\"RicUseBFormat=false\"", ");", "\n\n        ", "mediaRecorder", " ", "=", " ", "new", " ", "MediaRecorder", "();", "\n        ", "mediaRecorder", ".", "setAudioSource", "(", "AudioSource", ".", "MIC", ");", "\n        ", "mediaRecorder", ".", "setOutputFormat", "(", "OutputFormat", ".", "DEFAULT", ");", "\n        ", "mediaRecorder", ".", "setAudioEncoder", "(", "AudioEncoder", ".", "DEFAULT", ");", "\n        ", "mediaRecorder", ".", "setOutputFile", "(", "soundFilePath", ");", "\n\n        ", "try", " ", "{", "\n            ", "mediaRecorder", ".", "prepare", "();", "\n        ", "}", " ", "catch", " ", "(", "Exception", " ", "e", ")", " ", "{", "\n            ", "Log", ".", "e", "(", "RECORDER_TAG", ",", " ", "\"Exception preparing MediaRecorder: \"", " ", "+", " ", "e", ".", "getMessage", "());", "\n            ", "releaseMediaRecorder", "();", "\n            ", "return", " ", "false", ";", "\n        ", "}", "\n\n        ", "return", " ", "true", ";", "\n    ", "}", "\n\n    ", "private", " ", "void", " ", "releaseMediaRecorder", "()", " ", "{", "\n        ", "if", " ", "(", "mediaRecorder", " ", "!=", " ", "null", ")", " ", "{", "\n            ", "mediaRecorder", ".", "reset", "();", "\n            ", "mediaRecorder", ".", "release", "();", "\n            ", "mediaRecorder", " ", "=", " ", "null", ";", "\n        ", "}", "\n    ", "}", "\n\n    ", "private", " ", "void", " ", "deleteSoundFile", "()", " ", "{", "\n        ", "File", " ", "file", " ", "=", " ", "new", " ", "File", "(", "soundFilePath", ");", "\n        ", "if", " ", "(", "file", ".", "exists", "())", " ", "{", "\n            ", "file", ".", "delete", "();", "\n        ", "}", "\n        ", "file", " ", "=", " ", "null", ";", "\n    ", "}", "\n\n    ", "/**\n     * Asynchronous task for preparing the {@link android.media.MediaRecorder} since it's a long\n     * blocking operation.\n     */", "\n    ", "private", " ", "class", " ", "MediaRecorderPrepareTask", " ", "extends", " ", "AsyncTask", "<", "Void", ",", " ", "Void", ",", " ", "Boolean", ">", " ", "{", "\n\n        ", "@Override", "\n        ", "protected", " ", "Boolean", " ", "doInBackground", "(", "Void", "...", " ", "voids", ")", " ", "{", "\n            ", "if", " ", "(", "prepareMediaRecorder", "())", " ", "{", "\n                ", "mediaRecorder", ".", "start", "();", "\n                ", "isRecording", " ", "=", " ", "true", ";", "\n                ", "return", " ", "true", ";", "\n            ", "}", "\n            ", "return", " ", "false", ";", "\n        ", "}", "\n\n        ", "@Override", "\n        ", "protected", " ", "void", " ", "onPostExecute", "(", "Boolean", " ", "result", ")", " ", "{", "\n            ", "if", " ", "(!", "result", ")", " ", "{", "\n                ", "Log", ".", "e", "(", "RECORDER_TAG", ",", " ", "\"MediaRecorder prepare failed\"", ");", "\n                ", "notificationError", "(", "\"\"", ");", "\n                ", "return", ";", "\n            ", "}", "\n            ", "Log", ".", "d", "(", "RECORDER_TAG", ",", " ", "\"Start\"", ");", "\n        ", "}", "\n    ", "}", "\n\n", "}", "\n\n", "\n", "\n"], "code": ["    ", "AudioManager", " ", "audioManager", " ", "=", " ", "(", "AudioManager", ")", " ", "getSystemService", "(", "Context", ".", "AUDIO_SERVICE", ");", "\n    ", "audioManager", ".", "setParameters", "(", "\"RicUseBFormat=false\"", ");", "\n", "    ", "<uses-permission", " ", "android:name=", "\"android.permission.MODIFY_AUDIO_SETTINGS\"", " ", "/>", "\n    ", "<uses-permission", " ", "android:name=", "\"android.permission.RECORD_AUDIO\"", " ", "/>", "\n", "package", " ", "com", ".", "theta360", ".", "pluginapplication", ";", "\n\n", "import", " ", "android.content.Context", ";", "\n", "import", " ", "android.media.AudioAttributes", ";", "\n", "import", " ", "android.media.AudioManager", ";", "\n", "import", " ", "android.media.MediaPlayer", ";", "\n", "import", " ", "android.media.MediaPlayer.OnCompletionListener", ";", "\n", "import", " ", "android.media.MediaPlayer.OnPreparedListener", ";", "\n", "import", " ", "android.media.MediaRecorder", ";", "\n", "import", " ", "android.media.MediaRecorder.AudioEncoder", ";", "\n", "import", " ", "android.media.MediaRecorder.AudioSource", ";", "\n", "import", " ", "android.media.MediaRecorder.OutputFormat", ";", "\n", "import", " ", "android.os.AsyncTask", ";", "\n", "import", " ", "android.os.Bundle", ";", "\n", "import", " ", "android.util.Log", ";", "\n", "import", " ", "android.view.KeyEvent", ";", "\n", "import", " ", "com.theta360.pluginlibrary.activity.PluginActivity", ";", "\n", "import", " ", "com.theta360.pluginlibrary.callback.KeyCallback", ";", "\n", "import", " ", "com.theta360.pluginlibrary.receiver.KeyReceiver", ";", "\n", "import", " ", "com.theta360.pluginlibrary.values.LedColor", ";", "\n", "import", " ", "com.theta360.pluginlibrary.values.LedTarget", ";", "\n", "import", " ", "java.io.File", ";", "\n\n", "public", " ", "class", " ", "MainActivity", " ", "extends", " ", "PluginActivity", " ", "{", "\n\n    ", "private", " ", "static", " ", "final", " ", "String", " ", "RECORDER_TAG", " ", "=", " ", "\"Recorder\"", ";", "\n    ", "private", " ", "static", " ", "final", " ", "String", " ", "PLAYER_TAG", " ", "=", " ", "\"Player\"", ";", "\n\n    ", "private", " ", "boolean", " ", "isRecording", " ", "=", " ", "false", ";", "\n    ", "private", " ", "MediaRecorder", " ", "mediaRecorder", ";", "\n    ", "private", " ", "String", " ", "soundFilePath", ";", "\n\n    ", "@Override", "\n    ", "protected", " ", "void", " ", "onCreate", "(", "Bundle", " ", "savedInstanceState", ")", " ", "{", "\n        ", "super", ".", "onCreate", "(", "savedInstanceState", ");", "\n        ", "setContentView", "(", "R", ".", "layout", ".", "activity_main", ");", "\n\n        ", "soundFilePath", " ", "=", " ", "getFilesDir", "()", " ", "+", " ", "File", ".", "separator", " ", "+", " ", "\"mySound.wav\"", ";", "\n\n        ", "setKeyCallback", "(", "new", " ", "KeyCallback", "()", " ", "{", "\n            ", "@Override", "\n            ", "public", " ", "void", " ", "onKeyDown", "(", "int", " ", "keyCode", ",", " ", "KeyEvent", " ", "event", ")", " ", "{", "\n                ", "if", " ", "(", "keyCode", " ", "==", " ", "KeyReceiver", ".", "KEYCODE_WLAN_ON_OFF", ")", " ", "{", "\n                    ", "if", " ", "(!", "isRecording", ")", " ", "{", "\n                        ", "startRecorder", "();", "\n                        ", "notificationLedBlink", "(", "LedTarget", ".", "LED7", ",", " ", "LedColor", ".", "RED", ",", " ", "2000", ");", "\n                    ", "}", " ", "else", " ", "{", "\n                        ", "stopRecorder", "();", "\n                        ", "notificationLedHide", "(", "LedTarget", ".", "LED7", ");", "\n                    ", "}", "\n                ", "}", " ", "else", " ", "if", " ", "(", "keyCode", " ", "==", " ", "KeyReceiver", ".", "KEYCODE_CAMERA", " ", "&&", " ", "!", "isRecording", ")", " ", "{", "\n                    ", "startPlayer", "();", "\n                ", "}", "\n            ", "}", "\n\n            ", "@Override", "\n            ", "public", " ", "void", " ", "onKeyUp", "(", "int", " ", "keyCode", ",", " ", "KeyEvent", " ", "event", ")", " ", "{", "\n            ", "}", "\n\n            ", "@Override", "\n            ", "public", " ", "void", " ", "onKeyLongPress", "(", "int", " ", "keyCode", ",", " ", "KeyEvent", " ", "event", ")", " ", "{", "\n            ", "}", "\n        ", "});", "\n    ", "}", "\n\n    ", "@Override", "\n    ", "protected", " ", "void", " ", "onPause", "()", " ", "{", "\n        ", "super", ".", "onPause", "();", "\n        ", "releaseMediaRecorder", "();", "\n    ", "}", "\n\n    ", "private", " ", "void", " ", "startRecorder", "()", " ", "{", "\n        ", "new", " ", "MediaRecorderPrepareTask", "().", "execute", "();", "\n    ", "}", "\n\n    ", "private", " ", "void", " ", "stopRecorder", "()", " ", "{", "\n        ", "try", " ", "{", "\n            ", "mediaRecorder", ".", "stop", "();", "\n        ", "}", " ", "catch", " ", "(", "RuntimeException", " ", "e", ")", " ", "{", "\n            ", "Log", ".", "d", "(", "RECORDER_TAG", ",", " ", "\"RuntimeException: stop() is called immediately after start()\"", ");", "\n            ", "deleteSoundFile", "();", "\n        ", "}", " ", "finally", " ", "{", "\n            ", "isRecording", " ", "=", " ", "false", ";", "\n            ", "releaseMediaRecorder", "();", "\n        ", "}", "\n        ", "Log", ".", "d", "(", "RECORDER_TAG", ",", " ", "\"Stop\"", ");", "\n    ", "}", "\n\n    ", "private", " ", "void", " ", "startPlayer", "()", " ", "{", "\n        ", "File", " ", "file", " ", "=", " ", "new", " ", "File", "(", "soundFilePath", ");", "\n        ", "if", " ", "(!", "file", ".", "exists", "())", " ", "{", "\n            ", "return", ";", "\n        ", "}", "\n        ", "file", " ", "=", " ", "null", ";", "\n\n        ", "AudioManager", " ", "audioManager", " ", "=", " ", "(", "AudioManager", ")", " ", "getSystemService", "(", "Context", ".", "AUDIO_SERVICE", ");", "\n        ", "int", " ", "maxVol", " ", "=", " ", "audioManager", ".", "getStreamMaxVolume", "(", "AudioManager", ".", "STREAM_MUSIC", ");", "\n        ", "audioManager", ".", "setStreamVolume", "(", "AudioManager", ".", "STREAM_MUSIC", ",", " ", "maxVol", ",", " ", "0", ");", "\n\n        ", "MediaPlayer", " ", "mediaPlayer", " ", "=", " ", "new", " ", "MediaPlayer", "();", "\n        ", "AudioAttributes", " ", "attributes", " ", "=", " ", "new", " ", "AudioAttributes", ".", "Builder", "()", "\n                ", ".", "setUsage", "(", "AudioAttributes", ".", "USAGE_MEDIA", ")", "\n                ", ".", "setContentType", "(", "AudioAttributes", ".", "CONTENT_TYPE_MUSIC", ")", "\n                ", ".", "build", "();", "\n        ", "try", " ", "{", "\n            ", "mediaPlayer", ".", "setAudioAttributes", "(", "attributes", ");", "\n            ", "mediaPlayer", ".", "setDataSource", "(", "soundFilePath", ");", "\n            ", "mediaPlayer", ".", "setVolume", "(", "1.0f", ",", " ", "1.0f", ");", "\n            ", "mediaPlayer", ".", "setOnCompletionListener", "(", "new", " ", "OnCompletionListener", "()", " ", "{", "\n                ", "@Override", "\n                ", "public", " ", "void", " ", "onCompletion", "(", "MediaPlayer", " ", "mp", ")", " ", "{", "\n                    ", "mp", ".", "release", "();", "\n                ", "}", "\n            ", "});", "\n            ", "mediaPlayer", ".", "setOnPreparedListener", "(", "new", " ", "OnPreparedListener", "()", " ", "{", "\n                ", "@Override", "\n                ", "public", " ", "void", " ", "onPrepared", "(", "MediaPlayer", " ", "mp", ")", " ", "{", "\n                    ", "mp", ".", "start", "();", "\n                ", "}", "\n            ", "});", "\n            ", "mediaPlayer", ".", "prepare", "();", "\n            ", "Log", ".", "d", "(", "PLAYER_TAG", ",", " ", "\"Start\"", ");", "\n        ", "}", " ", "catch", " ", "(", "Exception", " ", "e", ")", " ", "{", "\n            ", "Log", ".", "e", "(", "RECORDER_TAG", ",", " ", "\"Exception starting MediaPlayer: \"", " ", "+", " ", "e", ".", "getMessage", "());", "\n            ", "mediaPlayer", ".", "release", "();", "\n            ", "notificationError", "(", "\"\"", ");", "\n        ", "}", "\n    ", "}", "\n\n    ", "private", " ", "boolean", " ", "prepareMediaRecorder", "()", " ", "{", "\n        ", "Log", ".", "d", "(", "RECORDER_TAG", ",", " ", "soundFilePath", ");", "\n        ", "deleteSoundFile", "();", "\n\n        ", "AudioManager", " ", "audioManager", " ", "=", " ", "(", "AudioManager", ")", " ", "getSystemService", "(", "Context", ".", "AUDIO_SERVICE", ");", "\n        ", "audioManager", ".", "setParameters", "(", "\"RicUseBFormat=false\"", ");", "\n\n        ", "mediaRecorder", " ", "=", " ", "new", " ", "MediaRecorder", "();", "\n        ", "mediaRecorder", ".", "setAudioSource", "(", "AudioSource", ".", "MIC", ");", "\n        ", "mediaRecorder", ".", "setOutputFormat", "(", "OutputFormat", ".", "DEFAULT", ");", "\n        ", "mediaRecorder", ".", "setAudioEncoder", "(", "AudioEncoder", ".", "DEFAULT", ");", "\n        ", "mediaRecorder", ".", "setOutputFile", "(", "soundFilePath", ");", "\n\n        ", "try", " ", "{", "\n            ", "mediaRecorder", ".", "prepare", "();", "\n        ", "}", " ", "catch", " ", "(", "Exception", " ", "e", ")", " ", "{", "\n            ", "Log", ".", "e", "(", "RECORDER_TAG", ",", " ", "\"Exception preparing MediaRecorder: \"", " ", "+", " ", "e", ".", "getMessage", "());", "\n            ", "releaseMediaRecorder", "();", "\n            ", "return", " ", "false", ";", "\n        ", "}", "\n\n        ", "return", " ", "true", ";", "\n    ", "}", "\n\n    ", "private", " ", "void", " ", "releaseMediaRecorder", "()", " ", "{", "\n        ", "if", " ", "(", "mediaRecorder", " ", "!=", " ", "null", ")", " ", "{", "\n            ", "mediaRecorder", ".", "reset", "();", "\n            ", "mediaRecorder", ".", "release", "();", "\n            ", "mediaRecorder", " ", "=", " ", "null", ";", "\n        ", "}", "\n    ", "}", "\n\n    ", "private", " ", "void", " ", "deleteSoundFile", "()", " ", "{", "\n        ", "File", " ", "file", " ", "=", " ", "new", " ", "File", "(", "soundFilePath", ");", "\n        ", "if", " ", "(", "file", ".", "exists", "())", " ", "{", "\n            ", "file", ".", "delete", "();", "\n        ", "}", "\n        ", "file", " ", "=", " ", "null", ";", "\n    ", "}", "\n\n    ", "/**\n     * Asynchronous task for preparing the {@link android.media.MediaRecorder} since it's a long\n     * blocking operation.\n     */", "\n    ", "private", " ", "class", " ", "MediaRecorderPrepareTask", " ", "extends", " ", "AsyncTask", "<", "Void", ",", " ", "Void", ",", " ", "Boolean", ">", " ", "{", "\n\n        ", "@Override", "\n        ", "protected", " ", "Boolean", " ", "doInBackground", "(", "Void", "...", " ", "voids", ")", " ", "{", "\n            ", "if", " ", "(", "prepareMediaRecorder", "())", " ", "{", "\n                ", "mediaRecorder", ".", "start", "();", "\n                ", "isRecording", " ", "=", " ", "true", ";", "\n                ", "return", " ", "true", ";", "\n            ", "}", "\n            ", "return", " ", "false", ";", "\n        ", "}", "\n\n        ", "@Override", "\n        ", "protected", " ", "void", " ", "onPostExecute", "(", "Boolean", " ", "result", ")", " ", "{", "\n            ", "if", " ", "(!", "result", ")", " ", "{", "\n                ", "Log", ".", "e", "(", "RECORDER_TAG", ",", " ", "\"MediaRecorder prepare failed\"", ");", "\n                ", "notificationError", "(", "\"\"", ");", "\n                ", "return", ";", "\n            ", "}", "\n            ", "Log", ".", "d", "(", "RECORDER_TAG", ",", " ", "\"Start\"", ");", "\n        ", "}", "\n    ", "}", "\n\n", "}", "\n\n"]},
{"title": ["Google Sign-InのイケてないところをRxSwiftで解決する"], "body": ["開発中のプロジェクトでGoogle APIを使うことになり、アカウント管理を含めGoogleサインインを導入しました。", "\nただ、その際に公式のframeworkのまま使おうとした場合に、今回の要件上イケてないと感じた部分がいくつかあったため、", "\nRxSwiftを用いた拡張フレームワークを作成しました。", "\n\n", "今回の実装のサンプルコードはオープンソースで公開しました。", "\n\n", "\n", "https://github.com/kazumanagano/GIDSignIn-Rx", "\n", "\n\n", "\n", "前提条件", "\n\n", "\n", "Swift 4.2", "\n", "Xcode 10.0", "\n", "公式ドキュメント通りに動かすことはできてる前提( Cloud Console上の設定、ライブラリ導入など)", "\n", "\n\n", "\n", "導入方法で参考にしたもの", "\n\n", "\n", "\n", "Qiita: Google Sign-In for iOS", " ", "@shin1ogawa", "\n", "\n", "Google公式ドキュメント", "\n", "\n\n", "\n", "イケてないポイント", "\n\n", "今回取り組んだイケてないポイントは次の２点です。", "\n\n", "　", "　1. DelegateじゃなくRxで非同期に処理を扱いたい", "\n　", "　2. signInSilently() できない！？(扱いづらい）", "\n\n", "\n", "1. DelegateじゃなくRxで非同期に処理を扱いたい", "\n\n", "GoogleSignIn Framework", "はDelegateを利用し、ログインアクションの結果を受け取る仕様になっています。", "\nしかし今回のアプリではRxSwiftを使用しMVVMで実装を行なっていたため、できればログインアクションをリアクティブに", "\n行い、関連処理をVM内のメソッドチェーンでコンパクトに処理したいと思いました。", "\n\n", "RxSwiftにはDelegateメソッドを扱うための", "DelegateProxy", "というものがあったので今回 ", "@tako3a の記事", "\nと", "RxSwiftのGithub上に上がっていたIssue", "を参考にGIDSignInクラスのRxエクステンションを実装しました。", "\n\n", "\n", "GIDSignInDelegateのDelegateProxyを実装", "\n\n", "\n", "GIDSignIn+Rx.swift", "\n", " ", "import", " ", "GoogleSignIn", "\n ", "import", " ", "RxSwift", "\n ", "import", " ", "RxCocoa", "\n\n ", "class", " ", "RxGIDSignInDelegateProxy", ":", " ", "DelegateProxy", "<", "GIDSignIn", ",", " ", "GIDSignInDelegate", ">", ",", "GIDSignInDelegate", "  ", "{", "\n     ", "public", " ", "weak", " ", "private(set)", " ", "var", " ", "gidSignIn", ":", " ", "GIDSignIn", "?", "\n     ", "var", " ", "signInSubject", " ", "=", " ", "PublishSubject", "<", "GIDGoogleUser", ">", "()", "\n\n     ", "init", "(", "gidSignIn", ":", " ", "ParentObject", ")", " ", "{", "\n         ", "self", ".", "gidSignIn", " ", "=", " ", "gidSignIn", "\n         ", "super", ".", "init", "(", "parentObject", ":", " ", "gidSignIn", ",", " ", "delegateProxy", ":", " ", "RxGIDSignInDelegateProxy", ".", "self", ")", "\n     ", "}", "\n\n     ", "func", " ", "sign", "(", "_", " ", "signIn", ":", " ", "GIDSignIn", "!", ",", " ", "didSignInFor", " ", "user", ":", " ", "GIDGoogleUser", "!", ",", " ", "withError", " ", "error", ":", " ", "Error", "!", ")", " ", "{", "\n         ", "if", " ", "let", " ", "u", " ", "=", " ", "user", " ", "{", "\n             ", "signInSubject", ".", "on", "(", ".", "next", "(", "u", "))", "\n         ", "}", " ", "else", " ", "if", " ", "let", " ", "e", " ", "=", " ", "error", " ", "{", "\n             ", "signInSubject", ".", "on", "(", ".", "error", "(", "e", "))", "\n         ", "}", "\n         ", "_forwardToDelegate", "?", ".", "sign", "(", "signIn", ",", " ", "didSignInFor", ":", "user", ",", " ", "withError", ":", " ", "error", ")", "\n     ", "}", " \n\n     ", "deinit", " ", "{", "\n         ", "signInSubject", ".", "on", "(", ".", "completed", ")", "\n     ", "}", "\n ", "}", "\n\n ", "extension", " ", "RxGIDSignInDelegateProxy", " ", ":", "DelegateProxyType", " ", "{", "\n     ", "static", " ", "func", " ", "registerKnownImplementations", "()", " ", "{", "\n         ", "register", " ", "{", " ", "RxGIDSignInDelegateProxy", "(", "gidSignIn", ":", " ", "$0", ")", " ", "}", "\n     ", "}", "\n\n     ", "static", " ", "func", " ", "currentDelegate", "(", "for", " ", "object", ":", " ", "GIDSignIn", ")", " ", "->", " ", "GIDSignInDelegate", "?", " ", "{", "\n         ", "return", " ", "object", ".", "delegate", "\n     ", "}", "\n\n     ", "static", " ", "func", " ", "setCurrentDelegate", "(", "_", " ", "delegate", ":", " ", "GIDSignInDelegate", "?,", " ", "to", " ", "object", ":", " ", "GIDSignIn", ")", " ", "{", "\n         ", "object", ".", "delegate", " ", "=", " ", "delegate", "\n     ", "}", "\n ", "}", "\n\n ", "extension", " ", "Reactive", " ", "where", " ", "Base", ":", " ", "GIDSignIn", " ", "{", "\n     ", "public", " ", "var", " ", "delegate", ":", " ", "DelegateProxy", "<", "GIDSignIn", ",", " ", "GIDSignInDelegate", ">", " ", "{", "\n         ", "return", " ", "self", ".", "gidSignInDelegate", "\n     ", "}", "\n\n     ", "var", " ", "signIn", ":", " ", "Observable", "<", "GIDGoogleUser", ">", " ", "{", "\n         ", "let", " ", "proxy", " ", "=", " ", "self", ".", "gidSignInDelegate", "\n         ", "proxy", ".", "signInSubject", " ", "=", " ", "PublishSubject", "<", "GIDGoogleUser", ">", "()", "\n         ", "return", " ", "proxy", ".", "signInSubject", "\n             ", ".", "asObservable", "()", "\n             ", ".", "do", "(", "onSubscribed", ":", " ", "{", "\n                 ", "proxy", ".", "gidSignIn", "?", ".", "signIn", "()", "\n             ", "})", "\n             ", ".", "take", "(", "1", ")", "\n             ", ".", "asObservable", "()", "\n     ", "}", "\n ", "}", "\n", "\n", "\n\n", "細かい説明は省きますが、DelegateProxyとして", "RxGIDSignInDelegateProxy", "を定義し、", "\n", "signInSubject:PublishSubject<GIDGoogleUser>", "を変数として持たせます。", "\nReactive Extention上で", "\n", "signIn: Observable<GIDGoogleUser>", "\nとしてそれをラップした上で", "do", "メソッドとして", "GIDSignInクラスのsignIn()", "を呼んでいます。", "\n利用する側としては", "\n\n", "\n", "LoginVIewModel.swift", "\n", "let", " ", "login", " ", "=", " ", "GIDSignIn", ".", "sharedInstance", "()", ".", "rx", ".", "login", "\n                ", ".", "flatMap", "({", " ", "(", "user", ":", "GIDUser", ")", " ", "in", "\n                  ", "//GIDUserを使ってなんか処理", "\n                ", "})", "\n                ", ".", "share", "(", "replay", ":", " ", "1", ")", "\n", "\n", "\n\n", "のようにDelegateの実装なしに晴れてメソッドチェーンを繋げていくことができます！", "\n\n", "\n", "2. signInSilently() できない！？(扱いづらい）", "\n\n", "無事にスマートなログイン処理が実装できたのですが、この後も問題が発覚しました。", "\nログインを終えたユーザにはGIDSignInクラスには", "signInSilently", "というメソッドが用意されています。", "\n\n", "\n", "// Attempts to sign in a previously authenticated user without interaction.  The delegate will be", "\n// called at the end of this process indicating success or failure.", "\n- (void)signInSilently;", "\n", "\n\n", "ところが下記のコードではユーザ情報が取得できませんでした。", "\n\n", "\n", "AppDelegate.swift", "\n", " ", "import", " ", "UIKit", "\n ", "import", " ", "GoogleSignIn", "\n\n ", "@UIApplicationMain", "\n ", "class", " ", "AppDelegate", ":", " ", "UIResponder", ",", " ", "UIApplicationDelegate", "  ", "{", "\n\n    ", "func", " ", "application", "(", "_", " ", "application", ":", " ", "UIApplication", ",", " ", "didFinishLaunchingWithOptions", " \n                                ", "launchOptions", ":", " ", "[", "UIApplication", ".", "LaunchOptionsKey", ":", " ", "Any", "]?)", " ", "->", " ", "Bool", " ", "{", "\n         ", "GIDSignIn", ".", "sharedInstance", "()", ".", "clientID", " ", "=", " ", "\"your client ID\"", "\n         ", "GIDSignIn", ".", "sharedInstance", "()", ".", "scopes", " ", "=", " ", "[", "\"your scopes\"", "]", "\n\n         ", "GIDSignIn", ".", "sharedInstance", "()", ".", "signInSilently", "()", "\n\n         ", "//ログインを１度した後再度起動するとtrueが返ってくる", "\n         ", "if", " ", "GIDSignIn", ".", "sharedInstance", "()", ".", "hasAuthInKeychain", "()", " ", "{", "\n             ", "print", "(", "GIDSignIn", ".", "sharedInstance", "()?", ".", "currentUser", ")", "\n             ", "//なぜか常にnil。。", "\n         ", "}", "\n\n         ", "return", " ", "true", "\n     ", "}", "\n", "\n", "\n\n", "currentUser", "を呼ぶタイミングを遅延させたりいろいろと試してみましたが常にnilが返ってきてしまいます。", "\nこの現象は下記のStackOverFlowでも報告されていました。", "\n", "GIDSignIn.sharedInstance().currentUser nil when relaunching app", "\n\n", "\n", "解決策", "\n\n", "類似のStackOverFlowを探っていくと以下の情報を見つけました", "\n", "Swift+GIDSignIn - hasAuthInKeyChain returns true but currentUser is still nil after calling signInSilently", "\n\n", "\n", "I had a similar issue. First I thought it was a timing issue. By invoking signIn.signInSilently() after fully loading the root viewController it did work. I am now 99% sure I solved it by executing signIn.signInSilently() on the main thread through", "\n", "\n\n", "どうやら　", "メインスレッドで動作させた方が良さそう", "だと言っています。", "\nまた、 仕様で書かれている通りDelegateメソッドで結果を受け取った方が確実だと考えました。", "\nということで、", "signin()", "メソッドと同様に、ViewController上から", "Rxエクステンション", "として実装しました。", "\n\n", "\n", "GIDSignInDelegateのDelegateProxyを実装", "\n\n", "\n", "GIDSignIn+Rx.swift", "\n", "\n ", "extension", " ", "Reactive", " ", "where", " ", "Base", ":", " ", "GIDSignIn", " ", "{", "\n     ", "public", " ", "var", " ", "delegate", ":", " ", "DelegateProxy", "<", "GIDSignIn", ",", " ", "GIDSignInDelegate", ">", " ", "{", "\n         ", "return", " ", "self", ".", "gidSignInDelegate", "\n     ", "}", "\n\n     ", "var", " ", "signIn", ":", " ", "Observable", "<", "GIDGoogleUser", ">", " ", "{", "\n         ", "let", " ", "proxy", " ", "=", " ", "self", ".", "gidSignInDelegate", "\n         ", "proxy", ".", "signInSubject", " ", "=", " ", "PublishSubject", "<", "GIDGoogleUser", ">", "()", "\n         ", "return", " ", "proxy", ".", "signInSubject", "\n             ", ".", "asObservable", "()", "\n             ", ".", "do", "(", "onSubscribed", ":", " ", "{", "\n                 ", "proxy", ".", "gidSignIn", "?", ".", "signIn", "()", "\n             ", "})", "\n             ", ".", "take", "(", "1", ")", "\n             ", ".", "asObservable", "()", "\n     ", "}", "\n\n     ", "//下記を追加実装", "\n     ", "var", " ", "signInSilent", ":", " ", "Observable", "<", "GIDGoogleUser", ">", " ", "{", "\n        ", "let", " ", "proxy", " ", "=", " ", "self", ".", "gidSignInDelegate", "\n        ", "proxy", ".", "signInSubject", " ", "=", " ", "PublishSubject", "<", "GIDGoogleUser", ">", "()", "\n        ", "return", " ", "proxy", ".", "signInSubject", "\n            ", ".", "asObservable", "()", "\n            ", ".", "do", "(", "onSubscribed", ":", " ", "{", "\n                ", "proxy", ".", "gidSignIn", "?", ".", "signInSilently", "()", "\n            ", "})", "\n            ", ".", "take", "(", "1", ")", "\n            ", ".", "asObservable", "()", "\n    ", "}", "\n\n ", "}", "\n", "\n", "\n\n", "これでユーザ情報が必要な場面で", "signIn()", "と同様に呼び出すことでGIDUserを取得することができるようになりました。", "\n\n", "今回の実装のサンプルコード", "\n", "https://github.com/kazumanagano/GIDSignIn-Rx", "\n"], "code": [" ", "import", " ", "GoogleSignIn", "\n ", "import", " ", "RxSwift", "\n ", "import", " ", "RxCocoa", "\n\n ", "class", " ", "RxGIDSignInDelegateProxy", ":", " ", "DelegateProxy", "<", "GIDSignIn", ",", " ", "GIDSignInDelegate", ">", ",", "GIDSignInDelegate", "  ", "{", "\n     ", "public", " ", "weak", " ", "private(set)", " ", "var", " ", "gidSignIn", ":", " ", "GIDSignIn", "?", "\n     ", "var", " ", "signInSubject", " ", "=", " ", "PublishSubject", "<", "GIDGoogleUser", ">", "()", "\n\n     ", "init", "(", "gidSignIn", ":", " ", "ParentObject", ")", " ", "{", "\n         ", "self", ".", "gidSignIn", " ", "=", " ", "gidSignIn", "\n         ", "super", ".", "init", "(", "parentObject", ":", " ", "gidSignIn", ",", " ", "delegateProxy", ":", " ", "RxGIDSignInDelegateProxy", ".", "self", ")", "\n     ", "}", "\n\n     ", "func", " ", "sign", "(", "_", " ", "signIn", ":", " ", "GIDSignIn", "!", ",", " ", "didSignInFor", " ", "user", ":", " ", "GIDGoogleUser", "!", ",", " ", "withError", " ", "error", ":", " ", "Error", "!", ")", " ", "{", "\n         ", "if", " ", "let", " ", "u", " ", "=", " ", "user", " ", "{", "\n             ", "signInSubject", ".", "on", "(", ".", "next", "(", "u", "))", "\n         ", "}", " ", "else", " ", "if", " ", "let", " ", "e", " ", "=", " ", "error", " ", "{", "\n             ", "signInSubject", ".", "on", "(", ".", "error", "(", "e", "))", "\n         ", "}", "\n         ", "_forwardToDelegate", "?", ".", "sign", "(", "signIn", ",", " ", "didSignInFor", ":", "user", ",", " ", "withError", ":", " ", "error", ")", "\n     ", "}", " \n\n     ", "deinit", " ", "{", "\n         ", "signInSubject", ".", "on", "(", ".", "completed", ")", "\n     ", "}", "\n ", "}", "\n\n ", "extension", " ", "RxGIDSignInDelegateProxy", " ", ":", "DelegateProxyType", " ", "{", "\n     ", "static", " ", "func", " ", "registerKnownImplementations", "()", " ", "{", "\n         ", "register", " ", "{", " ", "RxGIDSignInDelegateProxy", "(", "gidSignIn", ":", " ", "$0", ")", " ", "}", "\n     ", "}", "\n\n     ", "static", " ", "func", " ", "currentDelegate", "(", "for", " ", "object", ":", " ", "GIDSignIn", ")", " ", "->", " ", "GIDSignInDelegate", "?", " ", "{", "\n         ", "return", " ", "object", ".", "delegate", "\n     ", "}", "\n\n     ", "static", " ", "func", " ", "setCurrentDelegate", "(", "_", " ", "delegate", ":", " ", "GIDSignInDelegate", "?,", " ", "to", " ", "object", ":", " ", "GIDSignIn", ")", " ", "{", "\n         ", "object", ".", "delegate", " ", "=", " ", "delegate", "\n     ", "}", "\n ", "}", "\n\n ", "extension", " ", "Reactive", " ", "where", " ", "Base", ":", " ", "GIDSignIn", " ", "{", "\n     ", "public", " ", "var", " ", "delegate", ":", " ", "DelegateProxy", "<", "GIDSignIn", ",", " ", "GIDSignInDelegate", ">", " ", "{", "\n         ", "return", " ", "self", ".", "gidSignInDelegate", "\n     ", "}", "\n\n     ", "var", " ", "signIn", ":", " ", "Observable", "<", "GIDGoogleUser", ">", " ", "{", "\n         ", "let", " ", "proxy", " ", "=", " ", "self", ".", "gidSignInDelegate", "\n         ", "proxy", ".", "signInSubject", " ", "=", " ", "PublishSubject", "<", "GIDGoogleUser", ">", "()", "\n         ", "return", " ", "proxy", ".", "signInSubject", "\n             ", ".", "asObservable", "()", "\n             ", ".", "do", "(", "onSubscribed", ":", " ", "{", "\n                 ", "proxy", ".", "gidSignIn", "?", ".", "signIn", "()", "\n             ", "})", "\n             ", ".", "take", "(", "1", ")", "\n             ", ".", "asObservable", "()", "\n     ", "}", "\n ", "}", "\n", "let", " ", "login", " ", "=", " ", "GIDSignIn", ".", "sharedInstance", "()", ".", "rx", ".", "login", "\n                ", ".", "flatMap", "({", " ", "(", "user", ":", "GIDUser", ")", " ", "in", "\n                  ", "//GIDUserを使ってなんか処理", "\n                ", "})", "\n                ", ".", "share", "(", "replay", ":", " ", "1", ")", "\n", " ", "import", " ", "UIKit", "\n ", "import", " ", "GoogleSignIn", "\n\n ", "@UIApplicationMain", "\n ", "class", " ", "AppDelegate", ":", " ", "UIResponder", ",", " ", "UIApplicationDelegate", "  ", "{", "\n\n    ", "func", " ", "application", "(", "_", " ", "application", ":", " ", "UIApplication", ",", " ", "didFinishLaunchingWithOptions", " \n                                ", "launchOptions", ":", " ", "[", "UIApplication", ".", "LaunchOptionsKey", ":", " ", "Any", "]?)", " ", "->", " ", "Bool", " ", "{", "\n         ", "GIDSignIn", ".", "sharedInstance", "()", ".", "clientID", " ", "=", " ", "\"your client ID\"", "\n         ", "GIDSignIn", ".", "sharedInstance", "()", ".", "scopes", " ", "=", " ", "[", "\"your scopes\"", "]", "\n\n         ", "GIDSignIn", ".", "sharedInstance", "()", ".", "signInSilently", "()", "\n\n         ", "//ログインを１度した後再度起動するとtrueが返ってくる", "\n         ", "if", " ", "GIDSignIn", ".", "sharedInstance", "()", ".", "hasAuthInKeychain", "()", " ", "{", "\n             ", "print", "(", "GIDSignIn", ".", "sharedInstance", "()?", ".", "currentUser", ")", "\n             ", "//なぜか常にnil。。", "\n         ", "}", "\n\n         ", "return", " ", "true", "\n     ", "}", "\n", "\n ", "extension", " ", "Reactive", " ", "where", " ", "Base", ":", " ", "GIDSignIn", " ", "{", "\n     ", "public", " ", "var", " ", "delegate", ":", " ", "DelegateProxy", "<", "GIDSignIn", ",", " ", "GIDSignInDelegate", ">", " ", "{", "\n         ", "return", " ", "self", ".", "gidSignInDelegate", "\n     ", "}", "\n\n     ", "var", " ", "signIn", ":", " ", "Observable", "<", "GIDGoogleUser", ">", " ", "{", "\n         ", "let", " ", "proxy", " ", "=", " ", "self", ".", "gidSignInDelegate", "\n         ", "proxy", ".", "signInSubject", " ", "=", " ", "PublishSubject", "<", "GIDGoogleUser", ">", "()", "\n         ", "return", " ", "proxy", ".", "signInSubject", "\n             ", ".", "asObservable", "()", "\n             ", ".", "do", "(", "onSubscribed", ":", " ", "{", "\n                 ", "proxy", ".", "gidSignIn", "?", ".", "signIn", "()", "\n             ", "})", "\n             ", ".", "take", "(", "1", ")", "\n             ", ".", "asObservable", "()", "\n     ", "}", "\n\n     ", "//下記を追加実装", "\n     ", "var", " ", "signInSilent", ":", " ", "Observable", "<", "GIDGoogleUser", ">", " ", "{", "\n        ", "let", " ", "proxy", " ", "=", " ", "self", ".", "gidSignInDelegate", "\n        ", "proxy", ".", "signInSubject", " ", "=", " ", "PublishSubject", "<", "GIDGoogleUser", ">", "()", "\n        ", "return", " ", "proxy", ".", "signInSubject", "\n            ", ".", "asObservable", "()", "\n            ", ".", "do", "(", "onSubscribed", ":", " ", "{", "\n                ", "proxy", ".", "gidSignIn", "?", ".", "signInSilently", "()", "\n            ", "})", "\n            ", ".", "take", "(", "1", ")", "\n            ", ".", "asObservable", "()", "\n    ", "}", "\n\n ", "}", "\n"]},
{"title": ["rubyとpython数字をゼロで詰めるには：rubyとpythonの両方"], "body": ["rubyやpythonで数字をゼロで詰めたいときがあります。", "\n\n", "たとえば8桁を用意して数字が4桁のとき、左側にゼロを6個出力するとかです。", "\n\n", "00001234", "\n\n", "のように出力したい。", "\n\n", "\n", "rubyの場合", "\n\n", "rubyにはCのsprintf関数ようなメソッドがあって", "\n\n", "str = sprintf(\"%08d\", i)\n", "\n\n", "のように使えます。", "\n\n", "rubyのインタープリターirbで実行しました。", "\n\n", "irb(main):001:0> i=1234\n=> 1234\nirb(main):002:0> sprintf(\"%08d\", i)\n=> \"00001234\"\n", "\n\n", "ほかにも便利と思ったら", "\n\n", "str = \"%08d\" % i\n", "\n\n", "の方法もありました。", "\n\n", "こっちのほうがrubyっぽいですかね。", "\n\n", "irb(main):015:0> \"%08d\" % i\n=> \"00001234\"\n", "\n\n", "\n", "Pythonの場合", "\n\n", "Pythonは、zfillメソッドが使えます。", "\n\n", "i = 1234", "\n\n", "としたあと、iを文字列に変換して", "\n\n", "str(i).zfill(8)\nstr(i).zfill(8)\n", "\n\n", "とします。", "\n\n", "Python3インタープリターで見てみます。", "\n\n", ">>> i=1234\n>>> print(str(i).zfill(8))\n00001234\n", "\n"], "code": ["str = sprintf(\"%08d\", i)\n", "irb(main):001:0> i=1234\n=> 1234\nirb(main):002:0> sprintf(\"%08d\", i)\n=> \"00001234\"\n", "str = \"%08d\" % i\n", "irb(main):015:0> \"%08d\" % i\n=> \"00001234\"\n", "str(i).zfill(8)\nstr(i).zfill(8)\n", ">>> i=1234\n>>> print(str(i).zfill(8))\n00001234\n"]},
{"title": ["エンジニアたった一人で収入3000万に到達した生存戦略について"], "body": ["従業員はただただ自分一人開発の受託など請け負ってる会社ですが、独立してから数年安定して稼いでおります。独立してからの３５歳でひとまず目標の3000万を超えたので自分のエンジニアとしての生存戦略をここらで次の目標に進む前に自分の考えをまとめる上でも残そうと思います。", "\n\n", "\n", "時間を貴重なリソースと考えた戦略", "\n\n", "時間です。とにかく時間に関わることを戦略としてきました。", "\n\n", "\n", "開発のスピードを１番に重視して顧客の時間を創造する", "\n\n", "基本的に新規サービス、新規プロジェクトやスタートアップの方の仕事を引き受けることが多いのですが、私の１番の売りは開発スピードにあります。普通の人が作るより数倍のスピードでアプリをリリースしてきました。", "\n\n", "なぜ重視しているかというと色々なサービスの立ち上げを見てきたせいもあるのですが、本当にサービスを成功させるのはかなり難しいと実感しています。ものすごい成功を収めるサービスや会社もあったのですが、やはり、成功させるには時間や労力を大きく必要とします。", "\n\n", "そこで開発エンジニアとしてできるのは1日1秒でも早く開発を進めることでサービスの試行錯誤する打ち手の数を増やすことで少しでも確率をあげれるのではと考えているからです。", "\n\n", "受託や途中で開発に参画する場合も多いですが、携わるのであれば成功してもらうために全力を注ぎたいと思います。", "\n\n", "ただしただスピードを早く開発すればいいというわけではなく、当然今まで培った技術力はもちろん、開発自体も積極的にアドバイスして、やらないほうがいいことがあれば開発自体をしないようにするなのも進んで提言をします。", "\n\n", "\n", "関わる仕事の人たちの時間を極力奪わないように行動する", "\n\n", "開発のコストで大きな要因を締めるのがコミュニケーションコストです。お互いに連携をしあって開発を進めるのが常ですが、コミュニケーションや自分の仕事の仕方によっては、メンバーの時間を大きく使ってしまったり、することもあります。", "\n\n", "そのため幾らかの指針を自分に設けることでなるべく他のメンバーの時間を奪わないようにするよう心がけています。", "\n\n", "例えば、", "\n\n", "基本的に途中参加の開発の場合、極力質問せずソースコードなどからキャッチアップで済ませる。", "\n\n", "これは新しく入ってきたメンバーに既存のメンバーが色々と教育するコストが通常必要かと思いますが、自分はほぼ自力で解決するようにしています。", "\n\n", "大抵の場合はソースコード読めばだいたい把握してしまえるようになっているため、すぐにタスクをもらって自走して行くことが可能です。", "\n\n", "仕様など質問する場合は、先に仕様案や回答案を考えて一緒に提示して、議論の時間を短縮し、可能であればyesと言わせるだけにする", "\n\n", "他の職種の人がメインで使うツール群もできれば覚えておいて、自分で巻きとれるようにしておく。sketchやphotoshopなど使い方を覚えておいて簡単な画像書き出しを覚えておいたり、開発に関わるツール群を色々触っておいてプロジェクトのメンバーにあったツールの利用を考えておくなどなどです。", "\n\n", "細かい積み重ねですが、これらを気を使うことで他のメンバーが自分のタスクに集中でき、プロジェクト全体のスピードを損なうことがありません。", "\n\n", "\n", "自分を成長させるための戦略", "\n\n", "頼まれた仕事はどこかしらに成長ポイントや新しい点を見つけて基本的になんでもやってみて、自分の成長につなげるようにする", "\n\n", "基本的にお願いされたらいろんな仕事をやってきました。エンジニアの枠を超えて仕事に依頼がきても結構引き受けたりしてきました。セールスエンジニアもやったりしました。その流れか新規事業にいきなり突っ込まれて立ち上げをやったりすることが多くなり、結果今のような働き方になっている気もしますが、あまり臆せずどんなプロジェクトに入っても捌ける実力が自然についた気がします。", "\n\n", "\n", "普段から色々な技術にふれて未知の仕事でも受けてこなせるようにしておく", "\n\n", "開発スピードを売りにしてますが、それでもいろんな案件をスピード重視でこなすには引き受けてから勉強していてはキャッチアップだけで時間が過ぎてしまうことがあるため、普段の勉強は幅広くすることにしています。", "\n\n", "仕事をあまり断らないのと、サービスを作るために必要な技術は端から端までなるべく覚えようというスタンスなので自然とフルスタックになっていました。", "\n\n", "\n", "常に自分に負荷がかかるようにこなす", "\n\n", "スピード重視を売りに仕事をしていると結局無茶を続けることも多くあります。短納期、スケジュールありきでこなすこともしばしばです。体力的にはなかなか厳しいのですが、自分の成長といった面では大きくメリットがあると思っています。", "\n\n", "一番大きいのは毎回時間の制約条件がきびしい開発を続けてると、様々な判断に迫られることが多いのですが、開発に伴う様々な判断をあまり迷うことなく決断できる力が身につきました。プロジェクトを率いるパターンもしばしばありますが、メンバーをリードするための力としては大いに役に立っています。", "\n\n", "\n", "結果", "\n\n", "このような戦略を取ってきて、いつのまにか現在のように平均的なエンジニアの年収よりは幾分多くもらえるようになりました。", "\n\n", "ただ、この戦略できたのはいいですが、今後の目標を立てる上で困ってきたこともあります。", "\n\n", "この点については、また別で書こうと思います。", "\n"], "code": []},
{"title": ["php-master-changes 2018-09-19"], "body": ["\n", "\n", "2018-09-19", "\n\n", "\n", "dstogov: Class constants and default property values can't be IS_REFERENCE anymore.", "\n\n", "\n", "https://github.com/php/php-src/commit/b634ded197f0b79c3c6aa804181b37aeaa15fc58", "\n", "クラス定数とプロパティのデフォルト値は IS_REFERENCE ではないので、参照であればデリファレンスするようになっていたコードを削除", "\n", "\n\n", "\n", "crhg: Fix bug ", "#75533", ": array_reduce is slow when $carry is large array", "\n\n", "\n", "https://github.com/php/php-src/commit/ab6c45f5249d077463c1876d7cf09a11f04240fa", "\n", "\n", "array_reduce()", " のコールバック第一引数へ大きな配列が入る際に遅い、という問題の修正", "\n", "\n", "crhg の人", "が出してた奴", "\n", "当初は zval_ptr_dtor() の位置を移動する ", "PR", " だったが、マージの際に zval_ptr_dtor(&result) を潰して、ZVAL_COPY(&args[0], &result) のかわりに ZVAL_COPY_VALUE(&args[0], &result) を使うようになってる", "\n", "\n", "ZVAL_COPY()", " と ZVAL_COPY_VALUE() の違いは、後者はコピーの際に参照カウントを足さないというもの", "\n", "参照カウント減らしといてコールバック内の操作でのコピーを避ける、かな？後でもう少し見る", "\n", "\n\n", "\n", "petk: Remove unused methods-on-non-objects-nested.inc", "\n\n", "\n", "https://github.com/php/php-src/commit/6f1a04120b82df144c560b82bf448cfd1180edd0", "\n", "使われていないファイル Zend/tests/methods-on-non-objects-nested.inc を削除", "\n", "\n\n", "\n", "nikic: Fixed bug ", "#76901", "\n", "\n\n", "\n", "https://github.com/php/php-src/commit/294fb83ee84b76479a62e4ed37d5523c1208ad7c", "\n", "\n", "method_exists()", " を SPL のイテレータへ使うとメモリ破壊を起こすバグの修正", "\n", "\n\n", "\n", "dstogov: Improve ZEND_VM_SMART_BRANCH()", "\n\n", "\n", "https://github.com/php/php-src/commit/b137441f0e86594c94bc43476ac6577f3510fe52", "\n", "ZEND_VM_SMART_BRANCH() の最適化", "\n", "\n\n", "\n", "dstogov: Remove zend_hash_exists()", "\n\n", "\n", "https://github.com/php/php-src/commit/ef00e7e547c9fd7a5fdcff919889274477e82751", "\n", "不要な zend_hash_exists() を削除", "\n", "\n\n", "\n", "nikic: Fix intermittent failures in mysqli_stmt_bind_result_format.phpt", "\n\n", "\n", "https://github.com/php/php-src/commit/c614dd677c99e14ac6afb25d7bfe02cfa8cf1981", "\n", "ext/mysqli のテストを修正", "\n", "mt_rand() で動くテストとかやめてくれよう……などという愚痴がコミットコメントに入ってる", "\n", "\n\n", "\n", "nikic: Fix getColumnMeta() test", "\n\n", "\n", "https://github.com/php/php-src/commit/842bec5b3c539396d6ff9e207ba55f626b42524e", "\n", "ext/pdo_mysql のテストを修正", "\n", "最近の MySQL が無効値に対して厳格めな動作をするようになってるのを反映してるもよう", "\n", "\n\n", "\n", "dstogov: Remove zend_hash_exists()", "\n\n", "\n", "https://github.com/php/php-src/commit/0df57480b6fb574580697da26df1ac5802bc367c", "\n", "不要な zend_hash_exists() を削除", "\n", "\n\n", "\n", "dstogov: Micro-optimization", "\n\n", "\n", "https://github.com/php/php-src/commit/2a54867f7eef9b5f12a3f084b24c4faaa0047836", "\n", "不要な一時変数の削除", "\n", "\n\n", "\n", "dstogov: Use zend_hash_find() instead of zend_hash_exists()", "\n\n", "\n", "https://github.com/php/php-src/commit/6beaa9fa5b9764b411a178395ba26b237debf9fd", "\n", "当初 zend_hash_exists() を使っていた箇所を zend_hash_find() を使うよう修正", "\n", "\n\n", "\n", "dstogov: Turn zend_hash_exists() into inline function", "\n\n", "\n", "https://github.com/php/php-src/commit/27b0fecd2e0192290d6530ea1ee2f5cd23e43682", "\n", "zend_hash_exists() をインライン化", "\n", "\n\n", "\n", "dstogov: Drop unused variable", "\n\n", "\n", "https://github.com/php/php-src/commit/27b9fac19c7f5a24f24fc34107461e31570c8918", "\n", "使われていない変数を削除", "\n", "\n\n", "\n", "dstogov: Improved hash copying", "\n\n", "\n", "https://github.com/php/php-src/commit/f5e18686016044030e51dc4d40c39f7cef826886", "\n", "ハッシュテーブルのコピー処理を最適化/単純化", "\n", "\n"], "code": []},
{"title": ["Azure SDK for go で Storage Table のデータを作成する"], "body": ["Azure Storage Table のデータの書き出しを実施したかったので、どのように実施したかを記録しておきたい。", "\n\n", "\n", "Azure SDK for Go", "\n", "\n\n", "Storage Table の操作に関しては、Storage Account 名前とキーがあれば可能になる。こちらにリファレンスが存在するのでどうやって使うかは想像がつきやすい。", "\n\n", "\n", "storage", "\n", "\n\n", "\n", "使用例と解説", "\n\n", "使い方は簡単です。Storage Table のライブラリには、他のライブラリのように ", "service/storage/mgmt", " の下に日付付きのライブラリが普通はあるのですが、なぜか Storage Table だけありません。", "\n\n", "\n", "/services/storage/mgmt/2018-02-01/storage", "\n", "\n\n", "ルート直下にある ", "/storage", " を読み込みます。その後は簡単で", "\n\n", "\n", "Storage Account clinet をインスタンス化。", "NewBasicClient", " 今回の目的に適していた。", "\n", "Storage Table Service のリファレンスを取得 ", "client.GetTableService()", "\n", "\n", "具体的なテーブルのリファレンスを取得 ", "tableService.GetTableReference(YOUR_TABLE_NAME)", "\n", "\n", "Entity 構造体をセット", "\n", "インサートまたはアップデートの実施", "\n", "\n\n", "テーブルのレコードを作るためには、", "Entity", " 構造体を自分で New してインサートするか、Batch で複数のレコードを一括で更新するか？という方法がある。下記のサンプルはバッチ型で実施している。", "\n\n", "import", " ", "(", "\n  ", "\"github.com/Azure/azure-sdk-for-go/storage\"", "\n", ")", "\n", ":", " \n", "client", ",", " ", "err", " ", ":=", " ", "storage", ".", "NewBasicClient", "(", "YOUR_ACCOUNT_NAME", ",", " ", "YOUR_ACCOUNT_KEY", ")", "\n    ", ":", "\n", "tableService", " ", ":=", " ", "client", ".", "GetTableService", "()", "\n", "table", " ", ":=", " ", "tableService", ".", "GetTableReference", "(", "YOUR_TABLE_NAME", ")", "\n", "tableBatch", " ", ":=", " ", "table", ".", "NewBatch", "()", "\n", "entity", " ", ":=", " ", "&", "storage", ".", "Entity", " ", "{}", "\n", "entity", ".", "PartitionKey", " ", "=", " ", "\"1\"", "\n", "entity", ".", "RowKey", " ", "=", " ", "\"0\"", "\n", "entity", ".", "TimeStamp", " ", "=", " ", "time", ".", "Now", "()", "\n", "m", " ", ":=", " ", "make", "(", "map", "[", "string", "]", "interface", "{})", "\n", "m", "[", "\"Foo\"", "]", " ", "=", " ", "\"foo\"", "\n", "m", "[", "\"Bar\"", "]", " ", "=", " ", "\"bar\"", "\n", "m", "[", "\"CustomTime\"", "]", " ", "=", " ", "time", ".", "Now", "()", "\n", "tableBatchInsertOrReplaceEntityByForce", "(", "entity", ")", "\n", ":", "\n", "err", " ", ":=", " ", "tableBatch", ".", "ExecuteBatch", "()", "\n", "\n\n", "\n", "Odata のコンフィグレーションは必要か？", "\n\n", "結論から言うと必要ない。", "\n\n", "一つ疑問だったのが、Entity の定義にあった Odata の提議。", "\n\n", "type", " ", "Entity", " ", "struct", " ", "{", "\n    ", "Table", "         ", "*", "Table", "\n    ", "PartitionKey", "  ", "string", "\n    ", "RowKey", "        ", "string", "\n    ", "TimeStamp", "     ", "time", ".", "Time", "\n    ", "OdataMetadata", " ", "string", "\n    ", "OdataType", "     ", "string", "\n    ", "OdataID", "       ", "string", "\n    ", "OdataEtag", "     ", "string", "\n    ", "OdataEditLink", " ", "string", "\n    ", "Properties", "    ", "map", "[", "string", "]", "interface", "{}", "\n", "}", "\n", "\n\n", "どれが必須のなのかわからないけど、これは、Azure REST API のリファレンスを見ろとのこと。", "\n\n", "\n", "Payload Format for Table Service Operations", "\n", "\n\n", "このリファレンスを見ると、OData のレベルに対応して、設定する必要のある項目が異なってくる。本ライブラリの場合は、各カラムの型などは自動で設定してくれて、medatada も勝手に設定してくれるので、実用上は、私の上記のサンプルで構わない。自分でコントロールしたい場合は、", "\n\n", "func", " ", "(", "e", " ", "*", "Entity", ")", " ", "Insert", "(", "ml", " ", "MetadataLevel", ",", " ", "options", " ", "*", "EntityOptions", ")", " ", "error", "\n", "\n\n", "の MetadataLevelを参照すれば良い。こちらだが、一瞬定義が見つかりにくいが、", "Constant", "のところに書かれている。", "\n\n", "    EmptyPayload    MetadataLevel = \"\"\n    NoMetadata      MetadataLevel = \"application/json;odata=nometadata\"\n    MinimalMetadata MetadataLevel = \"application/json;odata=minimalmetadata\"\n    FullMetadata    MetadataLevel = \"application/json;odata=fullmetadata\"\n", "\n\n", "デフォルトでは、", "MinimalMetadata", " になっている様子で、私のユースケースでは、特に設定しなくても十分だと思われる。InsertOrReplace を使うと、一行で書ける。", "\n\n", "entity", ".", "InsertOrReplace", "(", "&", "storage", ".", "EntityOptions", "{", "Timeout", ":", " ", "10", "})", " \n", "\n\n", "タイムアウトの単位は、秒で最大 30 秒。わざわざオプションを指定しないといけないのが面倒だが、REST API の", "x-ms-client-request-id", "(Optional)   と　", "timeout", "(Optional) パラメータに相当するので、タイムアウトも指定しなくても良い。空のインスタンスで良い。", "\n"], "code": ["import", " ", "(", "\n  ", "\"github.com/Azure/azure-sdk-for-go/storage\"", "\n", ")", "\n", ":", " \n", "client", ",", " ", "err", " ", ":=", " ", "storage", ".", "NewBasicClient", "(", "YOUR_ACCOUNT_NAME", ",", " ", "YOUR_ACCOUNT_KEY", ")", "\n    ", ":", "\n", "tableService", " ", ":=", " ", "client", ".", "GetTableService", "()", "\n", "table", " ", ":=", " ", "tableService", ".", "GetTableReference", "(", "YOUR_TABLE_NAME", ")", "\n", "tableBatch", " ", ":=", " ", "table", ".", "NewBatch", "()", "\n", "entity", " ", ":=", " ", "&", "storage", ".", "Entity", " ", "{}", "\n", "entity", ".", "PartitionKey", " ", "=", " ", "\"1\"", "\n", "entity", ".", "RowKey", " ", "=", " ", "\"0\"", "\n", "entity", ".", "TimeStamp", " ", "=", " ", "time", ".", "Now", "()", "\n", "m", " ", ":=", " ", "make", "(", "map", "[", "string", "]", "interface", "{})", "\n", "m", "[", "\"Foo\"", "]", " ", "=", " ", "\"foo\"", "\n", "m", "[", "\"Bar\"", "]", " ", "=", " ", "\"bar\"", "\n", "m", "[", "\"CustomTime\"", "]", " ", "=", " ", "time", ".", "Now", "()", "\n", "tableBatchInsertOrReplaceEntityByForce", "(", "entity", ")", "\n", ":", "\n", "err", " ", ":=", " ", "tableBatch", ".", "ExecuteBatch", "()", "\n", "type", " ", "Entity", " ", "struct", " ", "{", "\n    ", "Table", "         ", "*", "Table", "\n    ", "PartitionKey", "  ", "string", "\n    ", "RowKey", "        ", "string", "\n    ", "TimeStamp", "     ", "time", ".", "Time", "\n    ", "OdataMetadata", " ", "string", "\n    ", "OdataType", "     ", "string", "\n    ", "OdataID", "       ", "string", "\n    ", "OdataEtag", "     ", "string", "\n    ", "OdataEditLink", " ", "string", "\n    ", "Properties", "    ", "map", "[", "string", "]", "interface", "{}", "\n", "}", "\n", "func", " ", "(", "e", " ", "*", "Entity", ")", " ", "Insert", "(", "ml", " ", "MetadataLevel", ",", " ", "options", " ", "*", "EntityOptions", ")", " ", "error", "\n", "    EmptyPayload    MetadataLevel = \"\"\n    NoMetadata      MetadataLevel = \"application/json;odata=nometadata\"\n    MinimalMetadata MetadataLevel = \"application/json;odata=minimalmetadata\"\n    FullMetadata    MetadataLevel = \"application/json;odata=fullmetadata\"\n", "entity", ".", "InsertOrReplace", "(", "&", "storage", ".", "EntityOptions", "{", "Timeout", ":", " ", "10", "})", " \n"]},
{"title": ["[Excel] 住所から都道府県を取り出して地方別集計をする"], "body": ["業務で使ったのでメモ", "\n\n", "\n", "１．住所から都道府県を取り出す", "\n\n", "\n", "先頭から４文字目が「県」なら４文字、そうじゃないなら３文字が都道府県名", "\n", "\n\n", "という判定で47都道府県全部行ける。Excelではけっこうメジャーな方法らしく、「Excel ＋ 住所から都道府県」という検索で直ぐ出てきた。", "\n\n", "考えた人は偉い。２文字の県名を作らなかった人も偉い。", "\n\n", "エクセル関数なら以下の通り。", "\n\n", "\n", "Excel関数", "\n", "= IF(MID(A1,4,1)<>\"県\",LEFT(A1,3),LEFT(A1,FIND(\"県\",A1)))\n", "\n", "\n\n", "正規表現ならこんな感じ。", "\n\n", "\n", "python", "\n", "re", " ", "=", " ", "r'^.{3}県?'", "\n", "\n", "\n\n", "\n", "２．都道府県番号を取得する", "\n\n", "とりあえず都道府県と番号対応表。", "\n\n", "\n", "wikipedia 全国地方公共団体コード", "\n", "wikipedia 日本の地域", "\n", "\n\n", "\n", "\n", "\n", "都道府県名", "\n", "都道府県番号", "\n", "地方名", "\n", "地方番号", "\n", "\n", "\n", "\n", "\n", "北海道", "\n", "1", "\n", "北海道地方", "\n", "1", "\n", "\n", "\n", "青森県", "\n", "2", "\n", "東北地方", "\n", "2", "\n", "\n", "\n", "岩手県", "\n", "3", "\n", "東北地方", "\n", "2", "\n", "\n", "\n", "宮城県", "\n", "4", "\n", "東北地方", "\n", "2", "\n", "\n", "\n", "秋田県", "\n", "5", "\n", "東北地方", "\n", "2", "\n", "\n", "\n", "山形県", "\n", "6", "\n", "東北地方", "\n", "2", "\n", "\n", "\n", "福島県", "\n", "7", "\n", "東北地方", "\n", "2", "\n", "\n", "\n", "茨城県", "\n", "8", "\n", "関東地方", "\n", "3", "\n", "\n", "\n", "栃木県", "\n", "9", "\n", "関東地方", "\n", "3", "\n", "\n", "\n", "群馬県", "\n", "10", "\n", "関東地方", "\n", "3", "\n", "\n", "\n", "埼玉県", "\n", "11", "\n", "関東地方", "\n", "3", "\n", "\n", "\n", "千葉県", "\n", "12", "\n", "関東地方", "\n", "3", "\n", "\n", "\n", "東京都", "\n", "13", "\n", "関東地方", "\n", "3", "\n", "\n", "\n", "神奈川県", "\n", "14", "\n", "関東地方", "\n", "3", "\n", "\n", "\n", "新潟県", "\n", "15", "\n", "中部地方", "\n", "4", "\n", "\n", "\n", "富山県", "\n", "16", "\n", "中部地方", "\n", "4", "\n", "\n", "\n", "石川県", "\n", "17", "\n", "中部地方", "\n", "4", "\n", "\n", "\n", "福井県", "\n", "18", "\n", "中部地方", "\n", "4", "\n", "\n", "\n", "山梨県", "\n", "19", "\n", "中部地方", "\n", "4", "\n", "\n", "\n", "長野県", "\n", "20", "\n", "中部地方", "\n", "4", "\n", "\n", "\n", "岐阜県", "\n", "21", "\n", "中部地方", "\n", "4", "\n", "\n", "\n", "静岡県", "\n", "22", "\n", "中部地方", "\n", "4", "\n", "\n", "\n", "愛知県", "\n", "23", "\n", "中部地方", "\n", "4", "\n", "\n", "\n", "三重県", "\n", "24", "\n", "近畿地方", "\n", "5", "\n", "\n", "\n", "滋賀県", "\n", "25", "\n", "近畿地方", "\n", "5", "\n", "\n", "\n", "京都府", "\n", "26", "\n", "近畿地方", "\n", "5", "\n", "\n", "\n", "大阪府", "\n", "27", "\n", "近畿地方", "\n", "5", "\n", "\n", "\n", "兵庫県", "\n", "28", "\n", "近畿地方", "\n", "5", "\n", "\n", "\n", "奈良県", "\n", "29", "\n", "近畿地方", "\n", "5", "\n", "\n", "\n", "和歌山県", "\n", "30", "\n", "近畿地方", "\n", "5", "\n", "\n", "\n", "鳥取県", "\n", "31", "\n", "中国地方", "\n", "6", "\n", "\n", "\n", "島根県", "\n", "32", "\n", "中国地方", "\n", "6", "\n", "\n", "\n", "岡山県", "\n", "33", "\n", "中国地方", "\n", "6", "\n", "\n", "\n", "広島県", "\n", "34", "\n", "中国地方", "\n", "6", "\n", "\n", "\n", "山口県", "\n", "35", "\n", "中国地方", "\n", "6", "\n", "\n", "\n", "徳島県", "\n", "36", "\n", "四国地方", "\n", "7", "\n", "\n", "\n", "香川県", "\n", "37", "\n", "四国地方", "\n", "7", "\n", "\n", "\n", "愛媛県", "\n", "38", "\n", "四国地方", "\n", "7", "\n", "\n", "\n", "高知県", "\n", "39", "\n", "四国地方", "\n", "7", "\n", "\n", "\n", "福岡県", "\n", "40", "\n", "九州・沖縄地方", "\n", "8", "\n", "\n", "\n", "佐賀県", "\n", "41", "\n", "九州・沖縄地方", "\n", "8", "\n", "\n", "\n", "長崎県", "\n", "42", "\n", "九州・沖縄地方", "\n", "8", "\n", "\n", "\n", "熊本県", "\n", "43", "\n", "九州・沖縄地方", "\n", "8", "\n", "\n", "\n", "大分県", "\n", "44", "\n", "九州・沖縄地方", "\n", "8", "\n", "\n", "\n", "宮崎県", "\n", "45", "\n", "九州・沖縄地方", "\n", "8", "\n", "\n", "\n", "鹿児島県", "\n", "46", "\n", "九州・沖縄地方", "\n", "8", "\n", "\n", "\n", "沖縄県", "\n", "47", "\n", "九州・沖縄地方", "\n", "8", "\n", "\n", "\n", "\n\n", "県名のセルからVLOOKUP関数で番号を引く", "\n\n", "\n", "Excel関数", "\n", "=VLOOKUP(B1,Sheet2!$B$1:$C$47,2,0)\n", "\n", "\n\n", "\n", "\n", "B1", " が県名の入ったセル", "\n", "\n", "Sheet2!$A$1:$D$47", "が番号対応表の範囲", "\n", "\n", "2", "は対応番号の取得。「2」なら都道府県番号。「4」なら地方番号", "\n", "文字列による判定の時は最後の引数は「0」で。", "\n", "\n\n", "\n", "３．集計する", "\n\n", "COUNTIF(S)関数,SUMIF(S)関数を使って集計する。", "\nあらためで考えると番号に変換する必要は無いかもしれない…。", "\n\n", "あとExcelのCOUNTIFS,SUMIFSはOR条件が使えないので、OR条件を使うときは無理に工夫するより個別に出したものを合計する方針がいい。", "\n\n", "\n", "COUNTIFの例", "\n", "C1:C1000が都道府県番号の入ったセル範囲。\nこのなかで\"1（北海道）\"の件数をカウント \n\n= COUNTIF(C1:C1000,\"1\")\n", "\n", "\n\n", "\n", "SUMIFの例", "\n", "C1:C1000が都道府県番号の入ったセル範囲。\nD1:D1000が売上のセル。\nこのなかで\"1（北海道）\"の売上合計をカウント。 \n\n= SUMIF(C1:C1000,\"1\",D1:D1000)\n", "\n", "\n"], "code": ["= IF(MID(A1,4,1)<>\"県\",LEFT(A1,3),LEFT(A1,FIND(\"県\",A1)))\n", "re", " ", "=", " ", "r'^.{3}県?'", "\n", "=VLOOKUP(B1,Sheet2!$B$1:$C$47,2,0)\n", "C1:C1000が都道府県番号の入ったセル範囲。\nこのなかで\"1（北海道）\"の件数をカウント \n\n= COUNTIF(C1:C1000,\"1\")\n", "C1:C1000が都道府県番号の入ったセル範囲。\nD1:D1000が売上のセル。\nこのなかで\"1（北海道）\"の売上合計をカウント。 \n\n= SUMIF(C1:C1000,\"1\",D1:D1000)\n"]},
{"title": ["Unity ML-Agents関連の記事まとめ"], "body": ["\n", "\n", "概要", "\n\n", "Unity ML-Agentsに関してよく参考にしている記事をまとめています。", "\n\n", "自分用なので、自分記事が若干多めです。随時更新", "\n\n", "この記事良かったよーとか、教えていただけると助かります。", "\n\n", "\n", "環境構築", "\n\n", "MacでUnity ML-Agentsの環境を構築する(v0.5.0対応)", "\n", "https://qiita.com/kai_kou/items/6478fa686ce1af5939d8", "\n\n", "Unity-Technologies/ml-agents/docs/Installation.md", "\n", "https://github.com/Unity-Technologies/ml-agents/blob/master/docs/Installation.md", "\n\n", "DockerでUnity ML-Agentsを動作させる(v0.5.0対応)", "\n", "https://qiita.com/kai_kou/items/df3f3518a5a27b66f617", "\n\n", "Using Docker For ML-Agents", "\n", "https://github.com/Unity-Technologies/ml-agents/blob/master/docs/Using-Docker.md", "\n\n", "Docker for Macをインストールしてみた", "\n", "https://qiita.com/scrummasudar/items/750aa52f4e0e747eed68", "\n\n", "トレーニング アプリケーションのパッケージング", "\n", "https://cloud.google.com/ml-engine/docs/tensorflow/packaging-trainer?hl=ja", "\n\n", "Macでhomebrewを使ってUnityをインストールする(Unity Hub、日本語化対応)", "\n", "https://qiita.com/kai_kou/items/445e614fb71f2204e033", "\n\n", "\n", "利用", "\n\n", "【Unity】Unityで機械学習する「ML-Agent」を色々と試して得た知見とか", "\n", "http://tsubakit1.hateblo.jp/entry/2018/02/18/233000", "\n\n", "Unity ML-Agentsで強化学習できる2Dシューティングゲームをつくってみた", "\n", "https://qiita.com/kai_kou/items/65b40c762ff0d89865cf", "\n\n", "Unityでの強化学習が結構たのしい【その１】", "\n", "https://qiita.com/Gri_Gra/items/2c0722d10b0d11892527", "\n\n", "\n", "チュートリアル", "\n\n", "Using an Environment Executable", "\n", "https://github.com/Unity-Technologies/ml-agents/blob/master/docs/Learning-Environment-Executable.md", "\n\n", "Basic Guide", "\n", "https://github.com/Unity-Technologies/ml-agents/blob/master/docs/Basic-Guide.md", "\n\n", "Unityの公式サンプルml-agentsでAIを試す", "\n", "http://am1tanaka.hatenablog.com/entry/2017/11/08/230525", "\n\n", "\n", "GCPで環境構築", "\n\n", "Google Cloud Machine Learning EngineでUnity ML-Agentsを動かす", "\n", "https://qiita.com/kai_kou/items/efff1c37a6843f0d3593", "\n"], "code": []},
{"title": ["スライド形式の研究発表で個人的に気をつけていたこと"], "body": ["\n", "\n", "概要", "\n\n", "スライド形式の研究発表で個人的に気をつけていたこと", "\n\n", "どんなに頑張って研究をしても、発表時に相手に理解してもらえないと意味がない", "\nあいつあんまり研究してないのに発表がうまいからって誤魔化せてるのなんかずるい、と感じる方の参考になればと思いまとめました", "\n\n", "\n", "スライド作成前", "\n\n", "\n", "聞き手は?\n\n", "\n", "自分の発表内容についての理解度", "\n", "年齢", "\n", "性別", "\n", "人数", " → スライドの伝え方", "\n", "\n", "\n", "発表環境は?\n\n", "\n", "発表場所の広さ", "\n", "スライドを表示する大きさ", "\n", "スライドを表示する位置", "\n", "マイクの有無", "\n", "スピーカーの有無", "\n", "プロジェクターの接続端子", "\n", "パソコンの設置場所", " → スライドの見やすさ/話し方", "\n", "\n", "\n", "目的は?\n\n", "\n", "発表目的の明確化", "\n", "\n", "\n", "\n\n", "\n", "スライド作成", "\n\n", "\n", "構成", "\n\n", "\n", "背景", "\n", "目的", "\n", "方法", "\n", "結果", "\n", "考察", "\n", "まとめ", "\n", "参考文献(非表示)", "\n", "詳細説明の補助(非表示)", "\n", "質疑応答対策(非表示)", "\n", "\n\n", "<-- 追加要素 -->", "\n\n", "\n", "関連研究", " → 目的前後に記載", "\n", "スケジュール", " → まとめ前に記載", "\n", "期待される成果", " → まとめ前後に記載", "\n", "\n\n", "\n", "デザイン", "\n\n", "\n", "デザインテンプレートは使わない", "\n", "スライドマスターで最初に作る", " → デザインのズレを無くすため", "\n", "デザインに黒は使わない", "\n", "デザインはシンプルにする", "\n", "内容を書くスペースを狭めないようにする", "\n", "内容を書くスペースは統一する", " → 箇条書きの点や図がズレないようにするため", "\n", "\n\n", "\n", "内容(文字/文章)", "\n\n", "\n", "フォント/文字の大きさ/文字の色を全て統一する", "\n", "スライドのデザインに文字が被らないようにする", "\n", "現代仮名づかいを使う", "\n", "体言止めを使う", "\n", "箇条書きで要点をまとめる", "\n", "句読点を使わない", "\n", "文章中に中点を使わない", " → 箇条書きの点と分かりづらいため", " → 使いたい場合はスラッシュ(/)を使う", "\n", "矢印を多用しない", " → 目線の移動が多くなるので聞き手が後半疲れてしまい、聞いてもらえなくなるため", "\n", "文の区切り/改行がわかりづらくなっていないか確認する", "\n", "強調したい部分にのみ色をつける", " → 蛍光色や薄い色は遠くにいる人に見えないのでNG", "\n", "スライド毎に表記ゆれが無いようにする", "\n", "参考文献の引用括弧\"[]\"を書く", "\n", "参考文献の引用数字に間違いがないか確認する", "\n", "ページ番号を書く", "\n", "全体のページ数が多い場合は合計のページ数も書く", "\n", "\n\n", "\n", "内容(図/表/動画)", "\n\n", "\n", "図や絵を取り入れてわかりやすくする", "\n", "図形の矢印を多用しない", " → 目線の移動が多くなるので聞き手が後半疲れてしまい、聞いてもらえなくなるため", "\n", "表タイトルは上、図タイトルは下に書く", "\n", "表図のタイトルはわかりやすくする", "\n", "動画を埋め込む場合はマウス操作なしで再生できるようにする", "\n", "\n\n", "\n", "内容(アニメーション)", "\n\n", "\n", "アニメーションを使ってわかりやすくする", " → 過度なアニメーションは逆に見えづらくなってしまうのでNG", "\n", "スライドの切り替えにアニメーションをつけない", "\n", "\n\n", "\n", "発表前", "\n\n", "\n", "スライドの確認\n\n", "\n", "聞き手が見やすいか", "\n", "聞き手が理解しやすいか", "\n", "スライドの流れ", "\n", "誤字脱字", "\n", "スライド切り替え時の文字や図の位置", "\n", "\n", "\n", "カンペは作らない\n\n", "\n", "話す言葉を忘れた瞬間に思考停止になるため", "\n", "感情のこもった発表ができなくなるため", "\n", "\n", "\n", "発表練習は適度に行う\n\n", "\n", "カンペを作っているのと同じためやり過ぎには注意!!", "\n", "\n", "\n", "発表時に使うアイテムの確認\n\n", "\n", "レーザーポインター/プレゼンターの電池残量", "\n", "制作物の動作確認", "\n", "\n", "\n", "\n\n", "\n", "発表", "\n\n", "\n", "発表直前に動作の確認はしておく\n\n", "\n", "スライドの表示", "\n", "スライドの切り替え", "\n", "音の大きさ", "\n", "動画の再生", "\n", "制作物の動作", " → すぐに起動できる状態にしておく", "\n", "\n", "\n", "メモ帳やペンを持たない", "\n", "身振り手振りを使う", "\n", "声の大きさを発表環境に合わせる", "\n", "自信を持って発表する(根拠のない自信)", "\n", "聞き手の目を見て話す\n\n", "\n", "全体を見回すことと組み合わせてできるとみんなに話している感が出て良い", "\n", "\n", "\n", "流れるように話す\n\n", "\n", "スライドのページが切り替わる際に接続詞を使う", "\n", "ページタイトルを言わない", "\n", "\n", "\n", "表や図の見方は重要な部分をしっかり説明する", "\n", "冗長な表現を使わない", "\n", "スライドを戻さない", " → 目線の移動が多くなるので聞き手が後半疲れてしまい、聞いてもらえなくなるため", "\n", "\n\n", "\n", "アイテム紹介", "\n\n", "\n", "レーザーポインター\n\n", "\n", "くるくる回さない", " → 指したい場所は分かるが、文字が読めないため", "\n", "見て欲しい部分の右下に1秒程静止させる", "\n", "\n", "\n", "プレゼンター\n\n", "\n", "スライドの切り替え用", "\n", "レーザーポインター機能も付いているものがあるのでおすすめ", "\n", "\n", "\n", "マウスはNG\n\n", "\n", "有線でつながっていると話す立ち位置に限界が生じるため", "\n", "マウスのクリック音で聞き手が発表に集中できないため", "\n", "\n", "\n", "\n\n", "\n", "最後に", "\n\n", "スライド発表が上手くなるための一番の近道は\"慣れ\"だと思います。発表した分だけ力になります。1回の発表でどれだけ力になるかは発表後にどこを改善するべきか考えること。", "\n発表を重ねることでスライドの自分ルールができてきます。記載してないことで自分ルールがある方はぜひ教えて欲しいです。", "\n"], "code": []},
{"title": ["tmux使用時にdockerコンテナに入った際、paneの背景色を変えるalias"], "body": ["\n", "\n", "前提", "\n\n", "\n", "tmux", "\n", "docker", "\n", "\n\n", "\n", "source", "\n\n", "\n", ".zshrc", "\n", "alias ", "docker-login", "=", "'(){tmux select-pane -P \"fg=4,bg=colour236\"; docker exec -it $1 bash -lc \"su - $2\";tmux select-pane -P \"fg=default,bg=default\" }'", "\n", "\n", "\n\n", "見たままだけど、内容としては、dockerの中にloginする際にtmuxのpaneのカラーを変更して、抜けたら元の色にもどしている。", "\ndocker execの部分をsshに変更したら、dockerじゃなくてsshでどこかのリモートサーバにログインした時もカラー変更したりできる。", "\n\n", "\n", "使い方", "\n\n", "ここの部分はどこかのqiitaに書いてあったまんま", "\n\n", "# amasokユーザでログイン\ndocker-login 7b566329da7f amasok\n# rootユーザでログイン\ndocker-login 7b566329da7f\n", "\n\n", "これで、dockerにアクセスしてる最中は背景色と文字色が変わる。", "\n\n", "tmux ", "select", "-pane", " ", "-P", " ", "\"fg=4,bg=colour236\"", "\n", "\n\n", "上のfgとbgを変えると色を変更できる。", "\n抜けたら元の色に戻る。", "\n\n", "\n", "参考", "\n\n", "あったんだけど、忘れた。。見つけられない。。", "\n"], "code": ["alias ", "docker-login", "=", "'(){tmux select-pane -P \"fg=4,bg=colour236\"; docker exec -it $1 bash -lc \"su - $2\";tmux select-pane -P \"fg=default,bg=default\" }'", "\n", "# amasokユーザでログイン\ndocker-login 7b566329da7f amasok\n# rootユーザでログイン\ndocker-login 7b566329da7f\n", "tmux ", "select", "-pane", " ", "-P", " ", "\"fg=4,bg=colour236\"", "\n"]},
{"title": ["数学教材"], "body": ["\n", "\n", "高校数学教材", "\n\n", "有料教材もいいけれど、無料教材があってもいいんじゃないか等と呻く日々。", "\n探すのが大変なのでご存知の方がいらっしゃれば教えていただきたいなと思います。", "\nひとまず、自作した教材を細々とアップしていきます。", "\n簡単な使用方法を記載するようにしていますので、わからないときはご連絡くださいませ。", "\n\n", "基本的にGeoGebraで作成した教材です。一部、javascriptで制御しています。", "\n（余談ですが、GeoGebraのスクリプトエディタが使いやすくなってほしいと願う。）", "\n\n", "\n", "高１", "\n\n", "\n", "数Ⅰ", "\n\n", "\n", "数A", "\n\n", "\n", "チェバの定理", "\n", "メネラウスの定理", "\n", "\n\n", "\n", "高２", "\n\n", "\n", "高３", "\n"], "code": []},
{"title": ["『Google アナリティクス初級者向けコース』ユニット１のノート"], "body": ["Google アナリティクス個人認定資格（GAIQ）", "の公式学習コンテンツを受講し、内容をまとめました。", "\nGAIQはこのコースの各ユニットにある確認テストのような形式なので、迷ったらまずこのコースを受講するのがオススメです。", "\nさあ、レッツらトライ！！", "\n\n", "\n", "1. ", "Googleアナリティクスの紹介", "\n", "\n\n", "\n", "1.1 ", "デジタル アナリティクスの利点", "\n", "\n\n", "\n", "到達プロセス", "\n\n", "\n", "Acuisition(集客)", "\n", "Behavior(行動)", "\n", "Conversion(換算)", "\n", "\n\n", "\n", "モバイルアプリ", "\n", "オンラインPOSシステム", "\n", "ゲーム機", "\n", "顧客関係管理システム", "\n", "\n\n", "などのインターネットに接続された各種システムからも収集可能。", "\n\n", "\n\n", "\n", "1.2 ", "Google アナリティクスの仕組み", "\n", "\n\n", "\n", "実装手順", "\n\n", "\n", "Googleアナリティクスアカウントを作成", "\n", "サイトの各ページにJavaScriptのトラッキングコードを追加", "\n", "\n\n", "\n", "参照可能な情報", "\n\n", "\n", "ブラウザの設定言語", "\n", "ブラウザの種類", "\n", "端末", "\n", "OS", "\n", "トラフィックの参照元\n\n", "\n", "ユーザがどこからアクセスしたか\n\n", "\n", "検索エンジン", "\n", "クリックした広告", "\n", "マーケティングメール", "\n", "etc...", "\n", "\n", "\n", "\n", "\n", "\n\n", "ユーザの活動に関する情報は、セッションという期間にまとめられ、読み込みのたびに収集・送信される。", "\n\n", "セッション", "：トラッキングコードを含むページにアクセスすると始まり、 デフォルトでは ", "活動がなくなって", " 30分経過後に終了。", "\n\n", "アナリティクスで処理されたデータは、DBに保存された後には変更不可。", "\n後で分析する可能性があるデータは除外しないように設定する必要がある。", "\n\n", "\n\n", "\n", "1.3 ", "Google アナリティクスの設定", "\n", "\n\n", "\n\n", "\n", "ビューについての注意点", "\n\n", "\n", "新しいビューが含むのは、作成された時点からのデータのみ。", "\n", "削除したビューの復元は、35日以内の内に管理者に限り可能。35日経過後は完全に削除される。", "\n", "\n\n", "\n", "ユーザ権限", "\n\n", "\n", "アカウント・プロパティ・ビューの各単位で他のユーザに権限を割り当てることができる。", "\n", "上位の権限は下位に継承される。", "\n", "\n\n", "\n", "権限の種類", "\n\n", "\n", "\n", "\n", "種類", "\n", "できること", "\n", "\n", "\n", "\n", "\n", "ユーザ管理", "\n", "アカウント・プロパティ・ビューへのアクセスを許可するユーザを追加・削除できる権限。", "\n", "\n", "\n", "編集", "\n", "設定を変更できる権限。", "\n", "\n", "\n", "共有設定", "\n", "マイレポートや測定の設定などを共有できる権限。", "\n", "\n", "\n", "表示と分析", "\n", "データの表示、レポートの分析、マイレポートの作成が可能な権限。", "\n", "\n", "\n", "\n"], "code": []},
{"title": ["広告IDを使っている覚えがないのにGoogle Playからポリシー違反を通告されたけどFirebaseのせいだった"], "body": ["近年のGoogle Play運営は、審査こそないものの怪しいアプリをBANする運用が進んでいます。大昔に作ったアプリがいつの間にか公開停止になっていた、なんてことも増えてきました。", "\n\n", "さて今回は、Google Playからポリシー違反の連絡が来たけれども、心当たりがなかったので調べてみたら面倒くさい対応を回避できた、というお話です。", "\n\n", "\n", "3行で", "\n\n", "\n", "プライバシーポリシーを置かないままストアにリリースしたアプリでデフォルトのままFirebaseを使っていると運営に刺されます", "\n", "プライバシーポリシーを置くか、Firebaseが広告IDを取得するのをやめさせる必要があります", "\n", "マニフェストにオプションを指定すると広告IDの取得をやめさせられます", "\n", "\n\n", "\n", "事の発端", "\n\n", "Google Playの運営から、こんなメールが届きました。", "\n\n", "\n\n", "要約すると", "\n\n", "\n", "お前のアプリでは広告IDの収集・転送を行っている", "\n", "広告IDを使うんだったらプライバシーポリシーをストアとアプリ内に掲載しろ", "\n", "プライバシーポリシーの内容はプライバシーに関して明記されていないとダメだぞ", "\n", "プライバシーポリシーの内容はちゃんと開発者や該当アプリに関連する内容じゃないとダメだぞ", "\n", "下手に誤魔化したら追加措置（隠語）があるからな", "\n", "\n\n", "ということです。", "\n\n", "\n", "ファーストインプレッション", "\n\n", "今回の事由は「Android 広告 ID の使用ポリシー及び Google Play デベロッパー販売 / 配布契約 4.8 への違反」だったわけですが、私の感想はこれです。", "\n\n", "私「このアプリ、広告IDなんか使ってませんけど！？」", "\n\n", "寝耳に水もいいところです。BtoBなアプリなのもあって、広告に類する活動は一切行っていません。", "\n前述のメールでいえば、次の方針を取りたいところです。", "\n\n", "\n", "また、お客様のアプリから個人情報や機密情報に関するアクセス権限リクエストを削除していただくことで、今回の警告を回避することも可能です。", "\n", "\n\n", "心当たりはないわけですし、プライバシーポリシーを作ったり組み込んだりするのも面倒くさいので、なんとか回避します。", "\n\n", "\n", "ざっくり調査してみる", "\n\n", "この時点で「ライブラリが悪さをしているんだろうな」とは思いつつも、ひとまず調べてみることにしました。", "\n\n", "まず、リリース時点でのパーミッションを見てみます。これは自分のAndroidManifest.xmlを見るよりも、Google Play Consoleがどう認識しているかを見たほうが確実です。", "\n\n", "\n\n", "パーミッションには問題無さそうです。", "\n\n", "次は、ライブラリです。", "\n\n", "\n", "app/build.gradle", "\n", "dependencies", " ", "{", "\n    ", "implementation", " ", "fileTree", "(", "dir:", " ", "'libs'", ",", " ", "include:", " ", "[", "'*.jar'", "])", "\n    ", "implementation", " ", "\"com.android.support:appcompat-v7:${supportLibVersion}\"", "\n    ", "implementation", " ", "\"com.android.support:design:${supportLibVersion}\"", "\n    ", "implementation", " ", "\"com.android.support:cardview-v7:${supportLibVersion}\"", "\n    ", "implementation", " ", "\"com.android.support:recyclerview-v7:${supportLibVersion}\"", "\n    ", "implementation", " ", "'com.annimon:stream:1.1.9'", "\n    ", "implementation", " ", "'com.jakewharton.threetenabp:threetenabp:1.0.5'", "\n    ", "implementation", " ", "'org.parceler:parceler-api:1.1.9'", "\n    ", "annotationProcessor", " ", "'org.parceler:parceler:1.1.9'", "\n    ", "implementation", " ", "'io.reactivex:rxjava:1.3.6'", "\n    ", "implementation", "(", "'com.ezhome:rxfirebase:2.2.0'", ")", " ", "{", "\n        ", "exclude", " ", "group:", " ", "'com.google.firebase'", ",", " ", "module:", " ", "'firebase-database'", "\n        ", "exclude", " ", "group:", " ", "'com.google.firebase'", ",", " ", "module:", " ", "'firebase-auth'", "\n        ", "exclude", " ", "group:", " ", "'io.reactivex'", ",", " ", "module:", " ", "'rxjava'", "\n    ", "}", "\n    ", "implementation", " ", "'com.google.firebase:firebase-database:11.8.0'", "\n    ", "implementation", " ", "'com.google.firebase:firebase-auth:11.8.0'", "\n    ", "implementation", " ", "'org.greenrobot:eventbus:3.1.1'", "\n    ", "implementation", "(", "'com.crashlytics.sdk.android:crashlytics:2.9.1@aar'", ")", " ", "{", "\n        ", "transitive", " ", "=", " ", "true", "\n    ", "}", "\n    ", "testImplementation", " ", "'junit:junit:4.12'", "\n    ", "testImplementation", " ", "'org.robolectric:robolectric:3.7.1'", "\n    ", "testImplementation", " ", "\"org.mockito:mockito-core:2.16.0\"", "\n", "}", "\n", "\n", "\n\n", "そこまで怪しいものは使っていません。強いて言えば、FirebaseとCrashlyticsがトラッキング系の機能を持っています。", "\n\n", "Crashlyticsはそういう情報を収集していなさそう", "なので、怪しいのはFirebaseです。", "\n\n", "\n", "Firebaseは広告IDを収集する", "\n\n", "ググってみたところ、ドンピシャでした。", "\n\n", "\n", "デフォルトでは、Android の SDK は広告 ID を収集します。", "\n", "データの収集 - Firebase ヘルプ", "\n", "\n\n", "この言いようだと、たぶんfirebase-coreに組み込まれていそうですね。何らかのFirebase SDKを利用したら、もう入りそうです。", "\nfirebase-coreにはFirebase Analyticsが組み込まれていますし、こういった挙動も納得が行きます。", "\n\n", "まあ", "こんな暗黙的な挙動を理由にBANしにくるのはちょっと理不尽じゃない？", "とは思わなくもないですが、ストアを間借りさせてもらっている身なので大きなことは言えません。", "\n\n", "\n", "広告IDの収集を拒否する", "\n\n", "というわけで、なんとかして広告IDを収集させないようにする必要があります。", "\n\n", "パッと思いついたのは、Gradleによるdependencyのexclude記法ですが、さすがにfirebase-coreに組み込まれていそうなものとなると、excludeくらいではどうにもならなさそうです。", "\n\n", "まあ、どうせオプトアウトの方法があるでしょ、ということでググってみたら、やっぱりありました。", "\n\n", "\n\n", "\n", "広告 ID の収集を無効にする", "\n\n", "Android アプリで広告 ID の収集を無効にするには、アプリの AndroidManifest.xml の application タグで、google_analytics_adid_collection_enabled を false に設定します。次に例を示します。", "\n\n", "<meta-data android:name=\"google_analytics_adid_collection_enabled\" android:value=\"false\" />\n", "\n\n", "https://firebase.google.com/support/guides/disable-analytics", "\n", "\n\n", "マニフェストに追記すればいいだけのようですね。これで安心です。", "\n\n", "\n", "まとめ", "\n\n", "Firebaseはドチャクソ便利なツールなので、使っている方も多いかと思います。となると、この問題で大量虐殺が起きそうな気もします。こわいこわい。", "\n\n", "なお、筆者はこの修正で直ったつもりになっていますが、実は他のライブラリも悪さをしていて、再度BANされる可能性もあります。その場合は追記しますので、続報をお待ち下さい。", "\n"], "code": ["dependencies", " ", "{", "\n    ", "implementation", " ", "fileTree", "(", "dir:", " ", "'libs'", ",", " ", "include:", " ", "[", "'*.jar'", "])", "\n    ", "implementation", " ", "\"com.android.support:appcompat-v7:${supportLibVersion}\"", "\n    ", "implementation", " ", "\"com.android.support:design:${supportLibVersion}\"", "\n    ", "implementation", " ", "\"com.android.support:cardview-v7:${supportLibVersion}\"", "\n    ", "implementation", " ", "\"com.android.support:recyclerview-v7:${supportLibVersion}\"", "\n    ", "implementation", " ", "'com.annimon:stream:1.1.9'", "\n    ", "implementation", " ", "'com.jakewharton.threetenabp:threetenabp:1.0.5'", "\n    ", "implementation", " ", "'org.parceler:parceler-api:1.1.9'", "\n    ", "annotationProcessor", " ", "'org.parceler:parceler:1.1.9'", "\n    ", "implementation", " ", "'io.reactivex:rxjava:1.3.6'", "\n    ", "implementation", "(", "'com.ezhome:rxfirebase:2.2.0'", ")", " ", "{", "\n        ", "exclude", " ", "group:", " ", "'com.google.firebase'", ",", " ", "module:", " ", "'firebase-database'", "\n        ", "exclude", " ", "group:", " ", "'com.google.firebase'", ",", " ", "module:", " ", "'firebase-auth'", "\n        ", "exclude", " ", "group:", " ", "'io.reactivex'", ",", " ", "module:", " ", "'rxjava'", "\n    ", "}", "\n    ", "implementation", " ", "'com.google.firebase:firebase-database:11.8.0'", "\n    ", "implementation", " ", "'com.google.firebase:firebase-auth:11.8.0'", "\n    ", "implementation", " ", "'org.greenrobot:eventbus:3.1.1'", "\n    ", "implementation", "(", "'com.crashlytics.sdk.android:crashlytics:2.9.1@aar'", ")", " ", "{", "\n        ", "transitive", " ", "=", " ", "true", "\n    ", "}", "\n    ", "testImplementation", " ", "'junit:junit:4.12'", "\n    ", "testImplementation", " ", "'org.robolectric:robolectric:3.7.1'", "\n    ", "testImplementation", " ", "\"org.mockito:mockito-core:2.16.0\"", "\n", "}", "\n", "<meta-data android:name=\"google_analytics_adid_collection_enabled\" android:value=\"false\" />\n"]},
{"title": ["レスポンシブWebデザインでスマートフォンを横にしたときのスタイルを指定する"], "body": ["\n", "\n", "やりたいこと", "\n\n", "レスポンシブWebデザインで、スマートフォンを横にした時に表示したくないエリアを", "display: none;", "にしたい。", "\n\n", "\n", "やったこと", "\n\n", "cssのメディアクエリを使用しました。", "\n\n", "\n", "sample.html", "\n", "<div", " ", "class=", "\"hide\"", ">", "\n　", "<p>", "隠したい", "</p>", "\n", "</div>", "\n", "\n", "\n\n", "\n", "sample.css", "\n", "@media", " ", "(", "max-width", ":", " ", "812px", ")", " ", "and", " ", "(", "max-height", ":", " ", "414px", ")", "  ", "{", "\n    ", ".hide", " ", "{", "\n        ", "display", ":", " ", "none", ";", "\n    ", "}", "\n", "}", "\n", "\n", "\n\n", "こちらのサイトなどを参考にし（", "【2018年4月版】もう迷わない！Webサイト横幅サイズの大正解", "）、スマートフォンの最大の縦横幅を探し出したところ、iPhone8Plusの横（414px）とiPhoneXの縦（812px）っぽかったので、それぞれを", "max-height", "と", "max-width", "に指定し上記のように記述しました。", "\n※スマートフォンを横にした時のスタイルなので、縦横逆の指定になります。", "\n\n", "なお、全ての端末で確認していないのと、これより大きな端末が出てきたら随時対応していく必要があります。。。", "\n"], "code": ["<div", " ", "class=", "\"hide\"", ">", "\n　", "<p>", "隠したい", "</p>", "\n", "</div>", "\n", "@media", " ", "(", "max-width", ":", " ", "812px", ")", " ", "and", " ", "(", "max-height", ":", " ", "414px", ")", "  ", "{", "\n    ", ".hide", " ", "{", "\n        ", "display", ":", " ", "none", ";", "\n    ", "}", "\n", "}", "\n"]},
{"title": ["Twitterトレンド - 新しいiPhoneについて人々が何を話しているか？"], "body": ["Appleは現地時間の9月12日朝10時、米国カリフォルニア州クパチーノにある本社で、iPhoneをはじめとする新製品の発表会を開催し、iPhoneは新たな3モデルiPhone（Xs、Xs Max、XR）と新たなApple Watchを発表しました。毎年、Appleの新製品発表イベントは間違いなく、ソーシャルメディアですぐ話題になり、面白いコメントがたくさん出てきます。だから私たちは、今年Appleのイベントについて人々が何のツイートしているのかを簡単なデータ分析をしようと思います。", "\n\n", "＃AppleEventというタグをつけているツイートを、", "スクレイピンツール", "でできるだけ多く抽出し、Apple製品について最も懸念されるの要点を見つけました。また、いくつかの面白いツイートを集めて、皆さんとシェアします。", "\n\n", "\n", "抽出したツイート", "\n\n", "調査結果を共有する前に、Twitterから抽出したデータについて説明します。", "\n時間制限のため、#AppleEventのトピックから908件のツイート（もちろん908件以上があるはずです）を収集しました。各ツイートから抽出したデータには以下が含まれます：", "\n\n", "· 名前", "\n", "· 投稿時間", "\n", "· コンテンツ", "\n", "· 画像のURL", "\n", "· ツイートのURL", "\n", "· コメント、リツイート、いいねの数", "\n", "\n", "（Gif：スクレイピンツールがデータを抽出している）", "\n\n", "Twitterをスクレイピングすることに興味があるなら、今回使った", "Twitterスクレイパー", "と", "Twitterをスクレイピングするのチュートリアル", "ご参考ください。", "\n\n", "\n", "ほとんどのツイートはイベント中に投稿された", "\n\n", "抽出したツイートに、#AppleEventのタグ付きの最も早いツイートはアップルがiOS12を発表した＃WWDC18と一緒に6月4日にが投稿されました。", "\nAppleEventのツイートは9月12日に急に上昇ししました。下の折れ線グラフから、イベントにほとんどのツイートが、午前10時から夜12時まで投稿されたことを見えます。", "\n", "\n\n", "\n", "一番言い及した新製品", "\n\n", "収集したすべてのデータを調べ、すべてのツイートのキーワードを分析し、人々が言い及した各新製品の数を得ました。", "\n", "\n\n", "\n", "最も使われる言葉", "\n\n", "AppleEventについてのツイートで最も使われている言葉をまとめてみました。", "\n", "\n\n", "\n", "価格に関心を寄せる", "\n\n", "アップルイベントの話題には、新しいiPhoneの価格に関するツイートが一番多いのはまったく驚くべきことではありません。", "\n特にiPhone Xs Maxは、歴史的に最も高価なiPhoneとして、価格が1099ドルから、最高価格が1499ドルです。一部のメディアは、", "AppleがiPhoneの入門価格を引き上げたこと", "を明らかにしました。今年前よりも最新で最高のiPhoneを購入するには、消費者は少なくとも100ドル以上を支払う必要があるからです。", "\n", "\n", "\n\n", "\n", "気になる唯一のアップグレード - より良いケーブル", "\n\n", "価格に関するツイートに加えて、#AppleEventの下にある別の人気のトピックは、私が欲しい/気になるアップグレード - より良いケーブル。", "\n", "\n", "\n\n", "\n", "人々が褒める新機能", "\n\n", "当然のことながら、新しいiPhoneと新しいApple Watchに拍手する人々もいます。", "\n", "\n", "\n\n", "\n", "人気ツイートトップ10", "\n\n", "データ分析をしている時、たくさんのツイートは本当に面白いと思います。だからイベントに関する人気の高いツイートを10件上げられます。お楽しみに！", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n\n", "\n", "まとめ", "\n\n", "多くのメディアや人々は毎年発表した新製品に満足していませんが、この1兆ドルの企業が領域を拡大する道を後押しすることはできませんでした。一年前と同じように、当時最も高価なiPhoneだったiPhone Xの価格にも色々な文句がありましたが、販売価格を引き上げることにとって、過去1年間でAppleの売上が大幅に増加しているのはそれが正しい戦略を判明しました。 ", "\n\n", "歴史は再び繰り返されますか？ いずれ分かるよね。", "\n"], "code": []},
{"title": ["ROS講座63 webでtwistを送る"], "body": ["\n", "\n", "環境", "\n\n", "この記事は以下の環境で動いています。", "\n\n", "\n", "\n", "\n", "項目", "\n", "値", "\n", "\n", "\n", "\n", "\n", "CPU", "\n", "Core i5-8250U", "\n", "\n", "\n", "Ubuntu", "\n", "16.04", "\n", "\n", "\n", "ROS", "\n", "Kinetic", "\n", "\n", "\n", "\n\n", "インストールについては", "ROS講座02 インストール", "を参照してください。", "\nまたこの記事のプログラムはgithubにアップロードされています。", "ROS講座11 gitリポジトリ", "を参照してください。", "\n\n", "\n", "概要", "\n\n", "今までロボットを動かす場合は、geometry_msgs/Twist型が必要でした。しかし、JoyConを使ってtTwistを送る方法しかありませんでした。これではいつでもJoyConを持ち歩かないといけなく不便なので、GUIからTwistを送りたいです。", "\n今回はHTMLのCanvas要素を使ってTwistを送ってみます。", "\n\n", "\n", "ソースコード", "\n\n", "\n", "web_lecture/www/twist.html", "\n", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">", "\n", "<html", " ", "xmlns=", "\"http://www.w3.org/1999/xhtml\"", " ", "xml:lang=", "\"en\"", " ", "lang=", "\"en\"", ">", "\n  ", "<head>", "\n    ", "<meta", " ", "http-equiv=", "\"content-type\"", " ", "content=", "\"text/html;charset=utf-8\"", "/>", "\n    ", "<style ", "type=", "\"text/css\"", ">", "\n    ", "<!", "--", "\n      ", "*", "{", " ", "padding", ":", "0px", ";", " ", "margin", ":", "0px", ";}", "\n    ", "--", ">", "\n    ", "</style>", "\n    ", "<script ", "src=", "\"https://static.robotwebtools.org/EventEmitter2/current/eventemitter2.min.js\"", "></script>", "\n    ", "<script ", "src=", "\"https://static.robotwebtools.org/roslibjs/current/roslib.min.js\"", "></script>", "\n  ", "</head>", "\n  ", "<title>", "HTML5", "</title>", "\n  ", "<body>", "\n    ", "<p>", "status： ", "<label", " ", "id=", "\"state\"", ">", "Disconnect", "</label></p>", "\n    ", "<h1>", "/cmd_vel", "</h1>", "\n    ", "<canvas", " ", "id=", "'canvas'", " ", "style=", "\"background-color:#EEEEEE;\"", "></canvas>", "\n    ", "<p", " ", "id=", "\"linearX\"", " ", ">", "linearX:  0.0 m/s", "</p>", "\n    ", "<p", " ", "id=", "\"angularZ\"", ">", "angularZ: 0.0 rad/s", "</p>", "\n    ", "<script>", "\n\n", "if", "(", "!", "Twist", "){", "\n    ", "var", " ", "Twist", " ", "=", " ", "{", "\n        ", "ros", " ", ":", " ", "null", ",", "\n        ", "name", " ", ":", " ", "\"\"", ",", "\n        ", "init", " ", ":", " ", "function", "(){", "\n            ", "this", ".", "ros", " ", "=", " ", "new", " ", "ROSLIB", ".", "Ros", "();", "\n            ", "this", ".", "ros", ".", "on", "(", "'error'", ",", " ", "function", "(", "error", ")", " ", "{", "\n                ", "document", ".", "getElementById", "(", "'state'", ").", "innerHTML", " ", "=", " ", "\"Error\"", ";", "\n            ", "});", "\n            ", "this", ".", "ros", ".", "on", "(", "'connection'", ",", " ", "function", "(", "error", ")", " ", "{", "\n                ", "document", ".", "getElementById", "(", "'state'", ").", "innerHTML", " ", "=", " ", "\"Connect\"", ";", "\n            ", "});", "\n            ", "this", ".", "ros", ".", "on", "(", "'close'", ",", " ", "function", "(", "error", ")", " ", "{", "\n                ", "document", ".", "getElementById", "(", "'state'", ").", "innerHTML", " ", "=", " ", "\"Close\"", ";", "\n            ", "});", "\n            ", "this", ".", "ros", ".", "connect", "(", "'ws://'", " ", "+", " ", "location", ".", "hostname", " ", "+", " ", "':9090'", ");", "\n        ", "},", "\n        ", "send", " ", ":", " ", "function", "(", "linearX", ",", " ", "angularZ", "){", "\n            ", "var", " ", "pub", " ", "=", " ", "new", " ", "ROSLIB", ".", "Topic", "({", "\n                ", "ros", " ", ":", " ", "this", ".", "ros", ",", "\n                ", "name", " ", ":", " ", "'/cmd_vel'", ",", "\n                ", "messageType", " ", ":", " ", "'geometry_msgs/Twist'", "\n            ", "});", "\n            ", "var", " ", "twist", " ", "=", " ", "new", " ", "ROSLIB", ".", "Message", "({", "\n              ", "linear", ":{", "x", ":", "linearX", ",", " ", "y", ":", "0.0", ",", " ", "z", ":", "0.0", "},", " \n              ", "angular", ":{", "x", ":", "0.0", ",", " ", "y", ":", "0.0", ",", " ", "z", ":", "angularZ", "}", "\n            ", "});", "\n            ", "pub", ".", "publish", "(", "twist", ");", "\n        ", "}", "\n    ", "}", "\n    ", "Twist", ".", "init", "();", "\n\n    ", "window", ".", "onload", " ", "=", " ", "function", "(){", "\n    ", "};", "\n    ", "window", ".", "onunload", " ", "=", " ", "function", "(){", "\n        ", "Twist", ".", "ros", ".", "close", "();", "\n    ", "};", "\n", "}", "\n\n", "//position -1.0~1.0", "\n", "last_X", "=", "0.0", ";", "\n", "last_Y", "=", "0.0", ";", "\n", "last_enable", "=", "false", ";", "\n\n", "window", ".", "onload", "=", "function", "(){", "\n  ", "canvas", "=", "$", "(", "'canvas'", ");", "\n  ", "expandCanvas", "();", "\n  ", "reticle", "();", "\n", "}", "\n\n", "function", " ", "expandCanvas", "(){", "\n  ", "var", " ", "b", " ", "=", " ", "document", ".", "body", ";", "\n  ", "var", " ", "d", " ", "=", " ", "document", ".", "documentElement", ";", "\n  ", "canvas", ".", "width", "  ", "=", " ", "400", ";", "\n  ", "canvas", ".", "height", " ", "=", " ", "400", ";", "\n", "}", "\n\n", "canvas", ".", "onmousedown", " ", "=", " ", "function", "(", "e", "){", "\n  ", "last_X", "=", "(", "e", ".", "pageX", " ", "-", " ", "canvas", ".", "offsetLeft", " ", "-", " ", "200", ")", " ", "/", " ", "200", ";", "\n  ", "last_Y", "=", "(", "e", ".", "pageY", " ", "-", " ", "canvas", ".", "offsetTop", "  ", "-", " ", "200", ")", " ", "/", " ", "200", ";", "\n  ", "last_enable", "=", "true", ";", "\n", "}", "\n\n", "canvas", ".", "onmousemove", " ", "=", " ", "function", "(", "e", "){", "\n  ", "last_X", "=", "(", "e", ".", "pageX", " ", "-", " ", "canvas", ".", "offsetLeft", " ", "-", " ", "200", ")", " ", "/", " ", "200", ";", "\n  ", "last_Y", "=", "(", "e", ".", "pageY", " ", "-", " ", "canvas", ".", "offsetTop", "  ", "-", " ", "200", ")", " ", "/", " ", "200", ";", "\n", "}", "\n\n", "canvas", ".", "onmouseup", "=", "function", "(", "e", "){", "\n  ", "last_X", "=", "0.0", "\n  ", "last_Y", "=", "0.0", "\n  ", "last_enable", "=", "false", ";", "\n  ", "Twist", ".", "send", "(", "0.0", ",", " ", "0.0", ");", "\n", "}", "\n\n", "function", " ", "reticle", "(){", "\n  ", "var", " ", "target", "=", "$", "(", "\"canvas\"", ");", "\n  ", "var", " ", "context", "=", "target", ".", "getContext", "(", "'2d'", ");", "\n  ", "center_x", "=", "200", ";", "\n  ", "center_y", "=", "200", ";", "\n  ", "line_a", "=", "10", ";", "\n  ", "line_b", "=", "100", ";", "\n\n  ", "context", ".", "beginPath", "();", "\n  ", "context", ".", "moveTo", "(", "center_x", "+", "line_a", ",", " ", "center_y", ");", "\n  ", "context", ".", "lineTo", "(", "center_x", "+", "line_b", ",", " ", "center_y", ");", "\n  ", "context", ".", "closePath", "();", "\n  ", "context", ".", "stroke", "();", "\n\n  ", "context", ".", "beginPath", "();", "\n  ", "context", ".", "moveTo", "(", "center_x", "-", "line_a", ",", " ", "center_y", ");", "\n  ", "context", ".", "lineTo", "(", "center_x", "-", "line_b", ",", " ", "center_y", ");", "\n  ", "context", ".", "closePath", "();", "\n  ", "context", ".", "stroke", "();", "\n\n  ", "context", ".", "beginPath", "();", "\n  ", "context", ".", "moveTo", "(", "center_x", ",", " ", "center_y", "+", "line_a", ");", "\n  ", "context", ".", "lineTo", "(", "center_x", ",", " ", "center_y", "+", "line_b", ");", "\n  ", "context", ".", "closePath", "();", "\n  ", "context", ".", "stroke", "();", "\n\n  ", "context", ".", "beginPath", "();", "\n  ", "context", ".", "moveTo", "(", "center_x", ",", " ", "center_y", "-", "line_a", ");", "\n  ", "context", ".", "lineTo", "(", "center_x", ",", " ", "center_y", "-", "line_b", ");", "\n  ", "context", ".", "closePath", "();", "\n  ", "context", ".", "stroke", "();", "\n", "}", "\n\n", "function", " ", "interval_process", "(){", "\n  ", "if", "(", "last_enable", "){", "\n    ", "var", " ", "linearX", "  ", "=", " ", "-", "0.5", "*", "last_Y", ";", "\n    ", "var", " ", "angularZ", " ", "=", " ", "-", "1.0", "*", "last_X", ";", "\n\n    ", "document", ".", "getElementById", "(", "\"linearX\"", " ", ").", "textContent", " ", "=", " ", "\"linearX: \"", " ", "+", "linearX", " ", "+", "\" m/s\"", " ", ";", "\n    ", "document", ".", "getElementById", "(", "\"angularZ\"", ").", "textContent", " ", "=", " ", "\"angularZ: \"", "+", "angularZ", "+", "\" rad/s\"", " ", ";", "\n    ", "console", ".", "log", "(", "linearX", ",", " ", "angularZ", ");", "\n    ", "Twist", ".", "send", "(", "linearX", ",", " ", "angularZ", ");", "\n  ", "}", "\n", "}", "\n", "setInterval", "(", "\"interval_process()\"", ",", "100", ");", "\n\n", "function", " ", "$", "(", "id", "){", "\n  ", "return", " ", "document", ".", "getElementById", "(", "id", ");", "\n", "}", "\n    ", "</script>", "\n  ", "</body>", "\n", "</html>", "\n", "\n", "\n\n", "if(!Twist){}", "の中はTwistを送るためにwebsocketの通信を行っているところです。前のpub.htmlとほぼ同じ内容です。jsonで複数階層のrosmsgを表すときは", "{a:{a0:0, a1:1}, b:{b0:2, b1:3}}", "のようにします。", "\n", "window.onload=function(){}", "は起動時に呼ばれるcallbackを登録しています。", "\n\n", "その下では", "canvas.onmousedown = function(e){}", "のようにcanvasでいイベントが起きた時に実行するcallbackを登録しています。", "\n今回登録したのは以下のようなイベントです。", "\n\n", "\n", "\n", "\n", "イベント", "\n", "xy座標", "\n", "enable", "\n", "\n", "\n", "\n", "\n", "canvas.onmousedown", "\n", "現在位置にセット", "\n", "trueにセット", "\n", "\n", "\n", "canvas.onmousemove", "\n", "現在位置にセット", "\n", "変化なし", "\n", "\n", "\n", "canvas.onmouseup", "\n", "0,0にセット", "\n", "falseにセット", "\n", "\n", "\n", "\n\n", "その下の", "function interval_process(){}", "と", "setInterval(\"interval_process()\",100);", "では10Hzで実行するcallbackを設定しています。ここではenable==trueの時に保存されているxyに合わせてtwistを送信する", "Twist.pub()", "を呼んでいます。", "\n\n", "\n", "実行", "\n\n", "以下のように2つのターミナルを開いて、そのうえでブラウザで", "localhost:8085/web_lecture/twist.html", "にアクセスします。", "\n\n", "\n", "1つ目のターミナルで", "\n", "roslaunch vis_lecture move_robot1.launch \n", "\n", "\n\n", "\n", "2つ目のターミナルで", "\n", "roslaunch web_lecture bridge.launch \n", "\n", "\n\n", "\n\n", "\n", "参考", "\n\n", "canvasオブジェクトを作る", "\n", "javascriptで一定間隔にプログラムを実行", "\n", "多階層のjsonの書き方", "\n", "javascriptのイベント", "\n\n", "\n", "目次ページへのリンク", "\n\n", "ROS講座の目次へのリンク", "\n"], "code": ["<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">", "\n", "<html", " ", "xmlns=", "\"http://www.w3.org/1999/xhtml\"", " ", "xml:lang=", "\"en\"", " ", "lang=", "\"en\"", ">", "\n  ", "<head>", "\n    ", "<meta", " ", "http-equiv=", "\"content-type\"", " ", "content=", "\"text/html;charset=utf-8\"", "/>", "\n    ", "<style ", "type=", "\"text/css\"", ">", "\n    ", "<!", "--", "\n      ", "*", "{", " ", "padding", ":", "0px", ";", " ", "margin", ":", "0px", ";}", "\n    ", "--", ">", "\n    ", "</style>", "\n    ", "<script ", "src=", "\"https://static.robotwebtools.org/EventEmitter2/current/eventemitter2.min.js\"", "></script>", "\n    ", "<script ", "src=", "\"https://static.robotwebtools.org/roslibjs/current/roslib.min.js\"", "></script>", "\n  ", "</head>", "\n  ", "<title>", "HTML5", "</title>", "\n  ", "<body>", "\n    ", "<p>", "status： ", "<label", " ", "id=", "\"state\"", ">", "Disconnect", "</label></p>", "\n    ", "<h1>", "/cmd_vel", "</h1>", "\n    ", "<canvas", " ", "id=", "'canvas'", " ", "style=", "\"background-color:#EEEEEE;\"", "></canvas>", "\n    ", "<p", " ", "id=", "\"linearX\"", " ", ">", "linearX:  0.0 m/s", "</p>", "\n    ", "<p", " ", "id=", "\"angularZ\"", ">", "angularZ: 0.0 rad/s", "</p>", "\n    ", "<script>", "\n\n", "if", "(", "!", "Twist", "){", "\n    ", "var", " ", "Twist", " ", "=", " ", "{", "\n        ", "ros", " ", ":", " ", "null", ",", "\n        ", "name", " ", ":", " ", "\"\"", ",", "\n        ", "init", " ", ":", " ", "function", "(){", "\n            ", "this", ".", "ros", " ", "=", " ", "new", " ", "ROSLIB", ".", "Ros", "();", "\n            ", "this", ".", "ros", ".", "on", "(", "'error'", ",", " ", "function", "(", "error", ")", " ", "{", "\n                ", "document", ".", "getElementById", "(", "'state'", ").", "innerHTML", " ", "=", " ", "\"Error\"", ";", "\n            ", "});", "\n            ", "this", ".", "ros", ".", "on", "(", "'connection'", ",", " ", "function", "(", "error", ")", " ", "{", "\n                ", "document", ".", "getElementById", "(", "'state'", ").", "innerHTML", " ", "=", " ", "\"Connect\"", ";", "\n            ", "});", "\n            ", "this", ".", "ros", ".", "on", "(", "'close'", ",", " ", "function", "(", "error", ")", " ", "{", "\n                ", "document", ".", "getElementById", "(", "'state'", ").", "innerHTML", " ", "=", " ", "\"Close\"", ";", "\n            ", "});", "\n            ", "this", ".", "ros", ".", "connect", "(", "'ws://'", " ", "+", " ", "location", ".", "hostname", " ", "+", " ", "':9090'", ");", "\n        ", "},", "\n        ", "send", " ", ":", " ", "function", "(", "linearX", ",", " ", "angularZ", "){", "\n            ", "var", " ", "pub", " ", "=", " ", "new", " ", "ROSLIB", ".", "Topic", "({", "\n                ", "ros", " ", ":", " ", "this", ".", "ros", ",", "\n                ", "name", " ", ":", " ", "'/cmd_vel'", ",", "\n                ", "messageType", " ", ":", " ", "'geometry_msgs/Twist'", "\n            ", "});", "\n            ", "var", " ", "twist", " ", "=", " ", "new", " ", "ROSLIB", ".", "Message", "({", "\n              ", "linear", ":{", "x", ":", "linearX", ",", " ", "y", ":", "0.0", ",", " ", "z", ":", "0.0", "},", " \n              ", "angular", ":{", "x", ":", "0.0", ",", " ", "y", ":", "0.0", ",", " ", "z", ":", "angularZ", "}", "\n            ", "});", "\n            ", "pub", ".", "publish", "(", "twist", ");", "\n        ", "}", "\n    ", "}", "\n    ", "Twist", ".", "init", "();", "\n\n    ", "window", ".", "onload", " ", "=", " ", "function", "(){", "\n    ", "};", "\n    ", "window", ".", "onunload", " ", "=", " ", "function", "(){", "\n        ", "Twist", ".", "ros", ".", "close", "();", "\n    ", "};", "\n", "}", "\n\n", "//position -1.0~1.0", "\n", "last_X", "=", "0.0", ";", "\n", "last_Y", "=", "0.0", ";", "\n", "last_enable", "=", "false", ";", "\n\n", "window", ".", "onload", "=", "function", "(){", "\n  ", "canvas", "=", "$", "(", "'canvas'", ");", "\n  ", "expandCanvas", "();", "\n  ", "reticle", "();", "\n", "}", "\n\n", "function", " ", "expandCanvas", "(){", "\n  ", "var", " ", "b", " ", "=", " ", "document", ".", "body", ";", "\n  ", "var", " ", "d", " ", "=", " ", "document", ".", "documentElement", ";", "\n  ", "canvas", ".", "width", "  ", "=", " ", "400", ";", "\n  ", "canvas", ".", "height", " ", "=", " ", "400", ";", "\n", "}", "\n\n", "canvas", ".", "onmousedown", " ", "=", " ", "function", "(", "e", "){", "\n  ", "last_X", "=", "(", "e", ".", "pageX", " ", "-", " ", "canvas", ".", "offsetLeft", " ", "-", " ", "200", ")", " ", "/", " ", "200", ";", "\n  ", "last_Y", "=", "(", "e", ".", "pageY", " ", "-", " ", "canvas", ".", "offsetTop", "  ", "-", " ", "200", ")", " ", "/", " ", "200", ";", "\n  ", "last_enable", "=", "true", ";", "\n", "}", "\n\n", "canvas", ".", "onmousemove", " ", "=", " ", "function", "(", "e", "){", "\n  ", "last_X", "=", "(", "e", ".", "pageX", " ", "-", " ", "canvas", ".", "offsetLeft", " ", "-", " ", "200", ")", " ", "/", " ", "200", ";", "\n  ", "last_Y", "=", "(", "e", ".", "pageY", " ", "-", " ", "canvas", ".", "offsetTop", "  ", "-", " ", "200", ")", " ", "/", " ", "200", ";", "\n", "}", "\n\n", "canvas", ".", "onmouseup", "=", "function", "(", "e", "){", "\n  ", "last_X", "=", "0.0", "\n  ", "last_Y", "=", "0.0", "\n  ", "last_enable", "=", "false", ";", "\n  ", "Twist", ".", "send", "(", "0.0", ",", " ", "0.0", ");", "\n", "}", "\n\n", "function", " ", "reticle", "(){", "\n  ", "var", " ", "target", "=", "$", "(", "\"canvas\"", ");", "\n  ", "var", " ", "context", "=", "target", ".", "getContext", "(", "'2d'", ");", "\n  ", "center_x", "=", "200", ";", "\n  ", "center_y", "=", "200", ";", "\n  ", "line_a", "=", "10", ";", "\n  ", "line_b", "=", "100", ";", "\n\n  ", "context", ".", "beginPath", "();", "\n  ", "context", ".", "moveTo", "(", "center_x", "+", "line_a", ",", " ", "center_y", ");", "\n  ", "context", ".", "lineTo", "(", "center_x", "+", "line_b", ",", " ", "center_y", ");", "\n  ", "context", ".", "closePath", "();", "\n  ", "context", ".", "stroke", "();", "\n\n  ", "context", ".", "beginPath", "();", "\n  ", "context", ".", "moveTo", "(", "center_x", "-", "line_a", ",", " ", "center_y", ");", "\n  ", "context", ".", "lineTo", "(", "center_x", "-", "line_b", ",", " ", "center_y", ");", "\n  ", "context", ".", "closePath", "();", "\n  ", "context", ".", "stroke", "();", "\n\n  ", "context", ".", "beginPath", "();", "\n  ", "context", ".", "moveTo", "(", "center_x", ",", " ", "center_y", "+", "line_a", ");", "\n  ", "context", ".", "lineTo", "(", "center_x", ",", " ", "center_y", "+", "line_b", ");", "\n  ", "context", ".", "closePath", "();", "\n  ", "context", ".", "stroke", "();", "\n\n  ", "context", ".", "beginPath", "();", "\n  ", "context", ".", "moveTo", "(", "center_x", ",", " ", "center_y", "-", "line_a", ");", "\n  ", "context", ".", "lineTo", "(", "center_x", ",", " ", "center_y", "-", "line_b", ");", "\n  ", "context", ".", "closePath", "();", "\n  ", "context", ".", "stroke", "();", "\n", "}", "\n\n", "function", " ", "interval_process", "(){", "\n  ", "if", "(", "last_enable", "){", "\n    ", "var", " ", "linearX", "  ", "=", " ", "-", "0.5", "*", "last_Y", ";", "\n    ", "var", " ", "angularZ", " ", "=", " ", "-", "1.0", "*", "last_X", ";", "\n\n    ", "document", ".", "getElementById", "(", "\"linearX\"", " ", ").", "textContent", " ", "=", " ", "\"linearX: \"", " ", "+", "linearX", " ", "+", "\" m/s\"", " ", ";", "\n    ", "document", ".", "getElementById", "(", "\"angularZ\"", ").", "textContent", " ", "=", " ", "\"angularZ: \"", "+", "angularZ", "+", "\" rad/s\"", " ", ";", "\n    ", "console", ".", "log", "(", "linearX", ",", " ", "angularZ", ");", "\n    ", "Twist", ".", "send", "(", "linearX", ",", " ", "angularZ", ");", "\n  ", "}", "\n", "}", "\n", "setInterval", "(", "\"interval_process()\"", ",", "100", ");", "\n\n", "function", " ", "$", "(", "id", "){", "\n  ", "return", " ", "document", ".", "getElementById", "(", "id", ");", "\n", "}", "\n    ", "</script>", "\n  ", "</body>", "\n", "</html>", "\n", "roslaunch vis_lecture move_robot1.launch \n", "roslaunch web_lecture bridge.launch \n"]},
{"title": ["Ethereum入門　〜ERC721トークン作成とTokenURI設定方法〜"], "body": ["\n", "\n", "はじめに", "\n\n", "先日ERC721トークンのdAppsをリリースしました。", "\n作った過程で、トークン作成方法やTokenURIの設定方法が詰まったので、こちらにまとめさせて頂きました。", "\n", "MyTokenCollection", "\n\n", "\n", "ERC721とは", "\n\n", "ERC721の特徴は、スマートコントラクト内でNon-Fungible Tokenを扱えるようにしたものです。Non-Fungible（代替不可能）のため、土地や家、オリジナルの芸術作品のようなそれ自体に個性があるものをトークンとする事が出来ます。代表的なdAppsとしてCrypto KittiesやEtheremonがあります。", "\n\n", "\n", "作ったもの", "\n\n", "MyTokenCollectionというdAppsを作りました。", "\nアカウントから所有しているERC721トークンを表示して、そのコレクション画像をIPFSに保存、さらにその画像をERC721トークン化するものです。", "\n", "https://token-collection.firebaseapp.com", "\n\n", "\n\n", "こちらに動画があり、見て頂くとイメージしやすいかと思います。", "\n", "https://twitter.com/kolife01/status/1042005295273132032", "\n\n", "\n", "ERC721トークン作成", "\n\n", "\n", "コントラクト", "\n\n", "こちらが今回のコントラクトです。", "\n\n", "\n", "contract.sol", "\n", "pragma solidity ^0.4.23;\n\nimport \"github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\";\nimport \"github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol\";\nimport \"github.com/OpenZeppelin/openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\ncontract MyTokenCollection is ERC721Full,ERC721Mintable,Ownable {\n\n  constructor() public ERC721Full(\"MyTokenCollection\", \"MTC\") {}\n\n\n  function mintTokenCollection(string _tokenURI) public {\n    uint256 newTokenId = _getNextTokenId();\n    _mint(msg.sender, newTokenId);\n    _setTokenURI(newTokenId, _tokenURI);\n    }\n\n    function _getNextTokenId() private view returns (uint256) {\n        return totalSupply().add(1); \n    }\n", "\n", "\n\n", "OpenZeppelinを使うことで大分簡単に書けるようになっています。", "\n以前はERC721Fullではなく、ERC721Tokenだったのですが、updateにより変更されています。", "\n※このあたりよく変わるので注意、ハマりました。", "\n\n", "OpenZeppelinの内容はこちらで確認出来ます。", "\nGitHub", "\n", "https://github.com/OpenZeppelin/openzeppelin-solidity/tree/master/contracts/token/ERC721", "\n\n", "Document", "\n", "https://openzeppelin.org/api/docs/token_ERC721_ERC721.html", "\n\n", "\n", "TokenURI設定", "\n\n", "ERC721では、トークンを発行する際にTokenURIの設定が必要です。", "\nJSONファイルのURLを設定することでトークンの画像や情報を登録することが出来ます。", "\n\n", "この仕様は以下のEIPに書いてあります。", "\n", "https://eips.ethereum.org/EIPS/eip-721", "\n\n", "{\n    \"title\": \"Asset Metadata\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Identifies the asset to which this NFT represents\",\n        },\n        \"description\": {\n            \"type\": \"string\",\n            \"description\": \"Describes the asset to which this NFT represents\",\n        },\n        \"image\": {\n            \"type\": \"string\",\n            \"description\": \"A URI pointing to a resource with mime type image/* representing the asset to which this NFT represents. Consider making any images at a width between 320 and 1080 pixels and aspect ratio between 1.91:1 and 4:5 inclusive.\",\n        }\n    }\n}\n", "\n\n", "今回はこのように設定しました。", "\nimageはIPFSに保存しています。", "\n\n", "{\n\"name\": \"My token collection\",\n\"image\":\"https://ipfs.io/ipfs/QmTFqBE5jVMtqTJZofR41LEKUBqTMRKvBNyGxYPkP8AixW\",\n\"description\": \"Create by *** html:https://ipfs.io/ipfs/QmUGAstzt9peoUHZ4XqHAczqmrjimwetziqWttqdagAwTk\"\n}\n", "\n\n", "このように設定しておくとdAppsマーケットのOpenSeaなどでもしっかり表示されます。", "\n", "\n\n", "https://opensea.io/category/mytokencollection", "\n\n", "\n", "終わりに", "\n\n", "OpenZeppelinを使うことでスマートコントラクト部は大分簡単に実装出来ます。TokenURIを設定することでOpenSeaにも瞬時に反映され感動しました。ブロックチェーンの分散化の凄さを少し体感出来ました。", "\n\n", "\n", "参考にさせて頂きました", "\n\n", "ERC-721トークンをOpenZeppelinで作ってみる", "\n"], "code": ["pragma solidity ^0.4.23;\n\nimport \"github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\";\nimport \"github.com/OpenZeppelin/openzeppelin-solidity/contracts/token/ERC721/ERC721Mintable.sol\";\nimport \"github.com/OpenZeppelin/openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\ncontract MyTokenCollection is ERC721Full,ERC721Mintable,Ownable {\n\n  constructor() public ERC721Full(\"MyTokenCollection\", \"MTC\") {}\n\n\n  function mintTokenCollection(string _tokenURI) public {\n    uint256 newTokenId = _getNextTokenId();\n    _mint(msg.sender, newTokenId);\n    _setTokenURI(newTokenId, _tokenURI);\n    }\n\n    function _getNextTokenId() private view returns (uint256) {\n        return totalSupply().add(1); \n    }\n", "{\n    \"title\": \"Asset Metadata\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"type\": \"string\",\n            \"description\": \"Identifies the asset to which this NFT represents\",\n        },\n        \"description\": {\n            \"type\": \"string\",\n            \"description\": \"Describes the asset to which this NFT represents\",\n        },\n        \"image\": {\n            \"type\": \"string\",\n            \"description\": \"A URI pointing to a resource with mime type image/* representing the asset to which this NFT represents. Consider making any images at a width between 320 and 1080 pixels and aspect ratio between 1.91:1 and 4:5 inclusive.\",\n        }\n    }\n}\n", "{\n\"name\": \"My token collection\",\n\"image\":\"https://ipfs.io/ipfs/QmTFqBE5jVMtqTJZofR41LEKUBqTMRKvBNyGxYPkP8AixW\",\n\"description\": \"Create by *** html:https://ipfs.io/ipfs/QmUGAstzt9peoUHZ4XqHAczqmrjimwetziqWttqdagAwTk\"\n}\n"]},
{"title": ["AWS（EC2）に関する自分用メモ"], "body": ["AWSでEC2を使うにあたって、いつも調べてしまうこととかパターン化されてることとかトラブったこととかをまとめておこうと思う。", "\n少し古い情報もあるかもしれないので随時アップデートしていく。", "\n\n", "\n", "EC2起動後に日本時間の設定", "\n\n", "sudo vim /etc/sysconfig/clock\n\n ZONE=\"Japan\"\n UTC=true\n\nsudo ln -sf /usr/share/zoneinfo/Japan /etc/localtime\n", "\n\n", "\n", "EC2起動後にLAMP環境の構築", "\n\n", "公式にチュートリアルがある。", "\n\n", "Amazon Linux AMI を使用して LAMP ウェブサーバーをインストールする", "\n\n", "\n", "apacheとtomcatの連携（Java環境構築用）", "\n\n", "sudo vim /etc/httpd/conf.d/proxy-ajp.conf\n\n ProxyPass / ajp://localhost:8009/\n\nsudo yum -y install java-1.8.0-openjdk-devel\nsudo alternatives --config java\nsudo yum -y install tomcat8\nsudo yum -y install tomcat8-webapps tomcat9-admin-webapps\nsudo vim /usr/share/tomcat8/conf/server.xml\n\n <!--\n  <Connector port=\"8080\" protocol=\"HTTP/1.1\" connectionTimeout=\"20000\" redirectPort=\"8443\" />\n -->\n\nsudo service httpd start\nsudo service tomcat start\n", "\n\n", "\n", "EC2にアクセスできないときのチェックポイント", "\n\n", "\n", "セキュリティグループの確認（いわずもがな）", "\n", "ロードバランサーを経由している場合、リスナーの設定を確認（見落としがち）", "\n", "\n"], "code": ["sudo vim /etc/sysconfig/clock\n\n ZONE=\"Japan\"\n UTC=true\n\nsudo ln -sf /usr/share/zoneinfo/Japan /etc/localtime\n", "sudo vim /etc/httpd/conf.d/proxy-ajp.conf\n\n ProxyPass / ajp://localhost:8009/\n\nsudo yum -y install java-1.8.0-openjdk-devel\nsudo alternatives --config java\nsudo yum -y install tomcat8\nsudo yum -y install tomcat8-webapps tomcat9-admin-webapps\nsudo vim /usr/share/tomcat8/conf/server.xml\n\n <!--\n  <Connector port=\"8080\" protocol=\"HTTP/1.1\" connectionTimeout=\"20000\" redirectPort=\"8443\" />\n -->\n\nsudo service httpd start\nsudo service tomcat start\n"]},
{"title": ["【Rails】開発環境とテストコード上（または本番環境）でデータの並び順が異なる場合の原因と対処方法"], "body": ["\n", "\n", "はじめに", "\n\n", "「同じように作成したデータのはずなのに、開発環境とテストコード上（または本番環境）で並び順が異なってる！いったいなんで！？」と困っているRails開発者さんをときどき見かけます。", "\n\n", "これはたとえば、開発環境でUserの一覧を見ると、", "\n\n", "\n", "Alice", "\n", "Bob", "\n", "Carol", "\n", "\n\n", "と並んでいるのに、テストコード上で実行すると、", "\n\n", "\n", "Carol", "\n", "Bob", "\n", "Alice", "\n", "\n\n", "の順で並んでいる、というような現象です。", "\n\n", "この記事ではこういった問題が起きる原因（確認ポイント）と対処方法を説明します。", "\n\n", "\n", "確認ポイント： ちゃんとorder（SQLのORDER BY句）を指定しているか？", "\n\n", "たとえばRailsで", "User.all", "を実行すると、その裏では次のようなSQLが発行されています。", "\n\n", "SELECT", " ", "\"users\"", ".", "*", " ", "FROM", " ", "\"users\"", "\n", "\n\n", "実際に発行されるSQLは、Railsのログを見たり、", "User.all.to_sql", "のように", "to_sql", "を付けたりすることで確認できます。", "\n\n", "puts", " ", "User", ".", "all", ".", "to_sql", "\n", "#=> SELECT \"users\".* FROM \"users\"", "\n", "\n\n", "上のコードで注目してほしい点は、orderを全く指定していないところです。", "\n発行されるSQLにもORDER BY句が付いていません。", "\n\n", "コンピュータを日常的に触っているプログラマの感覚だと、経験的に「データの並び順ってデータを作成した順番とかで勝手に並んでくれるんじゃないの？」と考えてしまうかもしれません。", "\n\n", "が！！", "\n\n", "SQLにおいてはその常識（経験則？）は当てはまりません。", "\n\n", "ORDER BY句を指定しない場合の並び順は「不定」となります。", "\n\n", "開発環境でUserの一覧を見たときに、いつも", "\n\n", "\n", "Alice", "\n", "Bob", "\n", "Carol", "\n", "\n\n", "の順で並んでいたとしても、ORDER BY句を指定していなければそれは ", "ただの偶然", " です。", "\n\n", "なので、明日突然、", "\n\n", "\n", "Carol", "\n", "Bob", "\n", "Alice", "\n", "\n\n", "の順で並び始めたとしても、「データベースのバグだ！！」と叫ぶことはできません。", "\nORDER BY句を付けなければ、データベースはデータの並び順を ", "一切保証しない", " のです。", "\n\n", "ゆえに、開発環境とテストコード上でデータの並び順が異なることがあっても、ある意味それが「SQLの仕様」ということになります。", "\n\n", "\n", "対処方法： 必ずorderを指定しよう", "\n\n", "というわけで、開発環境とテストコード上でデータの並び順が異なる場合の解決方法はもう明らかですね。", "\nそうです。orderを明示的に指定すればいいのです。", "\n\n", "さっそくコントローラのコードを次のように修正しましょう。", "\n\n", " class UsersController < ApplicationController\n   def index\n", "-    @users = User.all\n", "+    @users = User.order(:id)\n", "   end\n end\n", "\n\n", "orderを指定すれば、SQLにもORDER BY句が付与されます。", "\n\n", "puts", " ", "User", ".", "order", "(", ":id", ").", "to_sql", "\n", "#=> SELECT \"users\".* FROM \"users\" ORDER BY \"users\".\"id\" ASC", "\n", "\n\n", "こうすることで、データベースは毎回「usersテーブルのid順」にデータを並び替えることを保証してくれます。", "\n\n", "開発環境もテスト環境でも、idがAlice, Bob, Carolの順に割り振られていれば、必ずAlice, Bob, Carolの順で並ぶようになります。", "\n\n", "\n", "注意点： 並び順は必ずユニークになるようにしよう", "\n\n", "orderを指定する際に注意してほしいことが一つあります。", "\nそれは「必ずユニークになるカラムの組み合わせを指定する」ということです。", "\n\n", "たとえば、「Userの作成日時順に並び替えたい」という要件があった場合、次のようなコードは不完全なorderの指定方法になります。", "\n\n", "User", ".", "order", "(", ":created_at", ")", "\n", "\n\n", "なぜなら、（現実的にはほぼあり得ないものの）作成日時が全く同じUserが複数存在する可能性があるからです。", "\n\n", "もし、データベース上のデータが次のようになっていたら、", "User.order(:created_at)", "のままではBobとCarolの並び順が保証されません。", "\n\n", "\n", "\n", "\n", "id", "\n", "name", "\n", "created_at", "\n", "\n", "\n", "\n", "\n", "\n", "1", "\n", "Alice", "\n", "2018/09/20  7:00:00", "\n", "\n", "\n", "\n", "2", "\n", "Bob", "\n", "2018/09/20  7:30:00", "\n", "← 作成日時が同じ", "\n", "\n", "\n", "3", "\n", "Carol", "\n", "2018/09/20  7:30:00", "\n", "← 作成日時が同じ", "\n", "\n", "\n", "4", "\n", "Dave", "\n", "2018/09/20  8:00:00", "\n", "\n", "\n", "\n", "\n\n", "こういった場合は、「絶対ユニークであることが保証されるカラムの組み合わせ」をorderに指定します。", "\n\n", "たとえば、さきほどの例であれば、「作成日時が全く同じだった場合はid順で並べる」という仕様が考えられます。", "\nなぜなら、（Railsの場合は通常）idは必ずユニークなので、「作成日時もidも全く同じUser」は絶対に存在しないからです。", "\n\n", "よって、次のようにorderを指定すれば、毎回必ず並び順が保証されます。", "\n\n", "# 作成日時順、id順でUserを並び替える", "\n", "User", ".", "order", "(", ":created_at", ",", " ", ":id", ")", "\n", "\n\n", "念のため、発行されるSQLも確認しておきましょう。", "\n\n", "puts", " ", "User", ".", "order", "(", ":created_at", ",", " ", ":id", ").", "to_sql", "\n", "#=> SELECT \"users\".* FROM \"users\" ORDER BY \"users\".\"created_at\" ASC, \"users\".\"id\" ASC", "\n", "\n\n", "こうすれば作成日時が同じでも、必ずBob, Carolの順でデータが並ぶことが保証されます。", "\n\n", "このように、orderを指定する場合は「これで絶対にユニークな並び順が保証されるか？」ということをしっかり確認しながら指定するようにしてください。", "\nそうでなければ、「ある日突然テストコードや本番環境でデータの並び順が変わってしまう」といった問題が発生しかねません。", "\n\n", "\n", "追記： 必ずユニークになるカラムの組み合わせを指定する例をもう一つ", "\n\n", "この記事を公開したあとに、このようなリプライをもらいました。", "\n\n", "\n", "idまで指定したことはないですねえ。", "仕様で作成順となっていたらそれ以上細かいことは気にしないし、テストのときにわざわざ同値のcreated_atを作ったりしないからかなあ。", "— daisuke furukawa (@mogya) ", "September 20, 2018", "\n", "\n\n", "\n\n", "うーん、なるほど。", "\n上で説明した「作成日時が全く同じだった場合はid順で並べる」の例は、あくまで一つの例であり、本当に伝えたかったのは「ユニークな並び順が保証されるカラムの組み合わせを考えよう」ということでした。", "\nまた、作成日時が重複する可能性は限りなく小さいものの、「絶対ない」と言いきれないのであれば、idのように一意性を保証できるカラムを追加すべき、というのが僕のスタンスです。", "\n\n", "が、おっしゃるように「わざわざそこまでする？」と思う気持ちは理解できます。", "\nその点については持ち出した例が少し悪かったなあ、と反省しています😓", "\n\n", "というわけで、もう一つ別の例を考えてみます。", "\nたとえばこんなUserのデータがあったとします。", "\n\n", "\n", "\n", "\n", "id", "\n", "name", "\n", "email", "\n", "\n", "\n", "\n", "\n", "\n", "1", "\n", "Alice", "\n", "alice.foo@example.com", "\n", "\n", "\n", "\n", "2", "\n", "Bob", "\n", "bob.foo@example.com", "\n", "← ユーザー名が同じ", "\n", "\n", "\n", "3", "\n", "Bob", "\n", "bob.bar@example.com", "\n", "← ユーザー名が同じ", "\n", "\n", "\n", "4", "\n", "Carol", "\n", "carol.foo@example.com", "\n", "\n", "\n", "\n", "\n\n", "このデータを「名前順に並べたい」という要件があった場合、次のようなコードではダメなのはもう明らかですよね。", "\n\n", "User", ".", "order", "(", ":name", ")", "\n", "\n\n", "そうです。同姓同名のユーザーがいるかもしれないからです。", "\n実際、上のデータでは同名のBobさんが2人います。", "\n", "order(:name)", "だけだと、id=2のBobさんとid=3のBobさんの並び順は不定となります。", "\n\n", "こういう場合は、nameに加えて他に一意性を保証してくれるカラムを追加する必要があります。", "\nたとえば「usersテーブルのemail列はシステムログイン時に使用するので絶対にユニークであること（つまり、email列に一意制約が付けられていること）」が保証されているのであれば、次のようにしてnameとemailをorderに指定します。", "\n\n", "# 名前順、email順でUserを並び替える", "\n", "User", ".", "order", "(", ":name", ",", " ", ":email", ")", "\n", "\n\n", "こうすれば、毎回Alice, Bob(id=3)、Bob(id=2)、Carolの順で並ぶようになります。", "\n\n", "もちろん、nameとidの順に並べるのもOKです（どの順番にするかはシステムの要件によります）。", "\n\n", "# 名前順、id順でUserを並び替える", "\n", "User", ".", "order", "(", ":name", ",", " ", ":id", ")", "\n", "\n\n", "name, id順であれば、毎回Alice, Bob(id=2)、Bob(id=3)、Carolの順で並びます。", "\n\n", "いずれにしても、order（ORDER BY句）には一意性が保証されるようなカラムを指定することが重要です。", "\n\n", "\n", "参考: 標準SQLの規格を確認する", "\n\n", "標準SQLはISOやJISで規格が決まっています。", "\nORDER BY句を指定しない場合に並び順が不定になることもこの規格に記載されています。", "\n\n", "JIS X 3005-2:2015 データベース言語ＳＱＬ　第２部：基本機能（ＳＱＬ／Ｆｏｕｎｄａｔｉｏｎ）", "\n\n", "\n", "4.15.3  導出表", "\n（中略）", "\n<問合せ式>によって指定される表の行の順序付けは，<ORDER BY 句>を直に含む<問合せ式>に対してだけ保証される。", "\n", "\n\n", "MySQLやPostgreSQLといったメジャーなRDBMSはこの標準SQLにほぼ準拠するように作られています。", "\nそのため、データの並び順に関するこの考え方はRDBMSを問わず適用可能です。", "\n\n", "たとえば、PostgreSQLの公式ドキュメントにもこの内容は明記されています。", "\n\n", "7.5. 行の並べ替え", "\n\n", "\n", "並べ替えが選ばれなかった場合、行は無規則な順序で返されます。 そのような場合、実際の順序は、スキャンや結合計画の種類や、ディスク上に格納されている順序に依存します。 しかし、当てにしてはいけません。 明示的に並べ替え手続きを選択した場合にのみ、特定の出力順序は保証されます。", "\n", "\n\n", "\n", "まとめ", "\n\n", "というわけで、この記事では開発環境とテストコード上（または本番環境）でデータの並び順が異なる場合の原因と対処方法を紹介しました。", "\n\n", "開発環境で動かしたときは毎回同じ並び順で並ぶのだから、当然テスト環境でも同じように並ぶはず！！・・・とは考えずに、ちゃんとユニークになるorderを指定して、実行環境を問わず毎回並び順が保証される実装を心がけるようにしましょう😉", "\n\n", "\n", "あわせて読みたい", "\n\n", "orderの付け忘れを防止するgemがあるので、これを使うのもうっかりミスを防ぐ一つの手ですね。", "\n\n", "Railsでorder忘れを防止するためのgemを作りました - PIYO - Tech & Life -", "\n\n", "\n", "謝辞", "\n\n", "標準SQLの規格やPostgreSQLのドキュメントは同僚の ", "@mah_lab", " と ", "@tkawa", " が見つけてくれました。どうもありがとう〜😄", "\n"], "code": ["SELECT", " ", "\"users\"", ".", "*", " ", "FROM", " ", "\"users\"", "\n", "puts", " ", "User", ".", "all", ".", "to_sql", "\n", "#=> SELECT \"users\".* FROM \"users\"", "\n", " class UsersController < ApplicationController\n   def index\n", "-    @users = User.all\n", "+    @users = User.order(:id)\n", "   end\n end\n", "puts", " ", "User", ".", "order", "(", ":id", ").", "to_sql", "\n", "#=> SELECT \"users\".* FROM \"users\" ORDER BY \"users\".\"id\" ASC", "\n", "User", ".", "order", "(", ":created_at", ")", "\n", "# 作成日時順、id順でUserを並び替える", "\n", "User", ".", "order", "(", ":created_at", ",", " ", ":id", ")", "\n", "puts", " ", "User", ".", "order", "(", ":created_at", ",", " ", ":id", ").", "to_sql", "\n", "#=> SELECT \"users\".* FROM \"users\" ORDER BY \"users\".\"created_at\" ASC, \"users\".\"id\" ASC", "\n", "User", ".", "order", "(", ":name", ")", "\n", "# 名前順、email順でUserを並び替える", "\n", "User", ".", "order", "(", ":name", ",", " ", ":email", ")", "\n", "# 名前順、id順でUserを並び替える", "\n", "User", ".", "order", "(", ":name", ",", " ", ":id", ")", "\n"]},
{"title": ["PHPで文字列を暗号化"], "body": ["openssl_encrypt", "\n\n", "\n", "第三引数までで良いのかと思ったら警告が出る", "\n", "\n\n", "Using an empty Initialization Vector (iv) is potentially insecure and not recommended\n", "\n\n", "利用可能な暗号メソッド", "\n\n", "openssl_random_pseudo_bytesだとバイナリになりコードに書けないのでivは文字列化しています。", "\n固定する必要が無ければopenssl_random_pseudo_bytesのままでOK", "\n\n", "// バイナリを16進数に変換\n$hex_iv_string = bin2hex(openssl_random_pseudo_bytes(openssl_cipher_iv_length($method_name)));\n$iv = hex2bin($hex_iv_string);// 16進数をバイナリに変換\n", "\n\n", "または", "\n\n", "// バイナリをbase64に変換\n$base64_iv_string = base64_encode(openssl_random_pseudo_bytes(openssl_cipher_iv_length($method_name)));\n$iv = base64_decode($base64_iv_string);// base64をバイナリに変換\n", "\n\n", "$target_string", " ", "=", " ", "'暗号化したい文字列'", ";", "\n", "$method_name", " ", "=", " ", "'AES-256-CBC'", ";", "\n", "$key_string", " ", "=", " ", "'キー文字列'", ";", "\n", "// 固定する必要がある場合はこれを実行した値で固定", "\n", "$hex_iv_string", " ", "=", " ", "bin2hex", "(", "openssl_random_pseudo_bytes", "(", "openssl_cipher_iv_length", "(", "$method_name", ")));", "\n", "$iv", " ", "=", " ", "hex2bin", "(", "$hex_iv_string", ");", "\n", "// 暗号化", "\n", "$base64_encrypt_string", " ", "=", " ", "openssl_encrypt", "(", "\n    ", "$target_string", ",", "\n    ", "$method_name", ",", "\n    ", "$key_string", ",", "\n    ", "0", ",", "\n    ", "$iv", "\n", ");", "\n\n", "// 復号", "\n", "$decrypt_string", " ", "=", " ", "openssl_decrypt", "(", "\n    ", "$base64_encrypt_string", ",", "\n    ", "$method_name", ",", "\n    ", "$key_string", ",", "\n    ", "0", ",", "\n    ", "$iv", "\n", ");", "\n\n", "var_dump", "(", "$target_string", ");", "\n", "var_dump", "(", "$base64_encrypt_string", ");", "\n", "var_dump", "(", "$decrypt_string", ");", "\n", "\n\n", "string(27) \"暗号化したい文字列\"\nstring(44) \"BLUJX2CNbIy+kSps/0xhNt7yMDZIBuomh5jpuVQD+aQ=\"\nstring(27) \"暗号化したい文字列\"\n", "\n\n", "$target_string", " ", "=", " ", "'暗号化したい文字列'", ";", "\n", "$method_name", " ", "=", " ", "'AES-256-CBC'", ";", "\n", "$key_string", " ", "=", " ", "'キー文字列'", ";", "\n", "// 固定する必要がある場合はこれを実行した値で固定", "\n", "$hex_iv_string", " ", "=", " ", "bin2hex", "(", "openssl_random_pseudo_bytes", "(", "openssl_cipher_iv_length", "(", "$method_name", ")));", "\n", "$iv", " ", "=", " ", "hex2bin", "(", "$hex_iv_string", ");", "\n\n", "// 暗号化", "\n", "$encrypt_string", " ", "=", " ", "openssl_encrypt", "(", "\n    ", "$target_string", ",", "\n    ", "$method_name", ",", "\n    ", "$key_string", ",", "\n    ", "OPENSSL_RAW_DATA", ",", "\n    ", "$iv", "\n", ");", "\n\n", "$hex_encrypt_string", " ", "=", " ", "bin2hex", "(", "$encrypt_string", ");", "// バイナリを16進数に変換", "\n\n", "// 復号", "\n", "$decrypt_string", " ", "=", " ", "openssl_decrypt", "(", "\n    ", "hex2bin", "(", "$hex_encrypt_string", "),", "// 16進数をバイナリに変換", "\n    ", "$method_name", ",", "\n    ", "$key_string", ",", "\n    ", "OPENSSL_RAW_DATA", ",", "\n    ", "$iv", "\n", ");", "\n\n\n", "var_dump", "(", "$target_string", ");", "\n", "var_dump", "(", "$encrypt_hex_string", ");", "\n", "var_dump", "(", "$decrypt_string", ");", "\n", "\n\n", "string(27) \"暗号化したい文字列\"\nstring(64) \"c327a6ce0bc8e8b88078652dc4a8ce29d1da36444f8cce45340639104c6f04e0\"\nstring(27) \"暗号化したい文字列\"\n", "\n\n", "$target_string", " ", "=", " ", "'暗号化したい文字列'", ";", "\n", "$method_name", " ", "=", " ", "'AES-256-CBC'", ";", "\n", "$key_string", " ", "=", " ", "'キー文字列'", ";", "\n", "// 固定する必要がある場合はこれを実行した値で固定", "\n", "$hex_iv_string", " ", "=", " ", "bin2hex", "(", "openssl_random_pseudo_bytes", "(", "openssl_cipher_iv_length", "(", "$method_name", ")));", "\n", "$iv", " ", "=", " ", "hex2bin", "(", "$hex_iv_string", ");", "\n\n", "// 暗号化", "\n", "$encrypt_string", " ", "=", " ", "openssl_encrypt", "(", "\n    ", "$target_string", ",", "\n    ", "$method_name", ",", "\n    ", "$key_string", ",", "\n    ", "OPENSSL_RAW_DATA", ",", "\n    ", "$iv", "\n", ");", "\n\n", "$base64_encrypt_string", " ", "=", " ", "base64_encode", "(", "$encrypt_string", ");", "// バイナリをbase64エンコード", "\n\n", "// 復号", "\n", "$decrypt_string", " ", "=", " ", "openssl_decrypt", "(", "\n    ", "base64_decode", "(", "$base64_encrypt_string", "),", "// base64デコードしてバイナリに変換", "\n    ", "$method_name", ",", "\n    ", "$key_string", ",", "\n    ", "OPENSSL_RAW_DATA", ",", "\n    ", "$iv", "\n", ");", "\n\n", "var_dump", "(", "$target_string", ");", "\n", "var_dump", "(", "$base64_encrypt_string", ");", "\n", "var_dump", "(", "$decrypt_string", ");", "\n", "\n\n", "string(27) \"暗号化したい文字列\"\nstring(44) \"TVg7Xt1Z0PHTmzhCTVEMukvU7nHtgDSfz/qCiqs5/lI=\"\nstring(27) \"暗号化したい文字列\"\n", "\n"], "code": ["Using an empty Initialization Vector (iv) is potentially insecure and not recommended\n", "// バイナリを16進数に変換\n$hex_iv_string = bin2hex(openssl_random_pseudo_bytes(openssl_cipher_iv_length($method_name)));\n$iv = hex2bin($hex_iv_string);// 16進数をバイナリに変換\n", "// バイナリをbase64に変換\n$base64_iv_string = base64_encode(openssl_random_pseudo_bytes(openssl_cipher_iv_length($method_name)));\n$iv = base64_decode($base64_iv_string);// base64をバイナリに変換\n", "$target_string", " ", "=", " ", "'暗号化したい文字列'", ";", "\n", "$method_name", " ", "=", " ", "'AES-256-CBC'", ";", "\n", "$key_string", " ", "=", " ", "'キー文字列'", ";", "\n", "// 固定する必要がある場合はこれを実行した値で固定", "\n", "$hex_iv_string", " ", "=", " ", "bin2hex", "(", "openssl_random_pseudo_bytes", "(", "openssl_cipher_iv_length", "(", "$method_name", ")));", "\n", "$iv", " ", "=", " ", "hex2bin", "(", "$hex_iv_string", ");", "\n", "// 暗号化", "\n", "$base64_encrypt_string", " ", "=", " ", "openssl_encrypt", "(", "\n    ", "$target_string", ",", "\n    ", "$method_name", ",", "\n    ", "$key_string", ",", "\n    ", "0", ",", "\n    ", "$iv", "\n", ");", "\n\n", "// 復号", "\n", "$decrypt_string", " ", "=", " ", "openssl_decrypt", "(", "\n    ", "$base64_encrypt_string", ",", "\n    ", "$method_name", ",", "\n    ", "$key_string", ",", "\n    ", "0", ",", "\n    ", "$iv", "\n", ");", "\n\n", "var_dump", "(", "$target_string", ");", "\n", "var_dump", "(", "$base64_encrypt_string", ");", "\n", "var_dump", "(", "$decrypt_string", ");", "\n", "string(27) \"暗号化したい文字列\"\nstring(44) \"BLUJX2CNbIy+kSps/0xhNt7yMDZIBuomh5jpuVQD+aQ=\"\nstring(27) \"暗号化したい文字列\"\n", "$target_string", " ", "=", " ", "'暗号化したい文字列'", ";", "\n", "$method_name", " ", "=", " ", "'AES-256-CBC'", ";", "\n", "$key_string", " ", "=", " ", "'キー文字列'", ";", "\n", "// 固定する必要がある場合はこれを実行した値で固定", "\n", "$hex_iv_string", " ", "=", " ", "bin2hex", "(", "openssl_random_pseudo_bytes", "(", "openssl_cipher_iv_length", "(", "$method_name", ")));", "\n", "$iv", " ", "=", " ", "hex2bin", "(", "$hex_iv_string", ");", "\n\n", "// 暗号化", "\n", "$encrypt_string", " ", "=", " ", "openssl_encrypt", "(", "\n    ", "$target_string", ",", "\n    ", "$method_name", ",", "\n    ", "$key_string", ",", "\n    ", "OPENSSL_RAW_DATA", ",", "\n    ", "$iv", "\n", ");", "\n\n", "$hex_encrypt_string", " ", "=", " ", "bin2hex", "(", "$encrypt_string", ");", "// バイナリを16進数に変換", "\n\n", "// 復号", "\n", "$decrypt_string", " ", "=", " ", "openssl_decrypt", "(", "\n    ", "hex2bin", "(", "$hex_encrypt_string", "),", "// 16進数をバイナリに変換", "\n    ", "$method_name", ",", "\n    ", "$key_string", ",", "\n    ", "OPENSSL_RAW_DATA", ",", "\n    ", "$iv", "\n", ");", "\n\n\n", "var_dump", "(", "$target_string", ");", "\n", "var_dump", "(", "$encrypt_hex_string", ");", "\n", "var_dump", "(", "$decrypt_string", ");", "\n", "string(27) \"暗号化したい文字列\"\nstring(64) \"c327a6ce0bc8e8b88078652dc4a8ce29d1da36444f8cce45340639104c6f04e0\"\nstring(27) \"暗号化したい文字列\"\n", "$target_string", " ", "=", " ", "'暗号化したい文字列'", ";", "\n", "$method_name", " ", "=", " ", "'AES-256-CBC'", ";", "\n", "$key_string", " ", "=", " ", "'キー文字列'", ";", "\n", "// 固定する必要がある場合はこれを実行した値で固定", "\n", "$hex_iv_string", " ", "=", " ", "bin2hex", "(", "openssl_random_pseudo_bytes", "(", "openssl_cipher_iv_length", "(", "$method_name", ")));", "\n", "$iv", " ", "=", " ", "hex2bin", "(", "$hex_iv_string", ");", "\n\n", "// 暗号化", "\n", "$encrypt_string", " ", "=", " ", "openssl_encrypt", "(", "\n    ", "$target_string", ",", "\n    ", "$method_name", ",", "\n    ", "$key_string", ",", "\n    ", "OPENSSL_RAW_DATA", ",", "\n    ", "$iv", "\n", ");", "\n\n", "$base64_encrypt_string", " ", "=", " ", "base64_encode", "(", "$encrypt_string", ");", "// バイナリをbase64エンコード", "\n\n", "// 復号", "\n", "$decrypt_string", " ", "=", " ", "openssl_decrypt", "(", "\n    ", "base64_decode", "(", "$base64_encrypt_string", "),", "// base64デコードしてバイナリに変換", "\n    ", "$method_name", ",", "\n    ", "$key_string", ",", "\n    ", "OPENSSL_RAW_DATA", ",", "\n    ", "$iv", "\n", ");", "\n\n", "var_dump", "(", "$target_string", ");", "\n", "var_dump", "(", "$base64_encrypt_string", ");", "\n", "var_dump", "(", "$decrypt_string", ");", "\n", "string(27) \"暗号化したい文字列\"\nstring(44) \"TVg7Xt1Z0PHTmzhCTVEMukvU7nHtgDSfz/qCiqs5/lI=\"\nstring(27) \"暗号化したい文字列\"\n"]},
{"title": ["GCPチュートリアル試行「ストレージとデータベース」"], "body": ["\n", "\n", "今日のお題", "\n\n", "GCPの数あるサービスの中でも特に「ストレージとデータベース（一部、ビッグデータ）」に関して、", "\nどういう時にどのサービスを使うべきなのかを知りたく、ドキュメントを漁ってみる。", "\n\n", "\n", "経緯", "\n\n", "実は、このお題に対しては以下のサイトに使い分け方が載っている。", "\n", "https://cloud.google.com/storage-options/?hl=ja", "\n\n", "ちなみに、↑からFirebase分を端折り、拙い日本語で表現してみたのが↓", "\n", "\n\n", "なんとなくは、わかる。でも、仕事で「こういう時はこのサービスだ！」と自信を持って言えない。", "\nまあ、仕事レベルでとなると、実際に経験を積まないと到達できない領域ではあるけど、せめてもう少し上の図より正確な「モノサシ」が欲しい。", "\nというわけで、まずはドキュメント漁り。", "\n調べる観点としては、「どういう時に、なぜ他のサービスでなくてこのサービスなの？」がわかること。", "\n\n", "\n", "調査", "\n\n", "\n", "GCS (Google Cloud Storage)", "\n\n", "\n", "■参考", "\n\n", "https://cloud.google.com/storage/docs/?hl=ja", "\n\n", "\n", "■ユースケース", "\n\n", "\n", "マルチメディア（画像・音楽・動画）の保存とストリーミング", "\n", "複数のVMで読み取り専用データの共有", "\n", "静的ウェブサイトのホスティング", "\n", "VMのバックアップ", "\n", "\n\n", "\n", "■特徴的な機能", "\n\n", "\n", "用途別のストレージクラス", "\n", "オブジェクトが変更されるとCloud Pub/Sub（or Cloud Functions）に通知", "\n", "オブジェクトのバージョニング", "\n", "バケット・オブジェクトのライフサイクル管理", "\n", "時間制限のある署名付きURL", "\n", "\n\n", "\n", "Cloud SQL", "\n\n", "\n", "■参考", "\n\n", "https://cloud.google.com/sql/docs/mysql/?hl=ja", "\n\n", "\n", "■ユースケース", "\n\n", "\n", "リレーショナル・データベースを必要とする、ただしオートスケールは不要なあらゆるケース", "\n", "ウェブサイト・ブログ・CMS等", "\n", "ERP・CRM・Eコマース等", "\n", "\n\n", "\n", "■特徴的な機能", "\n\n", "\n", "自動フェイルオーバーにより複数のゾーン間でデータを複製", "\n", "自動orオンデマンドのバックアップとポイントインタイムリカバリ", "\n", "Cloud SQL Proxy", "\n", "\n\n", "\n", "Gloud Datastore", "\n\n", "\n", "■参考", "\n\n", "https://cloud.google.com/datastore/docs/?hl=ja", "\n\n", "\n", "■ユースケース", "\n\n", "\n", "ゲームデータ", "\n", "\n\n", "\n", "■特徴的な機能", "\n\n", "\n", "アトミックトランザクション（結果が「すべて成功」と「何も起こらない」のどちらかになる一連のオペレーションを実行可能）", "\n", "分散アーキテクチャによるオートスケーリング", "\n", "祖先クエリによる強整合性クエリとその他の結果整合性クエリ", "\n", "複合インデックス", "\n", "\n\n", "\n", "Spanner", "\n\n", "\n", "■参考", "\n\n", "https://cloud.google.com/spanner/docs/?hl=ja", "\n\n", "\n", "■ユースケース", "\n\n", "\n", "ミッションクリティカルなシステム（AdTech・金融サービス等）", "\n", "\n\n", "\n", "■特徴的な機能", "\n\n", "\n", "強く一貫した二次インデックスを含む強い一貫性", "\n", "TrueTimeと外部整合性", "\n", "\n\n", "\n", "BigQuery", "\n\n", "\n", "■参考", "\n\n", "https://cloud.google.com/bigquery/docs/?hl=ja", "\n\n", "\n", "■ユースケース", "\n\n", "\n", "大容量データの分析レポート", "\n", "SQLを用いたビッグデータ処理", "\n", "\n\n", "\n", "■特徴的な機能", "\n\n", "\n", "スロット", "\n", "\n\n", "\n", "Bigtable", "\n\n", "\n", "■参考", "\n\n", "https://cloud.google.com/bigtable/docs/?hl=ja", "\n\n", "\n", "■ユースケース", "\n\n", "\n", "低レイテンシーな読み書きを要するシステム（IoT・AdTech・金融サービス等）", "\n", "時系列データを扱うシステム", "\n", "購入履歴や顧客の好み等のマーケティングデータを扱うシステム", "\n", "グラフデータを扱うシステム", "\n", "\n\n", "\n", "■特徴的な機能", "\n\n", "\n", "散在して格納されるテーブルであり、数十億行、数千列の規模にスケール可能", "\n", "時系列データ", "\n", "\n\n", "\n", "まとめ", "\n\n", "おおよそのユースケースや特徴的な機能は集約してみたものの、案件として用途を聞いて「それなら、◯◯！」と即決できるまでには理解進まず・・・。", "\nまだまだドキュメントの読み込みも実践も必要。", "\n"], "code": []},
{"title": ["Python3 + bottle + uwsgi + nginxをdockerで構築してみた"], "body": ["nginx と pythonのbottleを別コンテナで構築したかった。", "\nそこでdocker-composeで複数のコンテナを作成した。", "\n\n", "\n", "利用する技術", "\n\n", "\n", "python3", "\n", "bottle", "\n", "uwsgi", "\n", "nginx", "\n", "docker", "\n", "\n\n", "\n", "利用するファイルとディレクトリ階層", "\n\n", "/mysystem\n  docker-compose.yml\n  /myapp\n    Dockerfile\n    uwsgi.ini\n    app.py\n  /web\n    Dockerfile\n    nginx.conf\n    index.html\n", "\n\n", "\n", "myapp/app.py", "\n\n", "from", " ", "bottle", " ", "import", " ", "route", ",", " ", "run", ",", " ", "default_app", "\n\n", "@route", "(", "'/test'", ")", "\n", "def", " ", "test", "():", "\n    ", "return", " ", "'test success'", "\n", "if", " ", "__name__", " ", "==", " ", "'__main__'", ":", "\n    ", "run", "(", "host", "=", "'0.0.0.0'", ",", " ", "port", "=", "3031", ",", " ", "debug", "=", "True", ",", " ", "reloader", "=", "True", ")", "\n", "else", ":", "\n    ", "application", " ", "=", " ", "default_app", "()", "\n", "\n\n", "hostの部分はdockerに外部からアクセスするには", "'0.0.0.0'", "と指定する。", "\ndefault_app()は先頭でbottleからimportする。", "\n\n", "\n", "myapp/uwsgi.ini", "\n\n", "uwsgiの設定ファイル", "\n\n", "[uwsgi]\nmaster = true\nwsgi-file = app.py\nsocket = :3031\nmax-requests = 5000\nlogto = uwsgi.log\n", "\n\n", "\n", "myapp/Dockerfile", "\n\n", "Pythonアプリケーション用のDockerfile", "\n\n", "From python:3\n\nRUN pip install --upgrade pip\nRUN pip install bottle\nRUN pip install uwsgi\n\nCOPY app.py /opt/myapp\nCOPY uwsgi.ini /opt/myapp\n\n", "\n\n", "\n", "web/nginx.conf", "\n\n", "nginxの設定ファイル", "\n\n", "user  nginx;\nworker_processes  1;\n\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    #include /etc/nginx/conf.d/*.conf;\n    upstream uwsgi {\n        server uwsgi:3031;\n    }\n\n    server {\n        listen 80;\n        charset     utf-8;\n\n        location / {\n            root   /usr/share/nginx/html;\n            index  index.html index.htm;\n        }\n        location /test {\n           uwsgi_pass uwsgi;\n           include uwsgi_params;\n        }\n    }\n}\n\n", "\n\n", "include /etc/nginx/conf.d/*.conf;", "の部分をコメントアウトし、", "upstream uwsgi", "以下を追記した。", "\nもちろんdefault.confなどを/etc/nginx/conf.d/に配置して利用してもOK。", "\n\n", "\n", "web/Dockerfile", "\n\n", "nginx用のDockerfile", "\n\n", "FROM nginx\n\nCOPY index.html /usr/share/nginx/html\n\n", "\n\n", "\n", "docker-compose.yml", "\n\n", "複数のDockerfileをまとめて処理できる。", "\n\n", "version: '2'\nservices:\n  uwsgi:\n    container_name: myapp\n    build: ./myapp\n    command: uwsgi --ini uwsgi.ini\n  nginx:\n    container_name: myweb\n    build: ./web\n    links:\n      - uwsgi\n    volumes_from:\n      - uwsgi\n    ports:\n      - \"0.0.0.0:80:80\"\n\n", "\n\n", "\n", "コンテナ作成と実行", "\n\n", "\n", "dockerコンテナ作成", "\n\n", "docker-compose.ymlがあるディレクトリで以下のコマンド", "\n\n", "docker-compose build\n", "\n\n", "\n", "dockerコンテナ起動", "\n\n", "docker-compose up\n", "\n\n", "バックグラウンド実行なら", "\n\n", "docker-compose up -d\n", "\n\n", "\n", "dockerコンテナ停止", "\n\n", "docker-compose down\n", "\n\n", "stop + rmしてくれる", "\n\n", "\n", "備考", "\n\n", "さくらのVPSにdocker-composeがinstallされてなかったので以下を参照してinstallした。", "\n", "https://docs.docker.com/compose/install/", "\n\n", "実行権限が必要なので以下を参照して権限付与した。", "\n", "https://qiita.com/DQNEO/items/da5df074c48b012152ee", "\n"], "code": ["/mysystem\n  docker-compose.yml\n  /myapp\n    Dockerfile\n    uwsgi.ini\n    app.py\n  /web\n    Dockerfile\n    nginx.conf\n    index.html\n", "from", " ", "bottle", " ", "import", " ", "route", ",", " ", "run", ",", " ", "default_app", "\n\n", "@route", "(", "'/test'", ")", "\n", "def", " ", "test", "():", "\n    ", "return", " ", "'test success'", "\n", "if", " ", "__name__", " ", "==", " ", "'__main__'", ":", "\n    ", "run", "(", "host", "=", "'0.0.0.0'", ",", " ", "port", "=", "3031", ",", " ", "debug", "=", "True", ",", " ", "reloader", "=", "True", ")", "\n", "else", ":", "\n    ", "application", " ", "=", " ", "default_app", "()", "\n", "[uwsgi]\nmaster = true\nwsgi-file = app.py\nsocket = :3031\nmax-requests = 5000\nlogto = uwsgi.log\n", "From python:3\n\nRUN pip install --upgrade pip\nRUN pip install bottle\nRUN pip install uwsgi\n\nCOPY app.py /opt/myapp\nCOPY uwsgi.ini /opt/myapp\n\n", "user  nginx;\nworker_processes  1;\n\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    #include /etc/nginx/conf.d/*.conf;\n    upstream uwsgi {\n        server uwsgi:3031;\n    }\n\n    server {\n        listen 80;\n        charset     utf-8;\n\n        location / {\n            root   /usr/share/nginx/html;\n            index  index.html index.htm;\n        }\n        location /test {\n           uwsgi_pass uwsgi;\n           include uwsgi_params;\n        }\n    }\n}\n\n", "FROM nginx\n\nCOPY index.html /usr/share/nginx/html\n\n", "version: '2'\nservices:\n  uwsgi:\n    container_name: myapp\n    build: ./myapp\n    command: uwsgi --ini uwsgi.ini\n  nginx:\n    container_name: myweb\n    build: ./web\n    links:\n      - uwsgi\n    volumes_from:\n      - uwsgi\n    ports:\n      - \"0.0.0.0:80:80\"\n\n", "docker-compose build\n", "docker-compose up\n", "docker-compose up -d\n", "docker-compose down\n"]},
{"title": ["Decentralandで仮想世界を構築する（その２）"], "body": ["\n", "\n", "はじめに", "\n\n", "前回", "、Decentralandの概要と簡単なアーキテクチャの説明をしました。", "\n今回からはDecentraland SDKを用いて実際にコンテンツを作っていきたいと思います。", "\nまずはSDKのインストールと、シーンの雛形作成までやります。", "\n\n", "\n", "Decentraland SDK", "\n\n", "\n", "インストール", "\n\n", "何はともあれDecentraland SDKをインストールしましょう。", "\nnpmでグローバルインストールします。", "\n\n", "npm ", "install", " ", "-g", " decentraland\n", "\n\n", "もしくは ", "\n\n", "yarn global add decentraland\n", "\n\n", "無事インストールが完了すると、 ", "dcl", " コマンドが利用できるようになります。", "\n\n", "\n", "最初のシーンを作る", "\n\n", "次に最初のコンテンツ(以降 シーン)の雛形を作ります。", "\nシーン作成用のディレクトリを作ってそこに移動し、下記コマンドを実行します。", "\n\n", "dcl init\n", "\n\n", "すると対話形式で以下のことを聞かれます。", "\n", "\n", "1. Scene title", "\nシーンのタイトルを入力します。", "\n", "2. Your ethereum address", " ", "\nEthereumアドレス。開発用なので、私はRopstenネットワークのアドレスを入れました。空でもOK。", "\n", "3. Your name", " ", "\n開発者名を入力します。空でもOK。", "\n", "4. Your email", " ", "\nEmailアドレスを入力します。空でもOK。", "\n", "5. Parcels comprising the scene", "\nパーセルの座標を入力します。利用用途がいまいち不明でした。空でもOK。", "\n", "6. Which scene template would you like to generate?", "\nシーンのタイプを指定します。今回は ", "Basic", " を選択します。", "\n\n", "すべての質問に答え終わったら、依存モジュールのインストールが行われ、シーンが構築されます。ディレクトリ構成は以下のようになります。", "\n", "\n\n", "\n", "各々のファイルの使用用途", "\n\n", "\n", "\n", "scene.tsx", " シーンのエントリーポイントとなるプログラムファイル", "\n", "\n", "scene.json", " シーンのメタデータ記述ファイル", "\n", "\n", "package.json and package-lock.json", " モジュールの依存関係定義ファイル", "\n", "\n", "build.json", " ビルド用コンフィグファイル", "\n", "\n", "tsconfig.json", ": Typescriptのコンフィグファイル", "\n", "\n\n", "\n", "シーンのプレビュー", "\n\n", "シーンの雛形ができ、それぞれのファイルの用途がわかったところで一度ビルドしてシーンを見てみましょう。下記コマンドを実行してください。", "\n\n", "dcl start\n", "\n\n", "実行すると8000番ポートでサーバが立ち上がり、ブラウザからシーンが覗けます。（もちろんOculus GoなどのHMDからでも確認できます）", "\n", "\n\n", "方向はマウスでグリグリ動かせます。移動はW(↑)S(↓)A(←)D(→)です。", "\n実際に見るとちょっとテンション上がるので是非。", "\n\n", "その3へ続きます。", "\n\n", "\n", "補足", "\n\n", "シーンのタイプを今回", "Basic", "にしましたが、他のタイプについてそれぞれ補足説明しておきます。", "\n\n", "Basic scene", "\nboxやsphereなどの", "glTFモデル", "の置かれたノーマルシーンです。ちょうどA-Frameのデモみたいなやつです。", "\n\n", "Interactive scene", "\nドアの開閉を制御するようなインタラクション付きのシーンです。ドアの開閉はクリックイベントを拾ってドアのState(開閉状態)を切り替えています。インタラクティブなコンテンツを作っていきたい方はこちらを。", "\n\n", "Remote scene", "\nInteractive sceneと同様にドアの開閉を制御するシーンですが、Stateはサーバで管理されています。通信はwebSocketを使用しています。インタラクティブなコンテンツ + サーバ通信を考えている方はこちらを選択して参考にするのが良いかと思います。", "\n\n", "Static scene", "\nXMLに記述されたシーンです。プログラムでシーンを制御できません。見て楽しみたいだけという方はこちらで。", "\n"], "code": ["npm ", "install", " ", "-g", " decentraland\n", "yarn global add decentraland\n", "dcl init\n", "dcl start\n"]},
{"title": ["C++の整数型一覧表"], "body": ["\n", "\n", "一覧表", "\n\n", "\n", "\n", "\n", "型名", "\n", "サイズ", "\n", "符号", "\n", "接尾辞", "\n", "include/リリース", "\n", "\n", "\n", "\n", "\n", "size_t", "\n", "\n", "なし", "\n", "\n", "\n", "stddef.h", "(C, C++), ", "cstddef", "(C++)", "\n", "\n", "\n", "int8_t", "\n", "8ビット", "\n", "あり", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "uint8_t", "\n", "8ビット", "\n", "なし", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "int_fast8_t", "\n", "(高速)8ビット以上", "\n", "あり", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "uint_fast8_t", "\n", "(高速)8ビット以上", "\n", "なし", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "int_least8_t", "\n", "(最小)8ビット以上", "\n", "あり", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "uint_least8_t", "\n", "(最小)8ビット以上", "\n", "なし", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "char", "\n", "8ビット", "\n", "\n", "\n", "C, C++", "\n", "\n", "\n", "signed char", "\n", "8ビット", "\n", "あり", "\n", "\n", "C, C++", "\n", "\n", "\n", "unsigned char", "\n", "8ビット", "\n", "なし", "\n", "\n", "C, C++", "\n", "\n", "\n", "int16_t", "\n", "16ビット", "\n", "あり", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "uint16_t", "\n", "16ビット", "\n", "なし", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "int_fast16_t", "\n", "(高速)16ビット以上", "\n", "あり", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "uint_fast16_t", "\n", "(高速)16ビット以上", "\n", "なし", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "int_least16_t", "\n", "(最小)16ビット以上", "\n", "あり", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "uint_least16_t", "\n", "(最小)16ビット以上", "\n", "なし", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "short", "\n", "16ビット以上", "\n", "あり", "\n", "\n", "C, C++", "\n", "\n", "\n", "signed short", "\n", "16ビット以上", "\n", "あり", "\n", "\n", "C, C++", "\n", "\n", "\n", "signed short int", "\n", "16ビット以上", "\n", "あり", "\n", "\n", "C, C++", "\n", "\n", "\n", "short int", "\n", "16ビット以上", "\n", "あり", "\n", "\n", "C, C++", "\n", "\n", "\n", "unsigned short", "\n", "16ビット以上", "\n", "なし", "\n", "\n", "C, C++", "\n", "\n", "\n", "unsigned short int", "\n", "16ビット以上", "\n", "なし", "\n", "\n", "C, C++", "\n", "\n", "\n", "int", "\n", "16ビット以上", "\n", "あり", "\n", "なし", "\n", "C, C++", "\n", "\n", "\n", "signed", "\n", "16ビット以上", "\n", "あり", "\n", "なし", "\n", "C, C++", "\n", "\n", "\n", "signed int", "\n", "16ビット以上", "\n", "あり", "\n", "なし", "\n", "C, C++", "\n", "\n", "\n", "unsigned", "\n", "16ビット以上", "\n", "なし", "\n", "u, U", "\n", "C, C++", "\n", "\n", "\n", "unsigned int int", "\n", "16ビット以上", "\n", "なし", "\n", "u, U", "\n", "C, C++", "\n", "\n", "\n", "int32_t", "\n", "32ビット", "\n", "あり", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "uint32_t", "\n", "32ビット", "\n", "なし", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "int_fast32_t", "\n", "(高速)32ビット以上", "\n", "あり", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "uint_fast32_t", "\n", "(高速)32ビット以上", "\n", "なし", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "int_least32_t", "\n", "(最小)32ビット以上", "\n", "あり", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "uint_least32_t", "\n", "(最小)32ビット以上", "\n", "なし", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "long", "\n", "32ビット以上", "\n", "あり", "\n", "l, L", "\n", "C, C++", "\n", "\n", "\n", "signed long", "\n", "32ビット以上", "\n", "あり", "\n", "l, L", "\n", "C, C++", "\n", "\n", "\n", "signed long int", "\n", "32ビット以上", "\n", "あり", "\n", "l, L", "\n", "C, C++", "\n", "\n", "\n", "long int", "\n", "32ビット以上", "\n", "あり", "\n", "l, L", "\n", "C, C++", "\n", "\n", "\n", "unsigned long", "\n", "32ビット以上", "\n", "なし", "\n", "ul, UL,Ul, uL", "\n", "C, C++", "\n", "\n", "\n", "unsigned long int", "\n", "32ビット以上", "\n", "なし", "\n", "ul, UL,Ul, uL", "\n", "C, C++", "\n", "\n", "\n", "int64_t", "\n", "64ビット", "\n", "あり", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "uint64_t", "\n", "64ビット", "\n", "なし", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "int_fast64_t", "\n", "(高速)64ビット以上", "\n", "あり", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "uint_fast64_t", "\n", "(高速)64ビット以上", "\n", "なし", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "int_least64_t", "\n", "(最小)64ビット以上", "\n", "あり", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "uint_least64_t", "\n", "(最小)64ビット以上", "\n", "なし", "\n", "\n", "\n", "stdint.h", "(C99, C++11), ", "cstdint", "(C++11)", "\n", "\n", "\n", "long long", "\n", "64ビット以上", "\n", "あり", "\n", "ll, LL", "\n", "C99, C++11", "\n", "\n", "\n", "signed long long", "\n", "64ビット以上", "\n", "あり", "\n", "ll, LL", "\n", "C99, C++11", "\n", "\n", "\n", "signed long long int", "\n", "64ビット以上", "\n", "あり", "\n", "ll, LL", "\n", "C99, C++11", "\n", "\n", "\n", "long long int", "\n", "64ビット以上", "\n", "あり", "\n", "ll, LL", "\n", "C99, C++11", "\n", "\n", "\n", "unsigned long long", "\n", "64ビット以上", "\n", "なし", "\n", "ull, ULL,Ull, uLL", "\n", "C99, C++11", "\n", "\n", "\n", "unsigned long long int", "\n", "64ビット以上", "\n", "なし", "\n", "ull, ULL,Ull, uLL", "\n", "C99, C++11", "\n", "\n", "\n", "\n\n", "不備があったり改善点がある場合はコメントお願いします。", "\n\n", "\n", "参考", "\n\n", ">> 【cstdint】C++11で追加された サイズ厳密な整数型", "\n", ">> cstdint", "\n", ">> 基本型", "\n", ">> C言語/記法", "\n", ">> char の符号", "\n"], "code": []},
{"title": ["RaspberryPi(受信)とAWS IoT Core(送信)でMQTT通信をしてみた"], "body": ["\n", "\n", "とにかくAWS IoTとRaspberryPiをMQTT通信させたい。という方に作業内容だけをまとめました。", "\n\n", "まず、全体の作業内容を説明します。", "\n1. AWS IoTにRaspberryPiを登録", "\n- 証明書の取得", "\n- ポリシーの追加", "\n2. RaspberryPiプログラムの作成", "\n3. 通信テスト", "\n\n", "\n", "AWS IoTへRaspberryPiを登録", "\n\n", "AWSのWebページ", "⇨コンソールへログイン⇨サービス⇨IoTCore", "\n\n", "管理→モノ→作成行きます。", "\n", "\n\n", "単一のモノを登録する", "\n", "\n\n", "モノの名前を登録（他の項目は自由に。未記入でも大丈夫です）", "\n", "\n\n", "\n", "証明書を取得します", "\n\n", "\nダウンロード（モノの証明書、パブリックキー、プライベートキー、ルートCA)", "\n", "\n\n", "\n", "ポリシーを設定します", "\n\n", "セキュリティ機能の一つ、ポリシーを設定します。操作やAWS上のデータベースなどの他の", "\nポリシーとは、権限のことで、アクションやアクセスリソースを決めます。", "\n下の写真のようにアクションとリソースを設定します。", "\n", "\n\n", "証明書のページから-ポリシーの", "\nアタッチを行って、上で作成したポリシーをアタッチします。", "\n", "\n\n", "\n", "RaspberryPiのプログラムを作成します。", "\n\n", "MQTTのクライアントには", "paho mqtt", "を利用します。", "\nRaspberryPiに入って、pipを利用してpaho mqttを入れます。", "\n\n", "sudo apt-get install python-pip\n\npip install paho-mqtt\n", "\n\n", "\n", "ラズパイのプログラムです", "\n\n", "下記コードを作成ください。XXXX.〜は各々のパラメータを入れてください。", "\n作成後はscpモジュールなどでPC→MQTTに転送できます。証明書とプライベートキー、パブリックキーも転送します。同じ階層に入れてください。", "\n\n", "\n", "paho_mqtt_test.py", "\n", "import", " ", "paho.mqtt.client", "\n", "import", " ", "ssl", "\n", "import", " ", "subprocess", "\n", "import", " ", "json", "\n\n", "endpoint", " ", "=", " ", "\"XXXX.amazonaws.com\"", "#AWSのエンドポイント", "\n", "port", " ", "=", " ", "8883", "#AWSのポート", "\n", "topic_to_aws", " ", "=", "\"Raspi3_to\"", "\n", "topic_from_aws", " ", "=", " ", "\"Raspi3_from\"", "\n", "rootCA", " ", "=", " ", "\"VeriSign.pem\"", "#ルート証明書", "\n", "cert", " ", "=", " ", "\"XXXX-certificate.pem.crt\"", "#デバイス証明書", "\n", "key", " ", "=", " ", "\"XXXX-private.pem.key\"", "#keyを設定", "\n\n", "def", " ", "on_connect", "(", "client", ",", " ", "userdata", ",", " ", "flags", ",", " ", "respons_code", "):", "\n    ", "print", "(", "\"Connected\"", ")", "\n    ", "client", ".", "subscribe", "(", "topic_to_aws", ")", "#サブスクライブする", "\n\n", "def", " ", "on_message", "(", "client", ",", " ", "userdata", ",", " ", "msg", "):", "\n    ", "print", "(", "msg", ".", "topic", ")", "\n\n", "if", " ", "__name__", " ", "==", " ", "'__main__'", ":", "\n    ", "#ここら辺はpahoのリファレンスを参照。", "\n    ", "#https://www.eclipse.org/paho/clients/python/docs/#connect-reconnect-disconnect ", "\n    ", "client", " ", "=", " ", "paho", ".", "mqtt", ".", "client", ".", "Client", "()", "\n    ", "client", ".", "on_connect", " ", "=", " ", "on_connect", "\n    ", "client", ".", "on_message", " ", "=", " ", "on_message", "\n    ", "client", ".", "tls_set", "(", "ca_certs", "=", "rootCA", ",", " ", "certfile", "=", "cert", ",", " ", "keyfile", "=", "key", ",", " ", "cert_reqs", "=", "ssl", ".", "CERT_REQUIRED", ",", " ", "tls_version", "=", "ssl", ".", "PROTOCOL_TLSv1_2", ",", " ", "ciphers", "=", "None", ")", "\n    ", "client", ".", "connect", "(", "endpoint", ",", " ", "port", "=", "port", ",", " ", "keepalive", "=", "60", ")", "\n", "print", "(", "\"StartScript\"", ")", "\n", "client", ".", "loop_forever", "()", "\n", "\n", "\n\n", "\n", "通信テスト", "\n\n", "テスト→発行のトピック名を記入して、\"トピックスに発行\"をクリック", "\n", "\n", "成功していたら、RaspberryPiのコンソールへ(ソースコード)のon_message文字列出力される。", "\n\n", "\n", "以上", "\n"], "code": ["sudo apt-get install python-pip\n\npip install paho-mqtt\n", "import", " ", "paho.mqtt.client", "\n", "import", " ", "ssl", "\n", "import", " ", "subprocess", "\n", "import", " ", "json", "\n\n", "endpoint", " ", "=", " ", "\"XXXX.amazonaws.com\"", "#AWSのエンドポイント", "\n", "port", " ", "=", " ", "8883", "#AWSのポート", "\n", "topic_to_aws", " ", "=", "\"Raspi3_to\"", "\n", "topic_from_aws", " ", "=", " ", "\"Raspi3_from\"", "\n", "rootCA", " ", "=", " ", "\"VeriSign.pem\"", "#ルート証明書", "\n", "cert", " ", "=", " ", "\"XXXX-certificate.pem.crt\"", "#デバイス証明書", "\n", "key", " ", "=", " ", "\"XXXX-private.pem.key\"", "#keyを設定", "\n\n", "def", " ", "on_connect", "(", "client", ",", " ", "userdata", ",", " ", "flags", ",", " ", "respons_code", "):", "\n    ", "print", "(", "\"Connected\"", ")", "\n    ", "client", ".", "subscribe", "(", "topic_to_aws", ")", "#サブスクライブする", "\n\n", "def", " ", "on_message", "(", "client", ",", " ", "userdata", ",", " ", "msg", "):", "\n    ", "print", "(", "msg", ".", "topic", ")", "\n\n", "if", " ", "__name__", " ", "==", " ", "'__main__'", ":", "\n    ", "#ここら辺はpahoのリファレンスを参照。", "\n    ", "#https://www.eclipse.org/paho/clients/python/docs/#connect-reconnect-disconnect ", "\n    ", "client", " ", "=", " ", "paho", ".", "mqtt", ".", "client", ".", "Client", "()", "\n    ", "client", ".", "on_connect", " ", "=", " ", "on_connect", "\n    ", "client", ".", "on_message", " ", "=", " ", "on_message", "\n    ", "client", ".", "tls_set", "(", "ca_certs", "=", "rootCA", ",", " ", "certfile", "=", "cert", ",", " ", "keyfile", "=", "key", ",", " ", "cert_reqs", "=", "ssl", ".", "CERT_REQUIRED", ",", " ", "tls_version", "=", "ssl", ".", "PROTOCOL_TLSv1_2", ",", " ", "ciphers", "=", "None", ")", "\n    ", "client", ".", "connect", "(", "endpoint", ",", " ", "port", "=", "port", ",", " ", "keepalive", "=", "60", ")", "\n", "print", "(", "\"StartScript\"", ")", "\n", "client", ".", "loop_forever", "()", "\n"]},
{"title": ["Minecraft 1.12.2　ネザー要塞のスポーン座標決定のアルゴリズム"], "body": ["\n", "Minecraft 1.12.2　村の座標決定部分のアルゴリズム ", "https://qiita.com/MirrgieRiana/items/0a3baee86bb661dc5f99", "\n", "\n", "\n\n", "の亜種。基本的なことはこれと同じ。", "\n\n", "\n", "アルゴリズム", "\n\n", "概ねこんな感じ。", "\n\n", "boolean canSpawnStructureAtCoords2(int chunkX, int chunkZ)\n{\n    int regionX = chunkX >> 4;\n    int regionY = chunkZ >> 4;\n    Random rand = new Random(seed ^ regionX ^ (regionY << 4));\n    rand.nextInt();\n\n    if (rand.nextInt(3) != 0) return false;\n    if (chunkX != (regionX << 4) + 4 + rand.nextInt(8)) return false;\n    if (chunkZ != (regionY << 4) + 4 + rand.nextInt(8)) return false;\n\n    return true;\n}\n", "\n\n", "意訳すると次のようになる。", "\n\n", "16x16チャンク毎、33%の確率で、中央付近の8x8チャンクのいずれかのチャンクを中心としてネザー要塞が出現する。\n", "\n\n", "16x16の端付近には出現しないので、既知の遺跡から座標軸に沿って進むと高確率で発見できる。", "\n出現可否と地域内の詳細位置はワールドのシードと16x16ごとの地域にのみ依存し、バイオームとかそういう条件はなく溶岩海の上だろうが地中だろうが問答無用でスポーンする。恐らく村と同じくチャンク内での位置も固定。村とは異なりチャンク座標が負の場合には説明しづらい特殊な挙動をする。", "\n\n", "\n", "複製", "\n\n", "もしやX座標が16*16*16離れてY座標が16*16離れた4か所のうち1か所には同じ形の要塞が湧く？", "\n\n", "\n", "\n\n", "\n", "\n\n", "酷似している。多分同一。これは", "regionX ^ (regionY << 4)", "が同じ値になる場所で起こる。同様にXが16*16*16*2、Yが16*16*2離れた場所にも存在するはず。地域Yの反転ビットが地域Xの反転ビットの左4シフトになれば対応が取れる。大きな値を除けば任意の地域Xに対応する地域Yが存在することになるので、N個のネザー要塞があったとしてパターンは概ね√N個しかないことになる。", "\n"], "code": ["boolean canSpawnStructureAtCoords2(int chunkX, int chunkZ)\n{\n    int regionX = chunkX >> 4;\n    int regionY = chunkZ >> 4;\n    Random rand = new Random(seed ^ regionX ^ (regionY << 4));\n    rand.nextInt();\n\n    if (rand.nextInt(3) != 0) return false;\n    if (chunkX != (regionX << 4) + 4 + rand.nextInt(8)) return false;\n    if (chunkZ != (regionY << 4) + 4 + rand.nextInt(8)) return false;\n\n    return true;\n}\n", "16x16チャンク毎、33%の確率で、中央付近の8x8チャンクのいずれかのチャンクを中心としてネザー要塞が出現する。\n"]},
{"title": ["特定の Organization で Github の通知や GCP からのアクセスができなくなる問題の原因"], "body": ["\n", "\n", "現象", "\n\n", "\n", "特定の Organization からどうも Gitify で通知が受け取れない", "\n", "CloudBuild のトリガを設定したくて GCP で認証したけどその Organization のリポジトリだけリストアップされない", "\n", "\n\n", "\n", "原因", "\n\n", "\n", "Third-party application access policy", "\n\n", "Github->Organization->Settingsのこれ．", "\n", "\nが，最近作った Organization だと，デフォルトで全部のサードパーティアクセスを禁止するようになっているようだ．管理権限を持っているユーザのみ許可できるが，CircleCI や Slack は問題なく認証できていたが，Gitify等サードパーティによっては", "このリストに出てすらこない", "ので，以下のように全体的に制限を解除するしかない．", "\n\n", "\n\n", "なかなか融通が効かなくて困る．", "\n"], "code": []},
{"title": ["アジャイルと請負契約、あるいは古のユーザー企業とSIerとデベロッパーの関わり方"], "body": ["\n\n", "\n", "■TL;DR", "\n\n", "\n", "アジャイルでのSIでも、POの役割・責務を条件にすることで、発注者責任と完成責任がうまくバランスとれるんじゃないか?(※答えはまだ無い;)", "\n", "\n\n", "\n\n", "\n", "■今までのSI:", "\n\n", "\n", "ウォーターフォール。ゼネコンスタイルによるヒエラルキーがゆえの高額見積もり\n\n", "\n", "実態は、発注者責任の放棄→お互いの保険料がものすごく上乗せされている", "\n", "\n", "\n", "→結局\n\n", "\n", "丸投げ", "\n", "稚拙な表現力で書いたドキュメントによるバケツリレー", "\n", "超絶なムダ、コミュニケーションロス、デメリットばかり", "\n", "\n", "\n", "\n\n", "\n\n", "\n", "■最近のヤバいSI:", "\n\n", "\n", "発注者責任置いてけぼりの「早い・安い・旨い」的な請負い契約。なぜかアジャイル\n\n", "\n", "バズワード駆動、発注者、元請営業のあさはかな都合の良い「いいとこどり」で始まりがち", "\n", "そもそもウォータフォールでやればいいのにってケース\n\n", "\n", "SoR領域、現行ありき多い", "\n", "\n", "\n", "そもそもアジャイル初めてとか。。", "\n", "\n", "\n", "→結果\n\n", "\n", "プラハラ(プライム(または上位)コントラクター・ハラスメント)", "\n", "カスハラ(カスタマー・ハラスメント)", "\n", "チームは疲弊ばかり。チームの幸福 is何?", "\n", "\n", "\n", "\n\n", "\n\n", "\n", "■そろそろ、、:", "\n\n", "\n", "内製アジャイルと外注アジャイルについて向き合った方がいい\n\n", "\n", "アジャイル・スクラムの原理・原則だけでは日本のゼネコンスタイルでは無理\n\n", "\n", "DEVが派遣や委託だと、ミッションに対するエンゲージメント低すぎるよ(あたりまえだけど)\n\n", "\n", "これもそもそも問題なのだけど、すぐに打開できない；", "\n", "チームもずっと維持できない", "\n", "\n", "\n", "SIerはオワコン? 知ってるよ。言われてるの", "\n", "\n", "\n", "\n", "\n", "\n\n", "\n\n", "\n", "■それに、、:", "\n\n", "\n", "ユーザ部門のPOは、技術的負債などについて理解しにくい\n\n", "\n", "教科書では\"How\"についてはチームに任せることになっているけど、バックログの優先順位付けに関わるので、責任を持つことからは逃れられない\n\n", "\n", "たとえば、技術的負債の優先順位を下げまくると、生産性や保守性が下がって、デリバリの速度が落ちるってこと", "\n", "\n", "\n", "\n", "\n", "最近、うまくいってる、いきそうなプロジェクトは、ダブルPO\n\n", "\n", "ビジネス価値領域(ユーザ部門)のPO ... プロダクトのビジネス価値に責任をもつ", "\n", "システム価値領域(情シス)のPO ... プロダクトの技術的価値(アーキテクチャ、保守性や運用性など)に責任を持つ", "\n", "\n", "\n", "\n\n", "\n\n", "\n", "■請負契約によるアジャイル開発は、、:", "\n\n", "\n", "結局のところ、\"Do Agile\"。現実的にみて、ちゃんと\"Do Agile\"できるようにすればいいんじゃないか?\n\n", "\n", "※内製は\"Be Agile\"で取り組めばいいと思うけど。。", "\n", "\n", "\n", "受注者側の\"完成責任\"以前に\"発注者責任\"を発注者側のダブルPOがうまく請うことができるような契約条件にできないか?", "\n", "\n"], "code": []},
{"title": ["国会中継をローカルに保存して愉(たの)しむ"], "body": ["\n", "\n", "０、国会中継をダウンロードして楽しみたい", "\n\n", "こんにちは。日曜プログラマのY.Toriyamaです。今日は政府が用意している国会中継サイトから動画をダウンロードする方法をご紹介します。", "\n皆さんはパソコンで仕事をするとき、どんなBGMをかけながら作業していますか？私はだいたい国会中継を聴きながらパチパチキーボードを打っています。昔はラジカセで音楽をかけっぱなしにしていたのですが、好きな音楽がかかるとついつい目の前の課題から気持ちが離れてしまうので困りものでした。", "\n国会中継は聞き流すのにちょうどいいコンテンツです。音楽やラジオほどは気が散らず、それでいて音だけで聴く与野党の攻防はほどほどにおもしろいものなので、作業用のBGMにはうってつけです。しかも会期中はほぼ毎日新しいコンテンツが無料で", "1", "追加されるので飽きは来ません。なので国会中継は私の生活に欠かせないものとなりつつあります。", "\nしかし、この国会中継配信サイトには使い勝手の悪さがあります。たとえば、配信のスタイルがYouTubeとおなじようにストリーミング配信であるため、インターネット接続がない環境では視聴することができません。スマフォやタブレットのようなモバイル環境があったとしても、私は格安SIMを使っているので、仕事中ずっと流しっぱなしにしておくような使い方には適していません。", "\nそこで、このインターネット中継を一旦ローカルに保存して、SDカードなどで持ち歩いていつでもどこでも見られるようにしたいな、と考えました。", "\nではやっていきましょう。", "\n\n", "\n", "１、準備した環境", "\n\n", "\n", "Ubuntu 18.04.1 LTS", "\n", "ffmepeg　3.4.4", "\n", "\n\n", "ffmepegがインストールされていない場合はapt-getなどを使ってインストールしておきましょう。", "\n\n", "\n", "terminal", "\n", "$", "sudo ", "apt-get ", "install ", "ffmpeg\n", "\n", "\n\n", "\n", "２、衆議院インターネット審議中継( ", "http://www.shugiintv.go.jp/", " )を攻略する", "\n\n", "ビデオライブラリ", "からは過去に収録された審議中継の模様を閲覧することができます。", "\nキーワードを入れて検索をし、目当ての審議中継を見つけたら発言者(議員)の名前をクリックすると動画の再生が始まります。ですが、その前に配信方法を選択するために", "配信方法設定画面", "にアクセスします。衆議院インターネット中継ではAdobeFlashとWindowsMediaPlayerの二つの選べるのですが、今回は後者を用います。また、できることなら高画質で保存をしておきたいので「Windows Media Player」の「高速回線用」を選択します。この画面は「設定」ボタンを押して閉じておきましょう", "2", "。", "\nこの設定をした上で、発言者の名前をクリックすると", "wmpdyna.asx", "というファイルがダウンロードされます。ここで、", ".asx", "という拡張子がついたファイルはWindowsMediaPlayerを用いた動画ストリーミング配信に使われるもの", "3", "ですが、このファイルの実態は動画ファイルではありません。このファイルの本質はテキストデータであり、Web上に置かれた動画の本体へのリンクが書いてあるだけです。", "\nこのファイルをテキストエディタで開いてみると、だいたい六行目に", "<ref>", "タグがありますが、これをよく見ると必要としている動画の本体がどこにあるのかが分かります。", "\n\n", "\n", "wmpdyna.asx", "\n", "<ASX version=\"3.0\">\n<title>安全保障委員会</title>\n<author>Shugiin</author>\n<copyright>(c) 2018 Shugiin</copyright>\n<Entry>\n<TITLE>安全保障委員会(開会～散会)</TITLE>\n<ref HREF=\"mms://wmtvod.shugiintv.go.jp/vod/2018-0413-1300-3b.wmv\"/>\n<STARTTIME VALUE=\"01:01:45.1\"/>\n<duration value =\"01:21:08.8\"/>\n</Entry>\n</ASX>\n", "\n", "\n\n", "たとえばこの場合ではwmtvod.shugiintv.go.jpというサーバーのvod/ディレクトリに2018-0413-1300-3b.wmvというファイル名で存在していることが分かります。これがストリーミングファイルの本体です。WindowsMadiaPlayerはwmpdyna.asxに書かれたこうした情報をもとに wmtvod.shugiintv.go.jp/vod/2018-0413-1300-3b.wmv にアクセスして動画を取得しているわけです。つまり、我々もここにアクセスすればいいということです。", "\nただ、直接ここ(wmtvod.shugiintv.go.jp/vod/2018-0413-1300-3b.wmv)にhttpプロトコルで通信を仕掛けても動画をダウンロードすることはできません。というのは2018-0413-1300-3b.wmvというファイルはやはりストリーミング形式の動画ファイルだからです。ストリーミング配信専用のプロトコルでアクセスしないと映像を受信することはできません。", "\nここではmmsというプロトコル", "4", "を使います。", "\nではストリーミングファイルの本体の在処をつかめたところで、ここにmmsプロトコルでアクセスし、普通の動画ファイル形式に変換しローカルに保存することを考えましょう。このような作業が得意なツールがはじめに用意した", "ffmpeg", "というコマンドラインツールです。", "\n", "ffmpeg", "の基本構文は次の通りです。", "\n\n", "\n", "terminal", "\n", "$", "ffmpeg ", "-i", " ", "[", "入力] ", "[", "出力]\n", "\n", "\n\n", "引数", "-i", "はinputの略で、この直後に入力元の動画のパス(URL)を入力します。また、第二変数には出力ファイルの名前を置きます。 ", "\n\n", "たとえばこの場合では、次のようにコマンドを打つとwmtvod.shugiintv.go.jp/vod/2018-0413-1300-3b.wmvを2018-0413-1300-3b.wmvという名前でローカルに保存することができる。", "\n\n", "\n", "terminal", "\n", "$", "ffmpeg ", "-i", " mmsh://wmtvod.shugiintv.go.jp/vod/2018-0413-1300-3b.wmv 2018-0413-1300-3b.wmv  ", "# mmshでwmtvod.shugiintv.go.jp/vod/2018-0413-1300-3b.wmvにアクセスし、2018-0413-1300-3b.wmvという名前で動画をカレントディレクトリに保存する", "\n", "\n", "\n\n", "(参考) ", "https://kamae-norihiro.blogspot.com/2013/12/ffmpeg-mms.html", "\n\n", "ダウンロードにはかなりの時間がかかります。気長に待ちましょう。", "\n\n", "\n", "３、参議院インターネット審議中継( ", "http://www.webtv.sangiin.go.jp/", " )を攻略する", "\n\n", "同じにしてくれれば楽なのに、どういうわけか衆議院と参議院ではサイトの仕組みが違うようです。なので、こちらはこちらで別にしくみを調べてやる必要があります。", "\nただ、こちらの方がやや簡単です。それは、参議院インターネット中継のほうでは動画ファイルが登録順により通し番号の連番ファイルになっているからです。動画へのリンクのURLを少し調べれば、動画ファイルごとに降られたその番号を知ることができます。", "\n同じように検索画面から目的の動画を見つけたら、その動画へのリンクを右クリックしてURLを取り出します。そのアドレスの名からその動画ファイルに振られた\"固有ID\"を抽出します。", "\n\n", "\n", "URL", "\n", "http://www.webtv.sangiin.go.jp/webtv/detail.php?sid=4893&type=recorded\n", "\n", "\n\n", "というURLなら、detail.phpに付与されたパラメータsidを観察して、", "\n", "sid=4893", "より、", "\nこの動画", "5", "は4893番という番号で管理されていることが分かります。つまり、パラメータsidの値が動画の固有IDです。", "\nそして実は、この動画のストリーミングファイルの本体は、", "\n\n", "\n", "URL", "\n", "http://svwmlv.webtv.sangiin.go.jp/hls-vod/[固有ID].mp4.m3u8\n", "\n", "\n\n", "にあることが分かっている", "6", "ので、ffmpegを使ってこのURLにアクセスすることで動画をダウンロードすることができます。", "\nくどいかも知れませんが、ffmpegの構文は先ほどと同じように、", "\n\n", "\n", "terminal", "\n", "$", "ffmpeg ", "-i", " http://svwmlv.webtv.sangiin.go.jp/hls-vod/[固有ID].mp4.m3u8 ", "[", "出力].mp4     ", "# 固有IDとは動画へのリンクから調べられる番号のこと", "\n", "$", "ffmpeg ", "-i", " http://svwmlv.webtv.sangiin.go.jp/hls-vod/4893.mp4.m3u8 sangiin_4893.mp4  ", "# 4893.mo4.m3u8にアクセスし、sangiin_4893.mp4と名前を付けてカレントディレクトリに保存する", "\n", "\n", "\n\n", "とすればOKです。カレントディレクトリに動画が保存されます。", "\n\n", "\n", "６、留意すべき点", "\n\n", "そもそも国会はパブリックなものであり、この国会中継だって国民の税金によって運営されている公共的なものなのですから、配信されている動画の使い道や著作権についてとやかく言われるのはそもそもナンセンスなのですが、一応ホームページに留意事項が書かれているので少し転載しておきます。", "\n\n", "\n", "衆議院インターネット中継 著作権・リンク・登録商標について(", "http://www.shugiintv.go.jp/jp/index.php?ex=CR", ")", "\n", "\n\n", "\n", "このホームページの著作権について", "\n「衆議院インターネット審議中継」に掲載されている個々の情報（文字、写真、映像等）は著作権の対象となっています。ご利用にあたっては、著作権法の範囲内でご使用ください。", "\nCopyright(C) 1999-2018 Shugiin All Rights Reserved.", "\n", "\n\n", "\n", "参議院インターネット審議中継 よくある質問(", "http://www.webtv.sangiin.go.jp/webtv/index.php#category99", ")", "\n", "\n\n", "\n", "よくある質問", "\nその他", "\nQ29 : 映像を保存して後日視聴することはできますか？", "\n   参議院インターネット審議中継は、参議院の審議映像をストリーミング方式で視聴していただくために配信しております。 このホームページで公開しているデータを直接ダウンロードすることや本ホームページ以外で公開することは、ご遠慮願います。 ", "\nQ30 : 映像を保存して自分のホームページで公開することはできますか?", "\n   参議院インターネット審議中継は、参議院の審議映像をストリーミング方式で視聴していただくために配信しております。 このホームページで公開しているデータを直接ダウンロードすることや本ホームページ以外で公開することは、ご遠慮願います。 ", "\n", "\n\n", "まあ、常識の範囲内での利用を心がけましょう", "7", "。", "\n\n", "\n", "７、まとめ", "\n\n", "\n", "\n", "衆議院インターネット審議中継", "\n\n", "\n", "動画配信設定を「WindowsMediaPlayer」の「高速回線用」に設定", "\n", "必要な動画をクリックし、「wmpdyna.asx」をダウンロード", "\n", "テキストエディタでwmpdyna.asxを開き、動画のストリーミングファイルの所在を調べる", "\n", "ffmpegを用いダウンロードを開始する", "\n", "\n", "\n", "\n", "参議院インターネット審議中継", "\n\n", "\n", "動画へのリンクURLを調べ、パラメータ?sidを見て必要な動画のIDを把握する", "\n", "このIDとffmpegを用いてダウンロードを始める", "\n", "\n", "\n", "\n\n", "YuukiToriyama ", "@YToriyama", "\nお役に立ちましたらいいねボタン＆ストックしていただきますようよろしくお願いします！", "\n\n", "\n", "\n", "\n\n", "\n", "我々の税金で ", "↩", "\n", "\n\n", "\n", "この設定はおそらくcookieに保存されている。ブラウザの設定でcookieが無効になっていると同じ作業を繰り返すとき少し面倒である。 ", "↩", "\n", "\n\n", "\n", "https://ja.wikipedia.org/wiki/Windows_Media%E3%83%A1%E3%82%BF%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB", " ", "↩", "\n", "\n\n", "\n", "mmsはMicrosoftが策定したメディアストリーミング用の通信プロトコル。mmshはmms over httpの意味。  ", "https://en.wikipedia.org/wiki/Microsoft_Media_Server", " ", "↩", "\n", "\n\n", "\n", "2018年7月19日参議院内閣委員会。岡山・広島などに甚大な被害をもたらした西日本豪雨の直後であったにもかかわらず、カジノ推進法案が強行採決された。 ", "↩", "\n", "\n\n", "\n", "http://d.hatena.ne.jp/riocampos+tech/20150917/fetch_sangiin_streaming_and_convert_mp3", " ", "↩", "\n", "\n\n", "\n", "一度に大量のリクエストを送り付けるなどサーバーに過剰な負担をかけるようなことはやめましょう。また、ダウンロードした動画に悪意のある改変を加えるなどの行為もやめましょう。 ", "↩", "\n", "\n\n", "\n", "\n"], "code": ["$", "sudo ", "apt-get ", "install ", "ffmpeg\n", "<ASX version=\"3.0\">\n<title>安全保障委員会</title>\n<author>Shugiin</author>\n<copyright>(c) 2018 Shugiin</copyright>\n<Entry>\n<TITLE>安全保障委員会(開会～散会)</TITLE>\n<ref HREF=\"mms://wmtvod.shugiintv.go.jp/vod/2018-0413-1300-3b.wmv\"/>\n<STARTTIME VALUE=\"01:01:45.1\"/>\n<duration value =\"01:21:08.8\"/>\n</Entry>\n</ASX>\n", "$", "ffmpeg ", "-i", " ", "[", "入力] ", "[", "出力]\n", "$", "ffmpeg ", "-i", " mmsh://wmtvod.shugiintv.go.jp/vod/2018-0413-1300-3b.wmv 2018-0413-1300-3b.wmv  ", "# mmshでwmtvod.shugiintv.go.jp/vod/2018-0413-1300-3b.wmvにアクセスし、2018-0413-1300-3b.wmvという名前で動画をカレントディレクトリに保存する", "\n", "http://www.webtv.sangiin.go.jp/webtv/detail.php?sid=4893&type=recorded\n", "http://svwmlv.webtv.sangiin.go.jp/hls-vod/[固有ID].mp4.m3u8\n", "$", "ffmpeg ", "-i", " http://svwmlv.webtv.sangiin.go.jp/hls-vod/[固有ID].mp4.m3u8 ", "[", "出力].mp4     ", "# 固有IDとは動画へのリンクから調べられる番号のこと", "\n", "$", "ffmpeg ", "-i", " http://svwmlv.webtv.sangiin.go.jp/hls-vod/4893.mp4.m3u8 sangiin_4893.mp4  ", "# 4893.mo4.m3u8にアクセスし、sangiin_4893.mp4と名前を付けてカレントディレクトリに保存する", "\n"]},
{"title": ["「Vueコンサルが教えたくない７つの真実」を勉強してみた"], "body": ["Vueの便利なテクニック７つ", "\n\n", "Youtubeで見つけたので勉強ついでにまとめてみる。", "\n\n", "\n", "出展", "\n\n", "Chris Fritz さん", "\n\n", "Youtube", "\n", "https://www.youtube.com/watch?v=7YZ5DwlLSt8", "\n\n", "資料（Github）", "\n", "https://github.com/chrisvfritz/7-secret-patterns", "\n\n", "まとめ - 動画とはバージョン違い（英語）", "\n", "https://www.vuemastery.com/conferences/vueconf-2018/7-secret-patterns-vue-consultants-dont-want-you-to-know-chris-fritz/", "\n\n", "\n", "Productivity Boost - 生産性向上", "\n\n", "\n", "1. Smarter Watcher", "\n\n", "元のコードはこれ。生成時になにかしてアップデート時にもなにかする。よくやる。", "\n\n", "\n", "js", "\n", "created", " ", "()", " ", "{", "\n    ", "this", ".", "fetchUserList", "()", "\n", "}", "\n", "watch", ":", " ", "{", "\n    ", "searchText", "()", " ", "{", "\n        ", "this", ".", "fetchUserList", "()", "\n    ", "}", "\n", "}", "\n", "\n", "\n\n", "まず、watchは関数名を文字列で受け取れる。", "\n\n", "\n", "js", "\n", "created", " ", "()", " ", "{", "\n    ", "this", ".", "fetchUserList", "()", "\n", "}", "\n", "watch", ":", " ", "{", "\n    ", "searchText", ":", "  ", "'fetchUserList'", "\n", "}", "\n", "\n", "\n\n", "immediateをtrueにするとコンポーネントがreadyの時点で実行される！", "\n\n", "\n", "js", "\n", "watch", ":", " ", "{", "\n    ", "searchText", ":", "  ", "'fetchUserList'", ",", "\n    ", "immediate", ":", " ", "true", "\n", "}", "\n", "\n", "\n\n", "きゃー！！便利", "\n\n", "\n", "2. Component Registration", "\n\n", "コンポーネント中で別のコンポーネントを使うために", "\n\n", "\n", "html", "\n", "<BaseInput", "\n  ", "v-mode=", "'searchText'", "\n  ", "@", "keydown", ".", "enter=", "'search'", "\n", "/>", "\n", "<BaseButton", " ", "@", "click=", "'search'", ">", "\n  ", "<BaseIcon", " ", "name=", "'search'", "/>", "\n", "</BaseButton>", "\n", "\n", "\n\n", "あちこちにimport書くの面倒くさいよね", "\n\n", "\n", "js", "\n", "import", " ", "BaseButton", " ", "from", " ", "'./base-button'", "\n", "import", " ", "BaseIcon", " ", "from", " ", "'./base-icon'", "\n", "import", " ", "BaseInput", " ", "from", " ", "'./base-input'", "\n\n", "export", " ", "default", " ", "{", "\n  ", "components", ":", " ", "{", "\n    ", "BaseButton", ",", "\n    ", "BaseIcon", ",", "\n    ", "BaseInput", "\n  ", "}", "\n", "}", "\n", "\n", "\n\n", "特定のフォルダ内のコンポーネントをprefixとか使って自動で登録するといいよね！", "\n\n", "\n", "js", "\n", "import", " ", "Vue", " ", "from", " ", "'vue'", "\n", "import", " ", "upperFirst", " ", "from", " ", "'lodash/upperFirst'", "\n", "import", " ", "camelCase", " ", "from", " ", "'lodash/camelCase'", "\n\n", "// Require in a base component context", "\n", "const", " ", "requireComponent", " ", "=", " ", "require", ".", "context", "(", "\n  ", "‘", ".", "/", "components", "’", ",", " ", "false", ",", " ", "/base-", "[\\w", "-", "]", "+", "\\.", "vue$/", "\n", ")", "\n\n", "requireComponent", ".", "keys", "().", "forEach", "(", "fileName", " ", "=>", " ", "{", "\n  ", "// Get component config", "\n  ", "const", " ", "componentConfig", " ", "=", " ", "requireComponent", "(", "fileName", ")", "\n\n  ", "// Get PascalCase name of component", "\n  ", "const", " ", "componentName", " ", "=", " ", "upperFirst", "(", "\n    ", "camelCase", "(", "fileName", ".", "replace", "(", "/^", "\\.\\/", "/", ",", " ", "''", ").", "replace", "(", "/", "\\.\\w", "+$/", ",", " ", "''", "))", "\n  ", ")", "\n\n  ", "// Register component globally", "\n  ", "Vue", ".", "component", "(", "componentName", ",", " ", "componentConfig", ".", "default", " ", "||", " ", "componentConfig", ")", "\n", "})", "\n", "\n", "\n\n", "“src/main.js” とか “/components/_globals.js” とかに書いとけばいい感じ。", "\n\n", "便利ちゃあ便利。バンドルサイズでかくなったりするから使いすぎ厳禁。", "\n\n", "\n", "js", "\n", "componentConfig", ".", "default", " ", "||", " ", "componentConfig", "\n", "\n", "\n\n", "おまけ。", "\nこう書いておくとexport defaultしてるときとしてないときとどっちでもいけるよね。ハッピー。", "\n\n", "\n", "3. Module Registration", "\n\n", "2と似てる話し。", "\n\n", "Vuexモジュールとか使うときにいちいち読み込むの面倒だよね。", "\n\n", "\n", "js", "\n", "import", " ", "auth", " ", "from", " ", "'./modules/auth'", "\n", "import", " ", "posts", " ", "from", " ", "'./modules/posts'", "\n", "import", " ", "comments", " ", "from", " ", "'./modules/comments'", "\n", "// ...", "\n\n", "export", " ", "default", " ", "new", " ", "Vuex", ".", "Store", "({", "\n  ", "modules", ":", " ", "{", "\n    ", "auth", ",", "\n    ", "posts", ",", "\n    ", "comments", ",", "\n    ", "// ...", "\n  ", "}", "\n", "})", "\n", "\n", "\n\n", "１つのフォルダに突っ込んで自動でやっちゃおうぜ。", "\n\n", "\n", "/modules/index.js", "\n", "import", " ", "camelCase", " ", "from", " ", "'lodash/camelCase'", "\n", "const", " ", "requireModule", " ", "=", " ", "require", ".", "context", "(", "'.'", ",", " ", "false", ",", " ", "/", "\\.", "js$/", ")", "\n", "const", " ", "modules", " ", "=", " ", "{}", "\n\n", "requireModule", ".", "keys", "().", "forEach", "(", "fileName", " ", "=>", " ", "{", "\n  ", "// Don't register this file as a Vuex module", "\n  ", "if", " ", "(", "fileName", " ", "===", " ", "'./index.js'", ")", " ", "return", "\n\n  ", "const", " ", "moduleName", " ", "=", " ", "camelCase", "(", "\n    ", "fileName", ".", "replace", "(", "/", "(\\.\\/", "|", "\\.", "js", ")", "/g", ",", " ", "''", ")", "\n  ", ")", "\n  ", "// namespaceつけとくと便利だぜ！", "\n  ", "modules", "[", "moduleName", "]", " ", "=", " ", "{", "\n    ", "namespaced", ":", " ", "true", ",", "\n    ", "...", "requireModule", "(", "fileName", "),", "\n  ", "}", "\n  ", "// namespaceいらなければこんな感じ", "\n  ", "// modules[moduleName] = requireModule(fileName)", "\n", "})", "\n", "export", " ", "default", " ", "modules", "\n", "\n", "\n\n", "シンプルになりまーす。", "\n\n", "\n", "js", "\n", "import", " ", "auth", " ", "from", " ", "'./modules'", "\n\n", "export", " ", "default", " ", "new", " ", "Vuex", ".", "Store", "({", "\n  ", "modules", "\n", "})", "\n", "\n", "\n\n", "うむ。まぁ、うむ。", "\n\n", "\n", "Radical Tweaks - 革命的な微調整", "\n\n", "\n", "4. Cleaner Views", "\n\n", "１つのコンポーネントで複数ページを使うときのテクニック。", "\n\n", "\n", "js", "\n", "data", "()", " ", "{", "\n  ", "return", " ", "{", "\n    ", "loading", ":", " ", "false", ",", "\n    ", "error", ":", " ", "null", ",", "\n    ", "post", ":", " ", "null", "\n  ", "}", "\n", "},", "\n", "watch", ":", " ", "{", "\n  ", "'$route'", ":", " ", "{", "\n    ", "handler", ":", " ", "'resetData'", ",", "\n    ", "immediate", ":", " ", "true", "\n  ", "}", "\n", "},", "\n", "methods", ":", " ", "{", "\n  ", "resetData", "()", " ", "{", "\n    ", "this", ".", "loading", " ", "=", " ", "false", "\n    ", "this", ".", "error", " ", "=", " ", "null", "\n    ", "this", ".", "post", " ", "=", " ", "null", "\n    ", "this", ".", "getPost", "(", "this", ".", "$route", ".", "params", ".", "id", ")", "\n  ", "},", "\n  ", "getPost", "(", "postId", ")", " ", "{", "\n    ", "// ...", "\n  ", "}", "\n", "}", "\n", "\n", "\n\n", "idでページ切り替えるようなときはルートをwatchして初期化処理入れとかないと不安。コンポーネントが再利用されちゃうから。", "\n\n", "\n", "js", "\n", "data", "()", " ", "{", "\n  ", "return", " ", "{", "\n    ", "loading", ":", " ", "false", ",", "\n    ", "error", ":", " ", "null", ",", "\n    ", "post", ":", " ", "null", "\n  ", "}", "\n", "},", "\n", "created", " ", "()", " ", "{", "\n  ", "this", ".", "getPost", "(", "this", ".", "$route", ".", "params", ".", "id", ")", "\n", "},", "\n", "methods", ":", " ", "{", "\n  ", "getPost", "(", "postId", ")", " ", "{", "\n    ", "// ...", "\n  ", "}", "\n", "}", "\n", "\n", "\n\n", "こんなふうにシンプルにかけたら良いんだけど、、、", "\n\n", "できます！この魔法の一行を書いとけば。", "\n\n", "\n", "html", "\n", "<router-view", " ", ":key=", "\"$route.fullPath\"", "><router-view>", "\n", "\n", "\n\n", "フルパスが変わったらコンポーネントが同一でも再描画！", "\n\n", "ひぃやっはーー！！！", "\n\n", "まぁ、ほんのちょっとパフォーマンス落ちるだろうけど、コンポーネントシンプルに書けるほうが良いよね。ね！", "\n\n", "\n", "5. Transparent Wrappers", "\n\n", "とりあえずシンプルな入力があるとすんじゃん？", "\n例えば、BaseInputコンポーネントね。", "\n\n", "\n", "BaseInput", "\n", "<template>", "\n  ", "<input", "\n    ", ":value=", "\"value\"", "\n    ", "@", "input=", "\"$emit('input', $event.target.value)\"", "\n  ", ">", "\n", "</template>", "\n", "\n", "\n\n", "で、このコンポーネント使うときにinputイベント以外のイベントを受け取りたい（inputはemitしてるから飛んでくる）と思ったら毎回", ".native", "書かなきゃいけないじゃん？", "\n\n", "\n", "html", "\n", "<BaseInput", " ", "@", "focus", ".", "native=", "\"doSomething\"", ">", "\n", "\n", "\n\n", "ちなみに", ".native", "書くとコンポーネントのルート要素のイベント取れる感じね。", "\n\n", "でも、、、", "\n\n", "\n", "BaseInput", "\n", "<template>", "\n  ", "<label>", "\n    {{ label }}\n    ", "<input", "\n      ", ":value=", "\"value\"", "\n      ", "@", "input=", "\"$emit('input', $event.target.value)\"", "\n    ", ">", "\n  ", "</label>", "\n", "</template>", "\n", "\n", "\n\n", "まぁ、ルート要素が変わったら破綻するよね。破綻っ！", "\nBaseInput使ってて突然動かなくなるというバグに遭遇する危険大。。。恐怖！！", "\n\n", "これが解決策だ！ワン、ツー、スリー！", "\n\n", "\n", "BaseInput", "\n", "<template>", "\n  ", "<label>", "\n    {{ label }}\n    ", "<input", "\n      ", ":value=", "\"value\"", "\n      ", "v-on=", "\"listeners\"", "\n    ", ">", "\n  ", "</label>", "\n", "</template>", "\n\n", "<script>", "\n", "computed", ":", " ", "{", "\n  ", "listeners", "()", " ", "{", "\n    ", "return", " ", "{", "\n      ", "...", "this", ".", "$listeners", ",", "\n      ", "input", ":", " ", "event", " ", "=>", " \n        ", "this", ".", "$emit", "(", "'input'", ",", " ", "event", ".", "target", ".", "value", ")", "\n    ", "}", "\n  ", "}", "\n", "}", "\n", "</script>", "\n", "\n", "\n\n", "リスナーを全部返しちゃう。", "\nv-onをイベント指定せずにオブジェクトだけ指定すると、そこで定義されたすべてのリスナーを監視できる。うわぉ！", "\n\n", "\n", "html", "\n", "<BaseInput", " ", "@", "focus=", "\"doSomething\"", ">", "\n", "\n", "\n\n", "はい、", ".native", "さようなら〜", "\n未来の不安も払拭。", "\n\n", "もうちょっと。", "\n\n", "\n", "html", "\n", "<BaseInput", "\n  ", "placeholder=", "\"What's your name?\"", "\n  ", "@", "focus=", "\"doSomething\"", "\n", "/>", "\n", "\n", "\n\n", "こんな感じでplaceholder書いたらどうなるの？", "\n\n", "\n", "BaseInput", "\n", "<template>", "\n  ", "<label>", "\n    {{ label }}\n    ", "<input", "\n      ", ":value=", "\"value\"", "\n      ", "v-on=", "\"listeners\"", "\n    ", ">", "\n  ", "</label>", "\n", "</template>", "\n", "\n", "\n\n", "こいつのlabelにplaceholder設定される。", "\n\n", "Vueでは、propsに書いてないattributeはコンポーネントのルート要素に設定される。。。知らなかった、、、", "\n\n", "俺は、placeholderをinput要素に渡したいんだ！！", "\n\n", "つ ", "v-bind=$attrs\"", "\n\n", "\n", "BaseInput", "\n", "<template>", "\n  ", "<label>", "\n    {{ label }}\n    ", "<input", "\n      ", "v-bind=", "$attrs\"", "\n      ", ":value=", "\"value\"", "\n      ", "v-on=", "\"listeners\"", "\n    ", ">", "\n  ", "</label>", "\n", "</template>", "\n", "\n", "\n\n", "うぉぉ！まぶしい！！！", "\n\n", "propsに指定されてないattributeは全部ここにバインドされるぜ。", "\n\n", "ここ大事！", "\nこれを使うときには、attributeを引き継ぐデフォルトの挙動をオフにするために、", "\n", "inheritAttrs: false", "\nをコンポーネント（ここではBaseInput）に指定しときましょう。", "\n\n", "\n", "Unlocked Posibilities - 開放された可能性", "\n\n", "\n", "6. Single-Root Components", "\n\n", "このエラーよく遭遇するよね。まじで。", "\n\n", "(Emitted value instead of an instance of Error)\n  Error compiling template:\n\n  <div></div>\n  <div></div>\n\n  - Component template should contain exactly one root element. \n    If you are using v-if on multiple elements, use v-else-if \n    to chain them instead.\n", "\n\n", "コンポーネントのルート要素は１つじゃなきゃだめってやつ。", "\n\n", "こういうときに困るんだよね、実は。", "\n\n", "\n", "NavBarRoutes", "\n", "<template>", "\n  ", "<li", "\n    ", "v-for=", "\"route in routes\"", "\n    ", ":key=", "\"route.name\"", "\n  ", ">", "\n    ", "<router-link", " ", ":to=", "\"route\"", ">", "\n      {{ route.title }}\n    ", "</router-link>", "\n  ", "</li>", "\n", "</template>", "\n", "\n", "\n\n", "\n", "html", "\n", "<template>", "\n  ", "<ul>", "\n    ", "<NavBarRoutes", " ", ":routes=", "\"persistentNavRoutes\"", "/>", "\n    ", "<NavBarRoutes", "\n      ", "v-if=", "\"loggedIn\"", "\n      ", ":routes=", "\"loggedInNavRoutes\"", "\n    ", "/>", "\n    ", "<NavBarRoutes", "\n      ", "v-else", "\n      ", ":routes=", "\"loggedOutNavRoutes\"", "\n    ", "/>", "\n  ", "</ul>", "\n", "</template>", "\n\n", "\n", "\n\n", "NavBarRoutesのなかでリストのli要素をv-forで複数作って返す感じ。これはエラーになる。", "\n\n", "render関数をつかって書くファンクショナルコンポーネントでは、実は", "複数ルートを返せる", "！What!!?", "\n\n", "\n", "vue", "\n", "functional: true,\nrender(h, { props }) {\n  return props.routes.map(route =>\n    ", "<li", " ", "key=", "{route.name}", ">", "\n      ", "<router-link", " ", "to=", "{route}", ">", "\n        {route.title}\n      ", "</router-link>", "\n    ", "</li>", "\n  )\n}\n", "\n", "\n\n", "JSX便利（そこじゃない", "\n\n", "まぁ、render関数知らなきゃいけないのぐらいが面倒なところかな。", "\n\n", "\n", "7. Rendering non-HTML", "\n\n", "HTMLじゃなくてWebGLとか別のやつをレンダリングする物を使うときのテクニック。", "\n\n", "ここではMapGL（地図を描画できる超クールなやつ。熱いやつ。）を例として。", "\n\n", "\n", "js", "\n", "// Init", "\n", "const", " ", "map", " ", "=", " ", "new", " ", "mapboxgl", ".", "Map", "(", "/* ... */", ")", "\n\n", "map", ".", "on", "(", "'load'", ",", " ", "()", " ", "=>", " ", "{", "\n  ", "// Data", "\n  ", "map", ".", "addSource", "(", "/* ... */", ")", "\n\n  ", "// Layers", "\n  ", "map", ".", "addLayer", "(", "/* ... */", ")", "\n  ", "map", ".", "addLayer", "(", "/* ... */", ")", "\n\n  ", "// Hover effects", "\n  ", "map", ".", "on", "(", "'mousemove'", ",", " ", "/* ... */", ")", "\n  ", "map", ".", "on", "(", "'mouseleave'", ",", " ", "/* ... */", ")", "\n", "})", "\n", "\n", "\n\n", "まぁ、こんなコードを書きますと。", "\n\n", "これって、、、宣言的なVueのコードじゃないよね。なんか気に入らないよね。", "\n\n", "\n", "html", "\n", "<MapboxMap>", "\n  ", "<MapboxMarkers", "\n    ", ":items=", "\"cities\"", "\n    ", "primary", "\n  ", ">", "\n    ", "<template", " ", "slot-scope=", "\"city\"", ">", "\n      ", "<h3>", "{{ city.name }}", "</h3>", "\n    ", "</template>", "\n  ", "</MapboxMarkers>", "\n  ", "<MapboxNavigation/>", "\n", "</MapboxMap>", "\n", "\n", "\n\n", "こんな感じのAPIだったら幸せなのに、、、", "\n\n", "はーい、こんなふうにしたらできますよー。", "\n\n", "\n", "js", "\n", "created", "()", " ", "{", "\n  ", "const", " ", "{", " ", "map", " ", "}", " ", "=", " ", "this", ".", "$parent", "\n  ", "map", ".", "on", "(", "'load'", ",", " ", "()", " ", "=>", " ", "{", "\n    ", "map", ".", "addSource", "(", "/* ... */", ")", "\n    ", "map", ".", "addLayer", "(", "/* ... */", ")", "\n  ", "})", "\n", "},", "\n", "beforeDestroy", "()", " ", "{", "\n  ", "const", " ", "{", " ", "map", " ", "}", " ", "=", " ", "this", ".", "$parent", "\n  ", "map", ".", "on", "(", "'load'", ",", " ", "()", " ", "=>", " ", "{", "\n    ", "map", ".", "removeSource", "(", "/* ... */", ")", "\n    ", "map", ".", "removeLayer", "(", "/* ... */", ")", "\n  ", "})", "\n", "},", "\n", "render", "(", "h", ")", " ", "{", "\n  ", "return", " ", "null", "\n", "}", "\n", "\n", "\n\n", "だが、", "$parent", "はこういうときだけは許すが、基本的には絶対使うなよ！", "\n\n", "うーん、この例はいまいちよく理解できてない。", "\n\n", "\n", "さいごに", "\n\n", "この７つのうち２つが違うバージョンもGitリポジトリにあるので、気が向いたらその２つもまとめてみよう。", "\n"], "code": ["created", " ", "()", " ", "{", "\n    ", "this", ".", "fetchUserList", "()", "\n", "}", "\n", "watch", ":", " ", "{", "\n    ", "searchText", "()", " ", "{", "\n        ", "this", ".", "fetchUserList", "()", "\n    ", "}", "\n", "}", "\n", "created", " ", "()", " ", "{", "\n    ", "this", ".", "fetchUserList", "()", "\n", "}", "\n", "watch", ":", " ", "{", "\n    ", "searchText", ":", "  ", "'fetchUserList'", "\n", "}", "\n", "watch", ":", " ", "{", "\n    ", "searchText", ":", "  ", "'fetchUserList'", ",", "\n    ", "immediate", ":", " ", "true", "\n", "}", "\n", "<BaseInput", "\n  ", "v-mode=", "'searchText'", "\n  ", "@", "keydown", ".", "enter=", "'search'", "\n", "/>", "\n", "<BaseButton", " ", "@", "click=", "'search'", ">", "\n  ", "<BaseIcon", " ", "name=", "'search'", "/>", "\n", "</BaseButton>", "\n", "import", " ", "BaseButton", " ", "from", " ", "'./base-button'", "\n", "import", " ", "BaseIcon", " ", "from", " ", "'./base-icon'", "\n", "import", " ", "BaseInput", " ", "from", " ", "'./base-input'", "\n\n", "export", " ", "default", " ", "{", "\n  ", "components", ":", " ", "{", "\n    ", "BaseButton", ",", "\n    ", "BaseIcon", ",", "\n    ", "BaseInput", "\n  ", "}", "\n", "}", "\n", "import", " ", "Vue", " ", "from", " ", "'vue'", "\n", "import", " ", "upperFirst", " ", "from", " ", "'lodash/upperFirst'", "\n", "import", " ", "camelCase", " ", "from", " ", "'lodash/camelCase'", "\n\n", "// Require in a base component context", "\n", "const", " ", "requireComponent", " ", "=", " ", "require", ".", "context", "(", "\n  ", "‘", ".", "/", "components", "’", ",", " ", "false", ",", " ", "/base-", "[\\w", "-", "]", "+", "\\.", "vue$/", "\n", ")", "\n\n", "requireComponent", ".", "keys", "().", "forEach", "(", "fileName", " ", "=>", " ", "{", "\n  ", "// Get component config", "\n  ", "const", " ", "componentConfig", " ", "=", " ", "requireComponent", "(", "fileName", ")", "\n\n  ", "// Get PascalCase name of component", "\n  ", "const", " ", "componentName", " ", "=", " ", "upperFirst", "(", "\n    ", "camelCase", "(", "fileName", ".", "replace", "(", "/^", "\\.\\/", "/", ",", " ", "''", ").", "replace", "(", "/", "\\.\\w", "+$/", ",", " ", "''", "))", "\n  ", ")", "\n\n  ", "// Register component globally", "\n  ", "Vue", ".", "component", "(", "componentName", ",", " ", "componentConfig", ".", "default", " ", "||", " ", "componentConfig", ")", "\n", "})", "\n", "componentConfig", ".", "default", " ", "||", " ", "componentConfig", "\n", "import", " ", "auth", " ", "from", " ", "'./modules/auth'", "\n", "import", " ", "posts", " ", "from", " ", "'./modules/posts'", "\n", "import", " ", "comments", " ", "from", " ", "'./modules/comments'", "\n", "// ...", "\n\n", "export", " ", "default", " ", "new", " ", "Vuex", ".", "Store", "({", "\n  ", "modules", ":", " ", "{", "\n    ", "auth", ",", "\n    ", "posts", ",", "\n    ", "comments", ",", "\n    ", "// ...", "\n  ", "}", "\n", "})", "\n", "import", " ", "camelCase", " ", "from", " ", "'lodash/camelCase'", "\n", "const", " ", "requireModule", " ", "=", " ", "require", ".", "context", "(", "'.'", ",", " ", "false", ",", " ", "/", "\\.", "js$/", ")", "\n", "const", " ", "modules", " ", "=", " ", "{}", "\n\n", "requireModule", ".", "keys", "().", "forEach", "(", "fileName", " ", "=>", " ", "{", "\n  ", "// Don't register this file as a Vuex module", "\n  ", "if", " ", "(", "fileName", " ", "===", " ", "'./index.js'", ")", " ", "return", "\n\n  ", "const", " ", "moduleName", " ", "=", " ", "camelCase", "(", "\n    ", "fileName", ".", "replace", "(", "/", "(\\.\\/", "|", "\\.", "js", ")", "/g", ",", " ", "''", ")", "\n  ", ")", "\n  ", "// namespaceつけとくと便利だぜ！", "\n  ", "modules", "[", "moduleName", "]", " ", "=", " ", "{", "\n    ", "namespaced", ":", " ", "true", ",", "\n    ", "...", "requireModule", "(", "fileName", "),", "\n  ", "}", "\n  ", "// namespaceいらなければこんな感じ", "\n  ", "// modules[moduleName] = requireModule(fileName)", "\n", "})", "\n", "export", " ", "default", " ", "modules", "\n", "import", " ", "auth", " ", "from", " ", "'./modules'", "\n\n", "export", " ", "default", " ", "new", " ", "Vuex", ".", "Store", "({", "\n  ", "modules", "\n", "})", "\n", "data", "()", " ", "{", "\n  ", "return", " ", "{", "\n    ", "loading", ":", " ", "false", ",", "\n    ", "error", ":", " ", "null", ",", "\n    ", "post", ":", " ", "null", "\n  ", "}", "\n", "},", "\n", "watch", ":", " ", "{", "\n  ", "'$route'", ":", " ", "{", "\n    ", "handler", ":", " ", "'resetData'", ",", "\n    ", "immediate", ":", " ", "true", "\n  ", "}", "\n", "},", "\n", "methods", ":", " ", "{", "\n  ", "resetData", "()", " ", "{", "\n    ", "this", ".", "loading", " ", "=", " ", "false", "\n    ", "this", ".", "error", " ", "=", " ", "null", "\n    ", "this", ".", "post", " ", "=", " ", "null", "\n    ", "this", ".", "getPost", "(", "this", ".", "$route", ".", "params", ".", "id", ")", "\n  ", "},", "\n  ", "getPost", "(", "postId", ")", " ", "{", "\n    ", "// ...", "\n  ", "}", "\n", "}", "\n", "data", "()", " ", "{", "\n  ", "return", " ", "{", "\n    ", "loading", ":", " ", "false", ",", "\n    ", "error", ":", " ", "null", ",", "\n    ", "post", ":", " ", "null", "\n  ", "}", "\n", "},", "\n", "created", " ", "()", " ", "{", "\n  ", "this", ".", "getPost", "(", "this", ".", "$route", ".", "params", ".", "id", ")", "\n", "},", "\n", "methods", ":", " ", "{", "\n  ", "getPost", "(", "postId", ")", " ", "{", "\n    ", "// ...", "\n  ", "}", "\n", "}", "\n", "<router-view", " ", ":key=", "\"$route.fullPath\"", "><router-view>", "\n", "<template>", "\n  ", "<input", "\n    ", ":value=", "\"value\"", "\n    ", "@", "input=", "\"$emit('input', $event.target.value)\"", "\n  ", ">", "\n", "</template>", "\n", "<BaseInput", " ", "@", "focus", ".", "native=", "\"doSomething\"", ">", "\n", "<template>", "\n  ", "<label>", "\n    {{ label }}\n    ", "<input", "\n      ", ":value=", "\"value\"", "\n      ", "@", "input=", "\"$emit('input', $event.target.value)\"", "\n    ", ">", "\n  ", "</label>", "\n", "</template>", "\n", "<template>", "\n  ", "<label>", "\n    {{ label }}\n    ", "<input", "\n      ", ":value=", "\"value\"", "\n      ", "v-on=", "\"listeners\"", "\n    ", ">", "\n  ", "</label>", "\n", "</template>", "\n\n", "<script>", "\n", "computed", ":", " ", "{", "\n  ", "listeners", "()", " ", "{", "\n    ", "return", " ", "{", "\n      ", "...", "this", ".", "$listeners", ",", "\n      ", "input", ":", " ", "event", " ", "=>", " \n        ", "this", ".", "$emit", "(", "'input'", ",", " ", "event", ".", "target", ".", "value", ")", "\n    ", "}", "\n  ", "}", "\n", "}", "\n", "</script>", "\n", "<BaseInput", " ", "@", "focus=", "\"doSomething\"", ">", "\n", "<BaseInput", "\n  ", "placeholder=", "\"What's your name?\"", "\n  ", "@", "focus=", "\"doSomething\"", "\n", "/>", "\n", "<template>", "\n  ", "<label>", "\n    {{ label }}\n    ", "<input", "\n      ", ":value=", "\"value\"", "\n      ", "v-on=", "\"listeners\"", "\n    ", ">", "\n  ", "</label>", "\n", "</template>", "\n", "<template>", "\n  ", "<label>", "\n    {{ label }}\n    ", "<input", "\n      ", "v-bind=", "$attrs\"", "\n      ", ":value=", "\"value\"", "\n      ", "v-on=", "\"listeners\"", "\n    ", ">", "\n  ", "</label>", "\n", "</template>", "\n", "(Emitted value instead of an instance of Error)\n  Error compiling template:\n\n  <div></div>\n  <div></div>\n\n  - Component template should contain exactly one root element. \n    If you are using v-if on multiple elements, use v-else-if \n    to chain them instead.\n", "<template>", "\n  ", "<li", "\n    ", "v-for=", "\"route in routes\"", "\n    ", ":key=", "\"route.name\"", "\n  ", ">", "\n    ", "<router-link", " ", ":to=", "\"route\"", ">", "\n      {{ route.title }}\n    ", "</router-link>", "\n  ", "</li>", "\n", "</template>", "\n", "<template>", "\n  ", "<ul>", "\n    ", "<NavBarRoutes", " ", ":routes=", "\"persistentNavRoutes\"", "/>", "\n    ", "<NavBarRoutes", "\n      ", "v-if=", "\"loggedIn\"", "\n      ", ":routes=", "\"loggedInNavRoutes\"", "\n    ", "/>", "\n    ", "<NavBarRoutes", "\n      ", "v-else", "\n      ", ":routes=", "\"loggedOutNavRoutes\"", "\n    ", "/>", "\n  ", "</ul>", "\n", "</template>", "\n\n", "functional: true,\nrender(h, { props }) {\n  return props.routes.map(route =>\n    ", "<li", " ", "key=", "{route.name}", ">", "\n      ", "<router-link", " ", "to=", "{route}", ">", "\n        {route.title}\n      ", "</router-link>", "\n    ", "</li>", "\n  )\n}\n", "// Init", "\n", "const", " ", "map", " ", "=", " ", "new", " ", "mapboxgl", ".", "Map", "(", "/* ... */", ")", "\n\n", "map", ".", "on", "(", "'load'", ",", " ", "()", " ", "=>", " ", "{", "\n  ", "// Data", "\n  ", "map", ".", "addSource", "(", "/* ... */", ")", "\n\n  ", "// Layers", "\n  ", "map", ".", "addLayer", "(", "/* ... */", ")", "\n  ", "map", ".", "addLayer", "(", "/* ... */", ")", "\n\n  ", "// Hover effects", "\n  ", "map", ".", "on", "(", "'mousemove'", ",", " ", "/* ... */", ")", "\n  ", "map", ".", "on", "(", "'mouseleave'", ",", " ", "/* ... */", ")", "\n", "})", "\n", "<MapboxMap>", "\n  ", "<MapboxMarkers", "\n    ", ":items=", "\"cities\"", "\n    ", "primary", "\n  ", ">", "\n    ", "<template", " ", "slot-scope=", "\"city\"", ">", "\n      ", "<h3>", "{{ city.name }}", "</h3>", "\n    ", "</template>", "\n  ", "</MapboxMarkers>", "\n  ", "<MapboxNavigation/>", "\n", "</MapboxMap>", "\n", "created", "()", " ", "{", "\n  ", "const", " ", "{", " ", "map", " ", "}", " ", "=", " ", "this", ".", "$parent", "\n  ", "map", ".", "on", "(", "'load'", ",", " ", "()", " ", "=>", " ", "{", "\n    ", "map", ".", "addSource", "(", "/* ... */", ")", "\n    ", "map", ".", "addLayer", "(", "/* ... */", ")", "\n  ", "})", "\n", "},", "\n", "beforeDestroy", "()", " ", "{", "\n  ", "const", " ", "{", " ", "map", " ", "}", " ", "=", " ", "this", ".", "$parent", "\n  ", "map", ".", "on", "(", "'load'", ",", " ", "()", " ", "=>", " ", "{", "\n    ", "map", ".", "removeSource", "(", "/* ... */", ")", "\n    ", "map", ".", "removeLayer", "(", "/* ... */", ")", "\n  ", "})", "\n", "},", "\n", "render", "(", "h", ")", " ", "{", "\n  ", "return", " ", "null", "\n", "}", "\n"]},
{"title": ["Go の Embedded を理解する"], "body": ["Go で継承みたいなことをしたい時は Embedded のしくみを使える。ふわっとしかわかってないことに気づいたけど、リファレンスレベルだけど、自分用に整理しておく", "\n\n", "\n", "Embedding", "\n", "\n\n", "\n", "Embedded が使える種類", "\n\n", "interface と struct に対して使える。", "\n\n", "\n", "interface", "\n\n", "type", " ", "Reader", " ", "interface", " ", "{", "\n  ", "Read", "(", "p", " ", "[]", "byte", ")", " ", "(", "n", " ", "int", ",", " ", "err", " ", "error", ")", " \n", "}", "\n", "type", " ", "Writer", " ", "interface", " ", "{", "\n  ", "Write", "(", "p", " ", "[]", "byte", ")(", "n", " ", "int", ",", " ", "err", " ", "error", ")", "\n\n", "type", " ", "ReadWriter", " ", "interface", " ", "{", "\n  ", "Reader", "\n  ", "Writer", "\n", "}", "\n", "\n\n", "\n", "struct", "\n\n", "struct の場合は、ポインタで書くこと", "\n\n", "embeded", " ", "should", " ", "be", " ", "pointer", "\n\n", "type", " ", "ReadWriter", " ", "struct", " ", "{", "\n   ", "*", "bufio", ".", "Reader", "\n   ", "*", "bufio", ".", "Writer", "\n", "}", "\n", "\n\n", "\n", "struct の初期化", "\n\n", "struct の Embedded を使ったら初期化しないといけない。", "\n\n", "type", " ", "Job", " ", "struct", " ", "{", "\n  ", "Common", " ", "string", "\n  ", "*", "log", ".", "Logger", "\n", "}", "\n", "\n\n", "というEmbeddedを持っているとき初期化の際には初期化してEmbedded を持たせてあげる必要がある。", "\n\n", "func", " ", "NewJob", "(", "command", " ", "string", ",", " ", "logger", " ", "*", "log", ".", "Logger", ")", " ", "*", "Job", " ", "{", "\n  ", "return", " ", "&", "Job", "{", "command", ",", " ", "logger", "}", "\n", "}", "\n", "or", "\n", "job", " ", ":=", " ", "&", "Job", "{", "command", ",", " ", "log", ".", "New", "(", "os", ".", "Stderr", ",", " ", "\"Job: \"", ",", " ", "log", ".", "Ldate", ")}", "\n", "\n\n", "\n", "struct のオーバーライド", "\n\n", "Embedded を次のようにも書ける。その際には、自分でデリゲートしてあげる必要がある。おそらくメソッドをオーバーライドしたい時に使える。", "\n\n", "func", " ", "(", "job", " ", "*", "Job", ")", " ", "Logf", "(", "format", " ", "string", ",", " ", "args", " ", "...", "interface", "{})", " ", "{", "\n   ", "job", ".", "Logger", ".", "Logf", "(", "\"%q: %s\"", ",", " ", "job", ".", "Command", ",", " ", "fmt", ".", "Sprintf", "(", "format", ",", " ", "args", "...", "))", "\n", "}", "\n", "\n\n", "また、自分で次のように書いてオーバーライドしても良い", "\n\n", "type", " ", "ReadWriter", " ", "struct", " ", "{", "\n    ", "reader", " ", "*", "bufio", ".", "Reader", "\n\n", "func", " ", "(", "rw", " ", "*", "ReadWriter", ")", " ", "Read", "(", "p", " ", "[]", "byte", ")", " ", "(", "n", " ", "int", ",", " ", "err", " ", "error", ")", " ", "{", "\n   ", "return", " ", "rw", ".", "reader", ".", "Read", "(", "p", ")", "\n", "}", "\n", "\n\n", "\n", "関数が重複したら？", "\n\n", "Embedded を使った Struct と元の struct の関数のシグネチャが重複したら、Embedded を使った方が優先させる。（Job と Logger では、Job の関数が優先）また、Embedded した元の struct で誰かが重複させてしまった場合、その場合でも、Job の方はプロテクションの機構が働いて、使えはする。その重複しているメンバにアクセスしない限りは。", "\n\n", "\n", "まとめ", "\n\n", "リファレンスのまんまですが、自分の整理のために書きました。", "\n"], "code": ["type", " ", "Reader", " ", "interface", " ", "{", "\n  ", "Read", "(", "p", " ", "[]", "byte", ")", " ", "(", "n", " ", "int", ",", " ", "err", " ", "error", ")", " \n", "}", "\n", "type", " ", "Writer", " ", "interface", " ", "{", "\n  ", "Write", "(", "p", " ", "[]", "byte", ")(", "n", " ", "int", ",", " ", "err", " ", "error", ")", "\n\n", "type", " ", "ReadWriter", " ", "interface", " ", "{", "\n  ", "Reader", "\n  ", "Writer", "\n", "}", "\n", "embeded", " ", "should", " ", "be", " ", "pointer", "\n\n", "type", " ", "ReadWriter", " ", "struct", " ", "{", "\n   ", "*", "bufio", ".", "Reader", "\n   ", "*", "bufio", ".", "Writer", "\n", "}", "\n", "type", " ", "Job", " ", "struct", " ", "{", "\n  ", "Common", " ", "string", "\n  ", "*", "log", ".", "Logger", "\n", "}", "\n", "func", " ", "NewJob", "(", "command", " ", "string", ",", " ", "logger", " ", "*", "log", ".", "Logger", ")", " ", "*", "Job", " ", "{", "\n  ", "return", " ", "&", "Job", "{", "command", ",", " ", "logger", "}", "\n", "}", "\n", "or", "\n", "job", " ", ":=", " ", "&", "Job", "{", "command", ",", " ", "log", ".", "New", "(", "os", ".", "Stderr", ",", " ", "\"Job: \"", ",", " ", "log", ".", "Ldate", ")}", "\n", "func", " ", "(", "job", " ", "*", "Job", ")", " ", "Logf", "(", "format", " ", "string", ",", " ", "args", " ", "...", "interface", "{})", " ", "{", "\n   ", "job", ".", "Logger", ".", "Logf", "(", "\"%q: %s\"", ",", " ", "job", ".", "Command", ",", " ", "fmt", ".", "Sprintf", "(", "format", ",", " ", "args", "...", "))", "\n", "}", "\n", "type", " ", "ReadWriter", " ", "struct", " ", "{", "\n    ", "reader", " ", "*", "bufio", ".", "Reader", "\n\n", "func", " ", "(", "rw", " ", "*", "ReadWriter", ")", " ", "Read", "(", "p", " ", "[]", "byte", ")", " ", "(", "n", " ", "int", ",", " ", "err", " ", "error", ")", " ", "{", "\n   ", "return", " ", "rw", ".", "reader", ".", "Read", "(", "p", ")", "\n", "}", "\n"]},
{"title": ["今日からは、こう名乗るがよい。ARKit-Emperorと。(ARKit 2.0 Sample Code)"], "body": ["遠い昔、はるか彼方の銀河系で…。", "\n\n", "iPhoneSEとiPhoneXがストアから滅亡した時代、AR市場はPokemon GOによる圧政下にあった。そんな中、反乱同盟軍のスパイがARKit 2.0の極秘設計図のデータを密かに盗み出す事に成功した。。。", "\n\n", "\n", "ARKit-Emperor", "\n\n", "iOS 12のリリースと同日に、ARKitのサンプル集「", "ARKit-Emperor", "」をオープンソースで公開しました。", "\n\n", "ARKit-Emperor", "\n\n", "\n\n", "お分かりでしょうか？", "\n\n", "完全に", "堤さん", "の", "ARKit-Sampler", "を意識しています。", "\n\n", "ARKit-Samplerと同様、「余計な実装を混ぜずに、できるだけシンプルな実装で伝える」というところに気をつけています。また、現在作成中のUdemyのARKit2.0 講座で利用するために用意したものとなっています。", "\n\n", "https://github.com/kboy-silvergym/ARKit-Emperor", "\n\n", "↑是非スターをお願いします🙏", "\n\n", "\n", "ビルド方法", "\n\n", "最新のXcode10でビルドしてiOS 12端末にインストール", "\n\n", "\n", "サンプル一覧", "\n\n", "今のところ8個のサンプルが入っています。随時追加していきます。", "\n\n", "\n", "Doodle (ARKit 1.0~)", "\n\n", "\n\n", "ARKit-Samplerにも", "AR Drawing", "がありますが、このコードはもっとシンプルで短いコードとなっています。線を描くことが意外にシンプルなんだなとわかると思います。", "\n\n", "GRAFFITY - ARビデオ通話 -", "ではもっとパフォーマンスの良いコードとなっていますが、そっちは企業秘密です。笑", "\n\n", "\n", "Placing pictures (ARKit 1.0~)", "\n\n", "\n\n", "額縁をSceneKitで作ってみました。中の画像は変数となっているのでカメラロールの写真にしたりすることができます。また、額縁の柄や色もmaterialをいじって変更することができます。", "\n\n", "\n", "Rich Plane Detection (ARKit 1.5~)", "\n\n", "\n\n", "ARKit 1.5から使える矩形だけではない平面認識に、イケてる画像マテリアルとfadeInOutのアニメーションをつけてみました。", "\n\n", "\n", "Tongue Detection (舌の認識) (ARKit 2.0~)", "\n\n", "\n\n", "Face DetectionはiPhoneX, XS, XS Max, XRだけで使うことができます。ARKit 2.0から舌を認識できるようになったので舌を出している時だけ飛行機が回転するデモを作ってみました。見苦しいですねw", "\n\n", "\n", "Persistent Memo (ARKit 2.0~)", "\n\n", "\n\n", "ARKit 2.0から使えるARWorldMapを端末にアーカイブして保存し、再起動時にconfigurationに渡してloadすることで、デモではゴミ箱の位置に「", "WEDNESDAY", "」という文字を保存することに成功しています。（", "渋谷区では水曜日は資源ごみの日となっております", "）", "\n\n", "\n", "Mirror (ARKit 2.0~)", "\n\n", "\n\n", "environmental texturingのautomaticを使って、部屋の風景をバーチャル物体が反射しているというデモです。完璧に鏡とまでは行きませんが、いい感じに反射していることを体感できます。(早稲田のダンスサークルはこのレベルの反射の鏡でダンスしてましたよw)", "\n\n", "\n", "Business Card (ARKit 2.0~)", "\n\n", "\n", "\n", "\n", "読み取りと表示", "\n", "インタラクション", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n", "\n\n", "名刺の画像を読み込んでおいて、それを認識したらSceneKitで作成したボタンとサムネイルをちょいアニメーションさせて表示してます。", "\n\n", "タップイベントはhitTestがボタンのnodeにぶつかったら判定して、safariを開いています。", "\n\n", "\n", "Detecting your Remote (ARKit 2.0~)", "\n\n", "\n\n", "Apple公式のサンプルコード", "がめちゃめちゃ複雑だったのでシンプルにしたいと思ってたんですが、", "まだ途中です。。", " ARReferenceObjectはARKit 2.0の新しいAPIの中で一番扱いが難しいです。", "\n\n", "\n", "Coming soon...", "\n\n", "\n", "Detecting your Remoteの完成(ARKit2.0~)", "\n", "ピンチインアウトや平行移動などのGesture(ARKit1.0~)", "\n", "\n", "FirebaseCloudAnchorのサンプル", "を合体させる", "\n", "\n\n", "「ちょっと動かしてみたよー」というサンプルではなく、見ていて面白くて実用的な雰囲気のある、それでいてシンプルなrepositoryを目指していきたいです。", "\n\n", "\n", "関連リンク", "\n\n", "\n", "Qiita | ARKit 2.0の何が凄いのか\n", "\n", "Qiita | ARKitのための3D数学\n", "\n", "\n\n", "\n", "スターください", "\n\n", "https://github.com/kboy-silvergym/ARKit-Emperor", "\n\n", "↑是非スターをお願いします🙏", "\n"], "code": []},
{"title": ["書籍「将棋AIで学ぶディープラーニング」のプログラムコードをGoogle Colabで動かす"], "body": ["\n", "\n", "書籍「将棋AIで学ぶディープラーニング」のプログラムコードをGoogle Colabで動かす", "\n\n", "\n", "以前は\n\n", "\n", "「", "書籍「将棋AIで学ぶディープラーニング」のプログラムコードを動かす", "」にて、写経部分をコピペできるようにしました。", "\n", "「", "書籍「将棋AIで学ぶディープラーニング」のプログラムコードをCPUで動かす", "」にて、CPUで動くように書きかえました。", "\n", "\n", "\n", "今回は\n\n", "\n", "\n", "Google Colab", "で動かします。", "\n", "\n", "\n", "\n\n", "\n", "一番伝えたい事", "\n\n", "\n", "「", "ColaboratoryでのGoogle Driveへのマウントが簡単になっていたお話 - Qiita", "」が凄く嬉しかった。", "\n", "ですが、いいねが伸びてない、検索上位に上がって来てないので、活用記事を書いて支援したい。", "\n", "\n\n", "\n", "やること", "\n\n", "\n", "ローカル端末で資材を集める", "\n", "Googleドライブと同期する", "\n", "Google ColabでGoogleドライブをマウント", "\n", "環境つくり", "\n", "実行", "\n", "\n\n", "\n", "ローカル端末で資材を集める", "\n\n", "\n", "python-dlshogi on Githubをクローンする。\n\n", "\n", "git clone https://github.com/TadaoYamaoka/python-dlshogi.git", "\n", "\n", "\n", "whl.txtをつくる", "\n", "\n\n", "\n", "whl.txt", "\n", "cupy-cuda80==4.4.1\nfilelock==3.0.8\nnumpy==1.14.5\nprotobuf==3.6.1\nsix==1.11.0\nsetuptools==39.1.0\nfastrlock==0.4\n", "\n", "\n\n", "\n", "依存モジュールをダウンロードする。\n\n", "\n", "pip download --only-binary=:all: --platform manylinux1_x86_64 --python-version 36 --implementation cp --abi cp36m -d ./pip_cache -r ./whl.txt", "\n", "\n", "\n", "\n\n", "\n", "ここまでの仕上がり", "\n", "\\Google ドライブ\n│  whl.txt\n│  \n├─pip_cache\n│      cupy_cuda80-4.4.1-cp36-cp36m-manylinux1_x86_64.whl\n│      fastrlock-0.4-cp36-cp36m-manylinux1_x86_64.whl\n│      filelock-3.0.8-py3-none-any.whl\n│      numpy-1.14.5-cp36-cp36m-manylinux1_x86_64.whl\n│      protobuf-3.6.1-cp36-cp36m-manylinux1_x86_64.whl\n│      setuptools-39.1.0-py2.py3-none-any.whl\n│      six-1.11.0-py2.py3-none-any.whl\n│      \n├─python-dlshogi\n│  │  etc...\n", "\n", "\n\n", "\n", "Googleドライブと同期する", "\n\n", "章題のとおり。", "\n\n", "\n", "Google ColabでGoogleドライブをマウント", "\n\n", "Go to this URL in a browser:", "が一度だけでてきます。これまでのイディオムだと二度必要だったので楽になりました。", "\n\n", "\n", "Colab_cel_1", "\n", "from", " ", "google.colab", " ", "import", " ", "drive", "\n", "drive", ".", "mount", "(", "'/content/drive'", ")", "\n", "\n", "\n\n", "ここでは、", "My Drive", "が空白含みで扱いづらいのでリンクはってみました。", "\n\n", "\n", "Colab_cel_2", "\n", "%", "cd", " ", "/", "content", "\n", "!", "ln", " ", "-", "snf", " ", "'/content/drive/My Drive/'", " ", "MyDrive", "\n", "\n", "\n\n", "やってて気づきましたが、一つのセルに一行で書くだけなら、", "cd hoge", "や", "ls", "などが", "%cd", "や", "!ls", "としなくて良くなりました。楽ちんです。", "\n\n", "\n", "環境つくり", "\n\n", "\n", "依存モジュールを事前に入れつつ、chainerとpython-shogiをいれます。", "\n", "Colabの12時間制限と戦うときなど、もっと全部あらかじめダウンロード＆ドライブにアップしとく事もできるのでやりたい人は頑張ってください。", "\n", "\n\n", "\n", "Colab_cel_3", "\n", "# for cupy", "\n", "!", "apt", "-", "get", " ", "install", " ", "--", "no", "-", "install", "-", "recommends", " ", "libcusparse8", ".", "0", " ", "libnvrtc8", ".", "0", " ", "libnvtoolsext1", "\n", "!", "ln", " ", "-", "snf", " ", "/", "usr", "/", "lib", "/", "x86_64", "-", "linux", "-", "gnu", "/", "libnvrtc", "-", "builtins", ".", "so", ".", "8.0", " ", "/", "usr", "/", "lib", "/", "x86_64", "-", "linux", "-", "gnu", "/", "libnvrtc", "-", "builtins", ".", "so", "\n", "# install cupy", "\n", "%", "cd", " ", "/", "content", "/", "MyDrive", "/", "\n", "!", "pip", " ", "install", " ", "--", "no", "-", "index", " ", "--", "find", "-", "links", "=./", "pip_cache", " ", "-", "r", " ", "./", "whl", ".", "txt", "\n", "!", "pip", " ", "install", " ", "chainer", "==", "4.4", ".", "0", " ", "python", "-", "shogi", "==", "1.0", ".", "8", "\n", "\n", "\n\n", "お目当ての", "python-dlshogi", "をありがたくインストールします。", "\n\n", "\n", "Colab_cel_4", "\n", "%", "cd", " ", "/", "content", "/", "MyDrive", "/", "python", "-", "dlshogi", "\n", "!", "pip", " ", "install", " ", "--", "no", "-", "cache", "-", "dir", " ", "-", "e", " ", ".", "\n", "\n", "\n\n", "\n", "実行", "\n\n", "\n", "ためしにmctsプレイヤを動かします。", "\n", "\n\n", "\n", "Colab_cel_5", "\n", "!", "python", " ", "-", "m", " ", "pydlshogi", ".", "usi", ".", "usi_mcts_player", "\n", "\n", "\n\n", "\n", "つぎのテキスト入力を順次して動作することを確認します。\n\n", "\n", "Colabっていつから対話できるようになりましたか？楽ちん。", "\n", "\n", "\n", "\n\n", "\n", "\n", "usi", "\n\n", "\n", "戻りの最終行は", "usiok", "\n", "\n", "\n", "\n", "\n", "setoption name modelfile value /content/MyDrive/python-dlshogi/model/model_policy_value_resnet", "\n\n", "\n", "戻りはない", "\n", "\n", "\n", "\n", "isready", "\n\n", "\n", "戻りは", "readyok", "\n", "\n", "\n", "\n", "\n", "position startpos", "\n\n", "\n", "戻りは", "lnsgkgsnl/1r5b1/ppppppppp/9/9/9/PPPPPPPPP/1B5R1/LNSGKGSNL b - 1", "\n", "\n", "\n", "\n", "\n", "go", "\n\n", "\n", "戻りの最終行は", "bestmove ....", "\n", "\n", "\n", "\n", "quit", "\n", "\n\n", "おしまい", "\n"], "code": ["cupy-cuda80==4.4.1\nfilelock==3.0.8\nnumpy==1.14.5\nprotobuf==3.6.1\nsix==1.11.0\nsetuptools==39.1.0\nfastrlock==0.4\n", "\\Google ドライブ\n│  whl.txt\n│  \n├─pip_cache\n│      cupy_cuda80-4.4.1-cp36-cp36m-manylinux1_x86_64.whl\n│      fastrlock-0.4-cp36-cp36m-manylinux1_x86_64.whl\n│      filelock-3.0.8-py3-none-any.whl\n│      numpy-1.14.5-cp36-cp36m-manylinux1_x86_64.whl\n│      protobuf-3.6.1-cp36-cp36m-manylinux1_x86_64.whl\n│      setuptools-39.1.0-py2.py3-none-any.whl\n│      six-1.11.0-py2.py3-none-any.whl\n│      \n├─python-dlshogi\n│  │  etc...\n", "from", " ", "google.colab", " ", "import", " ", "drive", "\n", "drive", ".", "mount", "(", "'/content/drive'", ")", "\n", "%", "cd", " ", "/", "content", "\n", "!", "ln", " ", "-", "snf", " ", "'/content/drive/My Drive/'", " ", "MyDrive", "\n", "# for cupy", "\n", "!", "apt", "-", "get", " ", "install", " ", "--", "no", "-", "install", "-", "recommends", " ", "libcusparse8", ".", "0", " ", "libnvrtc8", ".", "0", " ", "libnvtoolsext1", "\n", "!", "ln", " ", "-", "snf", " ", "/", "usr", "/", "lib", "/", "x86_64", "-", "linux", "-", "gnu", "/", "libnvrtc", "-", "builtins", ".", "so", ".", "8.0", " ", "/", "usr", "/", "lib", "/", "x86_64", "-", "linux", "-", "gnu", "/", "libnvrtc", "-", "builtins", ".", "so", "\n", "# install cupy", "\n", "%", "cd", " ", "/", "content", "/", "MyDrive", "/", "\n", "!", "pip", " ", "install", " ", "--", "no", "-", "index", " ", "--", "find", "-", "links", "=./", "pip_cache", " ", "-", "r", " ", "./", "whl", ".", "txt", "\n", "!", "pip", " ", "install", " ", "chainer", "==", "4.4", ".", "0", " ", "python", "-", "shogi", "==", "1.0", ".", "8", "\n", "%", "cd", " ", "/", "content", "/", "MyDrive", "/", "python", "-", "dlshogi", "\n", "!", "pip", " ", "install", " ", "--", "no", "-", "cache", "-", "dir", " ", "-", "e", " ", ".", "\n", "!", "python", " ", "-", "m", " ", "pydlshogi", ".", "usi", ".", "usi_mcts_player", "\n"]},
{"title": ["[メモ] VagrantにてZephyr(RTOS)の開発環境を作って試す"], "body": ["\n", "\n", "概要", "\n\n", "\n", "\n", "Zephyr Project", "というRTOSの開発環境をVagrantで作って、サクッと試す。", "\n", "参考: ", "https://docs.zephyrproject.org/1.13.0/getting_started/installation_linux.html", "\n", "\n", "\n\n\n\n", "\n", "環境", "\n\n", "\n", "Windows 10 Pro (1803) 64bit", "\n", "VirtualBox v5.2.18 + Extension Pack", "\n", "Vagrant v2.1.5\n\n", "\n", "Boxベース: 'ubuntu/bionic64' (v20180919.0.0) for 'virtualbox'", "\n", "\n", "\n", "Zephyr: v1.13.0", "\n", "\n\n", "\n", "Vagrantfile", "\n\n", "\n", "Vagrantfile", "\n", "# -*- mode: ruby -*-", "\n", "# vi: set ft=ruby :", "\n", "#", "\n", "# https://qiita.com/mt08/items/9014862d81282f4e04f0", "\n", "#", "\n", "# Reference(s):", "\n", "#   https://docs.zephyrproject.org/1.13.0/getting_started/installation_linux.html", "\n", "#", "\n", "# vagrant up && vagrant reload", "\n\n", "VM_NAME", "=", "\"u1804-zephyr\"", "\n", "VM_MEMORY", "=", "2048", "\n", "VM_CORES", "=", "2", "\n\n", "Vagrant", ".", "configure", "(", "\"2\"", ")", " ", "do", " ", "|", "config", "|", "\n    ", "config", ".", "vm", ".", "box", " ", "=", " ", "\"ubuntu/bionic64\"", "\n    ", "config", ".", "vbguest", ".", "auto_update", " ", "=", " ", "false", "\n    ", "#config.vm.network \"public_network\"", "\n    ", "config", ".", "vm", ".", "network", " ", "\"forwarded_port\"", ",", " ", "guest: ", "22", ",", " ", "host: ", "2322", ",", " ", "id: ", "\"ssh\"", "\n    ", "config", ".", "vm", ".", "provider", " ", "\"virtualbox\"", " ", "do", " ", "|", "vb", "|", "\n        ", "vb", ".", "name", " ", "=", " ", "VM_NAME", "\n        ", "vb", ".", "cpus", " ", "=", " ", "VM_CORES", "\n        ", "vb", ".", "memory", " ", "=", " ", "VM_MEMORY", "\n    ", "end", "\n\n    ", "config", ".", "vm", ".", "provision", " ", "\"shell\"", ",", " ", "inline: ", "<<-", "SHELL", "\n        # Allow ssh with PasswordAuthentication\n        sed -i -e 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config\n        systemctl restart ssh\n        # apt-cache-server \n        #echo 'Acquire::http::Proxy \"http://apt-cache-server:3142\";' | tee /etc/apt/apt.conf.d/02proxy\n        #\n        export DEBIAN_FRONTEND=noninteractive\n        echo apt update & upgrade\n        apt-get -qq update && apt-get -qq upgrade \n        echo Installing Requirements and Dependencies\n        apt-get -qq install -y --no-install-recommends git cmake ninja-build gperf ccache doxygen dfu-util device-tree-compiler python3-ply python3-pip python3-setuptools python3-wheel xz-utils file make gcc-multilib autoconf automake libtool librsvg2-bin texlive-latex-base texlive-latex-extra latexmk texlive-fonts-recommended\n        #\n        echo zephyr-sdk\n        wget --quiet --continue https://github.com/zephyrproject-rtos/meta-zephyr-sdk/releases/download/0.9.3/zephyr-sdk-0.9.3-setup.run -O /vagrant/zephyr-sdk-0.9.3-setup.run\n        echo \"/opt/zephyr-sdk\" | /bin/sh /vagrant/zephyr-sdk-0.9.3-setup.run --quiet\n", "    SHELL", "\n\n    ", "config", ".", "vm", ".", "provision", " ", "\"shell\"", ",", " ", "privileged: ", "false", ",", " ", "inline: ", "<<-", "SHELL", "\n        cd ${HOME}\n        echo git clone \n        git clone https://github.com/zephyrproject-rtos/zephyr.git\n        cd zephyr\n        git checkout zephyr-v1.13.0\n\n        # \n        echo \"export ZEPHYR_BASE=$(pwd)\"         >> ${HOME}/.profile\n        echo 'source $ZEPHYR_BASE/zephyr-env.sh' >> ${HOME}/.profile\n        cd ${HOME}\n\n        echo 'export ZEPHYR_TOOLCHAIN_VARIANT=zephyr'        >  ${HOME}/.zephyrrc\n        echo 'export ZEPHYR_SDK_INSTALL_DIR=/opt/zephyr-sdk' >> ${HOME}/.zephyrrc\n\n        # \n        source ${HOME}/.profile\n        echo Install additional packages required for development with Zephyr:\n        pip3 install --quiet --user -r $ZEPHYR_BASE/scripts/requirements.txt\n", "    SHELL", "\n", "end", "\n", "\n", "\n\n", "\n", "手順", "\n\n", "\n", "開発環境セットアップ", "\n\n", "\n", "VirtualBoxとVagrantをインストールして、使えるようにする", "\n", "適当なフォルダを作って、↑の", "Vagrantfile", "作成", "\n", "vagrant up && vagrant reload", "\n", "待つ (20分～)", "\n", "\n\n", "\n", "サンプルアプリのビルド(", "Hello World", ")", "\n\n", "https://docs.zephyrproject.org/latest/getting_started/getting_started.html#building-a-sample-application", "\n\n", "\n", "qemu_cortex_m3環境にて", "\n\n", "\n", "\n", "vagrant ssh", "にてログイン", "\n", "\n", "以下実行", "\n\n", "cd", " ", "$ZEPHYR_BASE", "/samples/hello_world\n", "mkdir ", "build ", "&&", " ", "cd ", "build\n", "# cmakeを使ってNinjaベースのビルドシステムを設定:", "\ncmake ", "-GNinja", " ", "-DBOARD", "=", "qemu_cortex_m3 ..\n", "# 生成されたビルドシステムにて、ninjaを実行:", "\nninja\nninja run\n", "\n", "\n", "\n", "Hello World! arm", "が表示される. CTRL-A, x にてqemuを抜ける", "\n\n", "\n", "実行例", "\n", "vagrant@ubuntu-bionic:~/zephyr/samples/hello_world/build$", " ninja run\n", "[0/1] To exit from QEMU enter: 'CTRL+a, x'[QEMU] CPU: cortex-m3\n***** Booting Zephyr OS zephyr-v1.13.0 *****\nHello World! arm\nQEMU: Terminated\n", "vagrant@ubuntu-bionic:~/zephyr/samples/hello_world/build$", "\n", "\n", "\n", "\n", "\n", "\n\n", "\n", "hello_worldのソースコード", "\n\n", "\n", "\n", "main.c", "\n\n", "\n", "zephyr/samples/hello_world/src/main.c", "\n", "/*\n * Copyright (c) 2012-2014 Wind River Systems, Inc.\n *\n * SPDX-License-Identifier: Apache-2.0\n */", "\n\n", "#include <zephyr.h>\n#include <misc/printk.h>\n", "\n", "void", " ", "main", "(", "void", ")", "\n", "{", "\n        ", "printk", "(", "\"Hello World! %s", "\\n", "\"", ",", " ", "CONFIG_ARCH", ");", "\n", "}", "\n", "\n", "\n", "\n", "\n\n", "\n", "その他", "\n\n", "\n", "Apache系の", "mynewt", "ってのもあったな..", "\n", "\n"], "code": ["# -*- mode: ruby -*-", "\n", "# vi: set ft=ruby :", "\n", "#", "\n", "# https://qiita.com/mt08/items/9014862d81282f4e04f0", "\n", "#", "\n", "# Reference(s):", "\n", "#   https://docs.zephyrproject.org/1.13.0/getting_started/installation_linux.html", "\n", "#", "\n", "# vagrant up && vagrant reload", "\n\n", "VM_NAME", "=", "\"u1804-zephyr\"", "\n", "VM_MEMORY", "=", "2048", "\n", "VM_CORES", "=", "2", "\n\n", "Vagrant", ".", "configure", "(", "\"2\"", ")", " ", "do", " ", "|", "config", "|", "\n    ", "config", ".", "vm", ".", "box", " ", "=", " ", "\"ubuntu/bionic64\"", "\n    ", "config", ".", "vbguest", ".", "auto_update", " ", "=", " ", "false", "\n    ", "#config.vm.network \"public_network\"", "\n    ", "config", ".", "vm", ".", "network", " ", "\"forwarded_port\"", ",", " ", "guest: ", "22", ",", " ", "host: ", "2322", ",", " ", "id: ", "\"ssh\"", "\n    ", "config", ".", "vm", ".", "provider", " ", "\"virtualbox\"", " ", "do", " ", "|", "vb", "|", "\n        ", "vb", ".", "name", " ", "=", " ", "VM_NAME", "\n        ", "vb", ".", "cpus", " ", "=", " ", "VM_CORES", "\n        ", "vb", ".", "memory", " ", "=", " ", "VM_MEMORY", "\n    ", "end", "\n\n    ", "config", ".", "vm", ".", "provision", " ", "\"shell\"", ",", " ", "inline: ", "<<-", "SHELL", "\n        # Allow ssh with PasswordAuthentication\n        sed -i -e 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config\n        systemctl restart ssh\n        # apt-cache-server \n        #echo 'Acquire::http::Proxy \"http://apt-cache-server:3142\";' | tee /etc/apt/apt.conf.d/02proxy\n        #\n        export DEBIAN_FRONTEND=noninteractive\n        echo apt update & upgrade\n        apt-get -qq update && apt-get -qq upgrade \n        echo Installing Requirements and Dependencies\n        apt-get -qq install -y --no-install-recommends git cmake ninja-build gperf ccache doxygen dfu-util device-tree-compiler python3-ply python3-pip python3-setuptools python3-wheel xz-utils file make gcc-multilib autoconf automake libtool librsvg2-bin texlive-latex-base texlive-latex-extra latexmk texlive-fonts-recommended\n        #\n        echo zephyr-sdk\n        wget --quiet --continue https://github.com/zephyrproject-rtos/meta-zephyr-sdk/releases/download/0.9.3/zephyr-sdk-0.9.3-setup.run -O /vagrant/zephyr-sdk-0.9.3-setup.run\n        echo \"/opt/zephyr-sdk\" | /bin/sh /vagrant/zephyr-sdk-0.9.3-setup.run --quiet\n", "    SHELL", "\n\n    ", "config", ".", "vm", ".", "provision", " ", "\"shell\"", ",", " ", "privileged: ", "false", ",", " ", "inline: ", "<<-", "SHELL", "\n        cd ${HOME}\n        echo git clone \n        git clone https://github.com/zephyrproject-rtos/zephyr.git\n        cd zephyr\n        git checkout zephyr-v1.13.0\n\n        # \n        echo \"export ZEPHYR_BASE=$(pwd)\"         >> ${HOME}/.profile\n        echo 'source $ZEPHYR_BASE/zephyr-env.sh' >> ${HOME}/.profile\n        cd ${HOME}\n\n        echo 'export ZEPHYR_TOOLCHAIN_VARIANT=zephyr'        >  ${HOME}/.zephyrrc\n        echo 'export ZEPHYR_SDK_INSTALL_DIR=/opt/zephyr-sdk' >> ${HOME}/.zephyrrc\n\n        # \n        source ${HOME}/.profile\n        echo Install additional packages required for development with Zephyr:\n        pip3 install --quiet --user -r $ZEPHYR_BASE/scripts/requirements.txt\n", "    SHELL", "\n", "end", "\n", "cd", " ", "$ZEPHYR_BASE", "/samples/hello_world\n", "mkdir ", "build ", "&&", " ", "cd ", "build\n", "# cmakeを使ってNinjaベースのビルドシステムを設定:", "\ncmake ", "-GNinja", " ", "-DBOARD", "=", "qemu_cortex_m3 ..\n", "# 生成されたビルドシステムにて、ninjaを実行:", "\nninja\nninja run\n", "vagrant@ubuntu-bionic:~/zephyr/samples/hello_world/build$", " ninja run\n", "[0/1] To exit from QEMU enter: 'CTRL+a, x'[QEMU] CPU: cortex-m3\n***** Booting Zephyr OS zephyr-v1.13.0 *****\nHello World! arm\nQEMU: Terminated\n", "vagrant@ubuntu-bionic:~/zephyr/samples/hello_world/build$", "\n", "\n", "/*\n * Copyright (c) 2012-2014 Wind River Systems, Inc.\n *\n * SPDX-License-Identifier: Apache-2.0\n */", "\n\n", "#include <zephyr.h>\n#include <misc/printk.h>\n", "\n", "void", " ", "main", "(", "void", ")", "\n", "{", "\n        ", "printk", "(", "\"Hello World! %s", "\\n", "\"", ",", " ", "CONFIG_ARCH", ");", "\n", "}", "\n"]},
{"title": ["Pythonデコレーターがややこしかったので覚書"], "body": ["\n", "\n", "コード", "\n\n", "def", " ", "print_more", "(", "func", "):", "\n    ", "def", " ", "wrapper", "(", "*", "args", ",", " ", "**", "kwargs", "):", "\n        ", "print", "(", "'asdf'", ")", "\n        ", "result", " ", "=", " ", "func", "(", "*", "args", ",", " ", "**", "kwargs", ")", "\n        ", "print", "(", "'result'", ",", " ", "result", ")", "\n        ", "return", " ", "result", "\n    ", "return", " ", "wrapper", "\n\n\n\n", "def", " ", "print_info", "(", "func", "):", "\n    ", "def", " ", "wrapper", "(", "*", "args", ",", " ", "**", "kwargs", "):", "\n        ", "print", "(", "'start'", ")", "\n        ", "result", " ", "=", " ", "func", "(", "*", "args", ",", " ", "**", "kwargs", ")", "\n        ", "print", "(", "'end'", ")", "\n        ", "return", " ", "result", "\n    ", "return", " ", "wrapper", "\n\n", "@print_info", "\n", "@print_more", "\n", "def", " ", "add_num", "(", "a", ",", " ", "b", "):", "\n    ", "return", " ", "a", " ", "+", " ", "b", "\n\n", "r", " ", "=", " ", "add_num", "(", "10", ",", " ", "20", ")", "\n", "print", "(", "r", ")", "\n", "\n\n", "\n", "実行結果", "\n\n", "start\nasdf\nresult 30\nend\n30\n", "\n\n", "\n", "解説", "\n\n", "上記の", "\n\n", "@print_info", "\n", "@print_more", "\n", "def", " ", "add_num", "(", "a", ",", " ", "b", "):", "\n    ", "return", " ", "a", " ", "+", " ", "b", "\n\n", "r", " ", "=", " ", "add_num", "(", "10", ",", " ", "20", ")", "\n", "print", "(", "r", ")", "\n", "\n\n", "は、", "\n\n", "f", " ", "=", " ", "print_info", "(", "print_more", "(", "add_num", "))", "\n\n", "r", " ", "=", " ", "f", "(", "10", ",", " ", "20", ")", "\n\n\n", "print", "(", "r", ")", "\n", "\n\n", "してるのと同じ。", "\n"], "code": ["def", " ", "print_more", "(", "func", "):", "\n    ", "def", " ", "wrapper", "(", "*", "args", ",", " ", "**", "kwargs", "):", "\n        ", "print", "(", "'asdf'", ")", "\n        ", "result", " ", "=", " ", "func", "(", "*", "args", ",", " ", "**", "kwargs", ")", "\n        ", "print", "(", "'result'", ",", " ", "result", ")", "\n        ", "return", " ", "result", "\n    ", "return", " ", "wrapper", "\n\n\n\n", "def", " ", "print_info", "(", "func", "):", "\n    ", "def", " ", "wrapper", "(", "*", "args", ",", " ", "**", "kwargs", "):", "\n        ", "print", "(", "'start'", ")", "\n        ", "result", " ", "=", " ", "func", "(", "*", "args", ",", " ", "**", "kwargs", ")", "\n        ", "print", "(", "'end'", ")", "\n        ", "return", " ", "result", "\n    ", "return", " ", "wrapper", "\n\n", "@print_info", "\n", "@print_more", "\n", "def", " ", "add_num", "(", "a", ",", " ", "b", "):", "\n    ", "return", " ", "a", " ", "+", " ", "b", "\n\n", "r", " ", "=", " ", "add_num", "(", "10", ",", " ", "20", ")", "\n", "print", "(", "r", ")", "\n", "start\nasdf\nresult 30\nend\n30\n", "@print_info", "\n", "@print_more", "\n", "def", " ", "add_num", "(", "a", ",", " ", "b", "):", "\n    ", "return", " ", "a", " ", "+", " ", "b", "\n\n", "r", " ", "=", " ", "add_num", "(", "10", ",", " ", "20", ")", "\n", "print", "(", "r", ")", "\n", "f", " ", "=", " ", "print_info", "(", "print_more", "(", "add_num", "))", "\n\n", "r", " ", "=", " ", "f", "(", "10", ",", " ", "20", ")", "\n\n\n", "print", "(", "r", ")", "\n"]},
{"title": ["CentOS6 RabbitMQ3.7 管理画面の有効化"], "body": ["\n", "\n", "環境", "\n\n", "OS：CentOS6.9 64bit", "\n\n", "\n", "参考URL", "\n\n", "https://qiita.com/ajitama/items/53ce21f3c8169496c563", "\n", "https://github.com/rabbitmq/rabbitmq-server/blob/master/docs/rabbitmq.conf.example", "\n\n", "\n", "事前準備", "\n\n", "CentOS6環境にRabbitMQ3.7をインストール", "\n\n", "\n", "rabbitmq_managementプラグインの有効化", "\n\n", "rabbitmq-plugins enable rabbitmq_management \n（rabbitmqが起動していないとエラーになる。）\n", "\n\n", "\n", "Web管理画面へログイン出来るユーザの追加", "\n\n", "管理画面へログインするためには、administrator権限が必要", "\n(guestは、デフォルトではローカル以外から接続出来いないため、ユーザ追加する必要がある。)", "\n\n", "## フォーマット\n# rabbitmqctl add_user <ユーザ名> <パスワード>\n# rabbitmqctl set_user_tags <ユーザ名> <権限>\nrabbitmqctl add_user mtomoaki 96kg\nrabbitmqctl set_user_tags mtomoaki administrator\n\n## 作成確認\nrabbitmqctl list_users\n---\nListing users ...\nmtomoaki        [administrator]\nguest           [administrator]\n---\n", "\n\n", "\n", "設定", "\n\n", "cd /etc/rabbitmq\nwget https://raw.githubusercontent.com/rabbitmq/rabbitmq-server/master/docs/rabbitmq.conf.example\ncp rabbitmq.conf.example rabbitmq.conf\n\nsed -i \"s/# listeners.tcp.default = 5672/listeners.tcp.default = 5672/\" rabbitmq.conf\nsed -i \"s/# management.listener.port = 15672/management.listener.port = 15672/\" rabbitmq.conf\n\n## 確認\ndiff rabbitmq.conf rabbitmq.conf.example\n16c16\n< listeners.tcp.default = 5672\n---\n> # listeners.tcp.default = 5672\n492c492\n< management.listener.port = 15672\n---\n> # management.listener.port = 15672\n", "\n\n", "\n", "rabbitmq再起動", "\n\n", "/etc/init.d/rabbitmq-server restart\n", "\n\n", "\n", "管理画面確認", "\n\n", "ブラウザでアクセス確認。IPアドレス部分は自分の環境に合わせて読み替えてください。", "\n\n", "http://＜IPアドレス＞:15672/", "\n"], "code": ["rabbitmq-plugins enable rabbitmq_management \n（rabbitmqが起動していないとエラーになる。）\n", "## フォーマット\n# rabbitmqctl add_user <ユーザ名> <パスワード>\n# rabbitmqctl set_user_tags <ユーザ名> <権限>\nrabbitmqctl add_user mtomoaki 96kg\nrabbitmqctl set_user_tags mtomoaki administrator\n\n## 作成確認\nrabbitmqctl list_users\n---\nListing users ...\nmtomoaki        [administrator]\nguest           [administrator]\n---\n", "cd /etc/rabbitmq\nwget https://raw.githubusercontent.com/rabbitmq/rabbitmq-server/master/docs/rabbitmq.conf.example\ncp rabbitmq.conf.example rabbitmq.conf\n\nsed -i \"s/# listeners.tcp.default = 5672/listeners.tcp.default = 5672/\" rabbitmq.conf\nsed -i \"s/# management.listener.port = 15672/management.listener.port = 15672/\" rabbitmq.conf\n\n## 確認\ndiff rabbitmq.conf rabbitmq.conf.example\n16c16\n< listeners.tcp.default = 5672\n---\n> # listeners.tcp.default = 5672\n492c492\n< management.listener.port = 15672\n---\n> # management.listener.port = 15672\n", "/etc/init.d/rabbitmq-server restart\n"]},
{"title": ["JavaScriptでクリーンアーキテクチャはどうすればいいのか(前編)"], "body": ["\n", "\n", "クリーンアーキテクチャとは", "\n\n", "\n", "まず以下の記事を推す。", "\n\n", "\n", "持続可能な開発を目指す ~ ドメイン・ユースケース駆動（クリーンアーキテクチャ） + 単方向に制限した処理 + FRP", "\n", "\n\n", "私なりの要点は次の通り", "\n* 内側から、DomainModel/Usecase/Interface Adapter/External Adapter", "\n* Interface Adapterが内と外を変換する単一方向のパイプのようなもの", "\n* 外から内への入力がController、内から外への出力がPresenter、入出力を分離する必要がない場合はGateway", "\n* Usecaseに業務手順を書き下す。業務手順の明示的なテストができるって凄い", "\n* Usecase中では、Contolerからの入力で、DB−Gatewayからデータを得て、Presenterに出力し反映など。パイプを繋ぎ直しているようなイメージ", "\n* 出力パイプであるPresenterは", "他のUsecaseの入力になったりはしない", "(ようにすべき)", "\n* 出力先が別れる時はUsecase中で分ける。パイプはステートレスだから完全に個別にテストできる。素晴らしい", "\n\n", "\n\n", "\n", "実装で理解したい場合", "\n\n", "\n", "クリーンアーキテクチャの右下の図", "\n", "\n\n", "\n", "インタフェースがうんたらは置いておいて、いかに単一方向のパイプであるかイメージできた", "\n", "生成する順番は、outportつまり外側から、interactor=Usecase、その次にcontroller。以下が秀逸", "\n", "\n\n", "static", " ", "void", " ", "Main", "(", "string", "[]", " ", "args", ")", "\n", "{", "\n    ", "var", " ", "outputPort", " ", "=", " ", "CreateOutputPort", "();", "\n    ", "var", " ", "interactor", " ", "=", " ", "CreateInputPort", "(", "outputPort", ");", "\n    ", "var", " ", "controller", " ", "=", " ", "new", " ", "Controller", "(", "interactor", ");", "\n    ", "controller", ".", "Execute", "(", "new", "[]", " ", "{", "\"source\"", ",", " ", "\"data\"", ",", " ", "\"foo\"", ",", " ", "\"bar\"", "});", "\n", "}", "\n", "\n\n", "\n", "JavaScriptだと、onloadというところでしょうか", "\n", "\n\n", "\n\n", "\n", "原典", "\n\n", "\n", "クリーンアーキテクチャ(The Clean Architecture翻訳)", "\n", "\n\n", "\n\n", "\n", "JavaScriptで実践", "\n\n", "\n", "勤務実績一覧", "\n\n", "\n", "人を選んだら過去勤務実績を年度/毎月(概要あり)のタブ区切りで表示する\n\n", "\n", "毎月、何時間働いたか、その内訳は何か", "\n", "\n", "\n", "選択ユースケース\n\n", "\n", "選択した所属部門に属する人だけが選択可能", "\n", "さらに勤務形態(社員/パート)で絞り込み可能", "\n", "勤務した個別月から絞り込み可能", "\n", "\n", "\n", "\n\n", "\n", "UIイメージ", "\n\n", "　", "\n\n", "\n\n", "\n", "早速困ったこと", "\n\n", "\n", "Usecaseの粒度\n\n", "\n", "ひとまず、class Usecaseで一つ", "\n", "Usecase#changeMonth(i, month)", "\n", "Usecase#changeDepartment(i, department)", "\n", "Usecase#changeLabortype(i, labortype)", "\n", "\n", "\n", "UIセレクトボックス中の選択状態は?どこに?\n\n", "\n", "usecase.filtercond = {month: ?, department: ?, labortype: ?}", "\n", "ひとまずUsecaseに?持たせる(いいの?)", "\n", "\n", "\n", "\n\n", "class", " ", "usecase", " ", "{", "\n  ", "changeMonth", "(", "i", ",", " ", "month", "){", "\n    ", "this", ".", "outport", "[", "\"departmentfilter\"", "].", "handle", "(", "this", ".", "repository", ".", "q", "(", "this", ".", "filtercond", "),", " ", "this", ")", "\n  ", "}", "\n", "// this.outport[\"departmentfilter\"]の実態は、Presenter", "\n", "class", " ", "Presenter", "\n  ", "constructor", "(", "id", "){", "\n    ", "this", ".", "node", " ", "=", " ", "document", ".", "getElementById", "(", "id", ")", "\n  ", "}", "\n  ", "handle", "(", "table", ",", " ", "usecase", "){", "\n    ", "//勤務実績repositotyから得られたtableを変換してUIに反映する", "\n    ", "//1. Table -> Arrayへ変換 -> domへの中間表現 vdomに変換", "\n    ", "const", " ", "vdom", " ", "=", " ", "this", ".", "toSelectBox", "(", "this", ".", "selectDepartment", "(", "table", "))", "\n    ", "//2. vdomの内容を、DOMに反映", "\n    ", "this", ".", "node", ".", "appendChild", "(", "toDom", "(", "vdom", ").", "addEventLister", "(", "\"change\"", ",", " ", "(", "evt", ")", "=>", "{", "\n     ", "const", " ", "i", " ", "=", " ", "this", ".", "selectedIndex", ";", "\n     ", "const", " ", "department", " ", "=", " ", "this", ".", "options", "[", "i", "].", "text", "\n     ", "usecase", ".", "changeDepartment", "(", "i", ",", " ", "department", ")", "\n    ", "}))", "\n  ", "}", "\n", "\n\n", "\n", "table->Arrayへの変換はPresenterの役割?Usecaseの役割?", "\n", "Array->vdomへの変換はPresenterの役割?Usecaseの役割?", "\n", "vdom->DOMへの反映時に\n\n", "\n", "個別月セレクトボックスの選択で、部門セレクトボックスが更新される", "\n", "さらに、部門セレクトボックスはonchangeのイベントハンドラを持つ必要がある", "\n", "Presenterにとってusecase変数は入力であるから、入力にないといけない?", "\n", "個別月を毎回選択する度に、appendChildするNodeListを消して付け加えるのは冗長では?", "\n", "optionsタグ分を入れ替えれば良いはず", "\n", "\n", "\n", "...", "\n", "続く", "\n", "\n"], "code": ["static", " ", "void", " ", "Main", "(", "string", "[]", " ", "args", ")", "\n", "{", "\n    ", "var", " ", "outputPort", " ", "=", " ", "CreateOutputPort", "();", "\n    ", "var", " ", "interactor", " ", "=", " ", "CreateInputPort", "(", "outputPort", ");", "\n    ", "var", " ", "controller", " ", "=", " ", "new", " ", "Controller", "(", "interactor", ");", "\n    ", "controller", ".", "Execute", "(", "new", "[]", " ", "{", "\"source\"", ",", " ", "\"data\"", ",", " ", "\"foo\"", ",", " ", "\"bar\"", "});", "\n", "}", "\n", "class", " ", "usecase", " ", "{", "\n  ", "changeMonth", "(", "i", ",", " ", "month", "){", "\n    ", "this", ".", "outport", "[", "\"departmentfilter\"", "].", "handle", "(", "this", ".", "repository", ".", "q", "(", "this", ".", "filtercond", "),", " ", "this", ")", "\n  ", "}", "\n", "// this.outport[\"departmentfilter\"]の実態は、Presenter", "\n", "class", " ", "Presenter", "\n  ", "constructor", "(", "id", "){", "\n    ", "this", ".", "node", " ", "=", " ", "document", ".", "getElementById", "(", "id", ")", "\n  ", "}", "\n  ", "handle", "(", "table", ",", " ", "usecase", "){", "\n    ", "//勤務実績repositotyから得られたtableを変換してUIに反映する", "\n    ", "//1. Table -> Arrayへ変換 -> domへの中間表現 vdomに変換", "\n    ", "const", " ", "vdom", " ", "=", " ", "this", ".", "toSelectBox", "(", "this", ".", "selectDepartment", "(", "table", "))", "\n    ", "//2. vdomの内容を、DOMに反映", "\n    ", "this", ".", "node", ".", "appendChild", "(", "toDom", "(", "vdom", ").", "addEventLister", "(", "\"change\"", ",", " ", "(", "evt", ")", "=>", "{", "\n     ", "const", " ", "i", " ", "=", " ", "this", ".", "selectedIndex", ";", "\n     ", "const", " ", "department", " ", "=", " ", "this", ".", "options", "[", "i", "].", "text", "\n     ", "usecase", ".", "changeDepartment", "(", "i", ",", " ", "department", ")", "\n    ", "}))", "\n  ", "}", "\n"]},
{"title": ["AWS勉強 -VPC作成&サブネットに分割-"], "body": ["\n", "\n", "VPC作成", "\n\n", "作成する前に,", "\nどんな記事でもいいのでIPアドレスの基本を抑えるとよい!", "\n\n", "IPアドレスについて", "\n\n", "\n", "VPCを開く", "\n\n", "\n\n", "\n", "リージョンを設定する", "\n\n", "\n\n", "\n", "VPC領域を作成する", "\n\n", "\n\n", "これで領域が作れた.", "\n\n", "\n", "サブネットに分割", "\n\n", "上記の作業で「10.0.0.0/16」というCIDRブロックを持った「VPC領域」というプライベートなネット空間ができた.", "\n\n", "\n", "サブネットの考え方", "\n\n", "実際のネットワークではこのCIDRブロックをさらに分割して利用することがほとんどだ.", "\nさらに分割したCIDRブロックのことを「サブネット(Subnet)」という.", "\n\n", "よく行われる分割方法は,", "\n\n", "\n", "「/24」の大きさで切って256分割する", "\n", "\n\n", "という方法がよく行われる.", "\n\n", "サブネットを分割してネットワークを分けたい主な理由として,", "\n\n", "\n", "物理的な隔離", "\n", "セキュリティ上の理由", "\n", "\n\n", "が挙げられる.", "\n\n", "\n", "物理的な隔離", "\n\n", "例えば社内LAN構築の際に1階と2階で別のサブネットに分けたとき,", "\nどちらかのサブネットが障害を起こした際にもう片方に影響が出にくくなる.", "\n\n", "\n", "セキュリティ上の理由", "\n\n", "サブネットを分けるとそれぞれに対して別々のネットワーク設定ができるため,", "\nある部署のネットワークだけ他部署からアクセスできないようにするといったことが可能になる.", "\n\n", "\n", "VPC領域をサブネットに分割する", "\n\n", "VPC領域を2つのサブネットに分割する.", "\n\n", "\n", "パブリックサブネット(10.0.1.0/24)", "\n→インターネットからアクセスすることを目的とする.", "\nWebサーバーを設置する予定", "\n", "プライベートサブネット(10.0.2.0/24)", "\n→インターネットから隔離したサブネット", "\nデータベースサーバーを設置する予定", "\n", "\n\n", "\n", "パブリックサブネットを作成する", "\n\n", "\n", "サブネットを作成", "\n\n", "\n\n", "\n", "サブネットの名称やIPアドレスを入力", "\n\n", "\n\n", "\n", "感想", "\n\n", "やってる感が出てきた笑", "\n会社のネットワーク構成も気になってくるな...", "\n"], "code": []},
{"title": ["UnityのiOSビルド時のplist設定の自動化"], "body": ["\n", "\n", "はじめに", "\n\n", "UnityもC#も知らないのにUnityプロジェクトのiOSビルドの設定の自動化やってと言われたときの備忘録。", "\n\n", "Unity iOS ビルド設定　とかでググればいっぱい出てきたので楽勝やん！と思ったのですがわりと苦労したので同じ境遇の方の助けになれば...", "\n\n", "\n", "やりたいこと", "\n\n", "\n", "iOSのビルド後にCapabilitiesのBackground ModesをONにする", "\n", "Background Modesにaudioとbluetoothを設定する", "\n", "plistのRequired device capabilitiesにbluetooth-leを設定する", "\n", "\n\n", "\n\n", "\n\n", "\n", "とりあえず試したこと(失敗)", "\n\n", "下記のファイルをUnityのプロジェクトのAssets/Editor配下に入れてビルドする。", "\nplistのキーとかは一度適当なXcodeプロジェクトで設定したものをコピペ。", "\n\n", "using", " ", "System.IO", ";", "\n", "using", " ", "UnityEngine", ";", "\n", "using", " ", "UnityEditor", ";", "\n", "using", " ", "UnityEditor.iOS.Xcode", ";", "\n", "using", " ", "UnityEditor.Callbacks", ";", "\n", "using", " ", "System.Collections", ";", "\n\n", "public", " ", "class", " ", "XcodeSettingsPostProcesser", "\n", "{", "\n    ", "[", "PostProcessBuildAttribute", " ", "(", "0", ")]", "\n    ", "public", " ", "static", " ", "void", " ", "OnPostprocessBuild", "(", "BuildTarget", " ", "buildTarget", ",", " ", "string", " ", "pathToBuiltProject", ")", "\n    ", "{", "\n        ", "if", " ", "(", "buildTarget", " ", "!=", " ", "BuildTarget", ".", "iOS", ")", " ", "return", ";", " \n\n        ", "var", " ", "projectPath", " ", "=", " ", "pathToBuiltProject", " ", "+", " ", "\"/Unity-iPhone.xcodeproj/project.pbxproj\"", ";", "\n\n        ", "SetCapability", "(", "projectPath", ");", " \n        ", "SetPlist", "(", "projectPath", ");", " \n    ", "}", "\n\n    ", "public", " ", "static", " ", "void", " ", "SetCapability", "(", "string", " ", "path", ")", " \n    ", "{", "\n        ", "var", " ", "proj", " ", "=", " ", "new", " ", "PBXProject", "();", "\n        ", "proj", ".", "ReadFromString", "(", "File", ".", "ReadAllText", "(", "path", "));", "\n\n        ", "string", " ", "targetName", " ", "=", " ", "\"Unity-iPhone\"", ";", "\n        ", "string", " ", "target", " ", "=", " ", "proj", ".", "TargetGuidByName", "(", "targetName", ");", "\n        ", "proj", ".", "AddCapability", "(", "target", ",", " ", "PBXCapabilityType", ".", "BackgroundModes", ");", "\n\n        ", "File", ".", "WriteAllText", "(", "projPath", ",", " ", "proj", ".", "WriteToString", "());", "\n    ", "}", "\n\n    ", "public", " ", "static", " ", "void", " ", "SetPlist", "(", "string", " ", "path", ")", " \n    ", "{", "\n        ", "var", " ", "plistPath", " ", "=", " ", "Path", ".", "Combine", " ", "(", "path", ",", " ", "\"Info.plist\"", ");", "\n        ", "var", " ", "plist", " ", "=", " ", "new", " ", "PlistDocument", " ", "();", "\n        ", "plist", ".", "ReadFromFile", " ", "(", "plistPath", ");", "\n\n        ", "var", " ", "capabilities", " ", "=", " ", "plist", ".", "root", ".", "CreateArray", "(", "\"Required device capabilities\"", ");", "\n        ", "capabilities", ".", "AddString", "(", "\"bluetooth-le\"", ");", "\n\n        ", "var", " ", "backgroundModes", " ", "=", " ", "plist", ".", "root", ".", "CreateArray", "(", "\"Required background modes\"", ");", "\n        ", "backgroundModes", ".", "AddString", "(", "\"App plays audio or streams audio/video using AirPlay\"", ");", "\n        ", "backgroundModes", ".", "AddString", "(", "\"App communicates using CoreBluetooth\"", ");", "      \n        ", "plist", ".", "WriteToFile", " ", "(", "plistPath", ");", "\n    ", "}", "\n", "}", "\n", "\n\n", "その結果がこれ", "\n\n", "\n\n", "\n\n", "できてるようで何もできていない。", "\nRequired device capabilitiesもRequired background modesも2つあるしCapabilitiesタブのBackground Modesには何もチェックがついていない。", "\n\n", "\n", "ちょっと工夫(失敗)", "\n\n", "2つできるのはplistのところでCreateArrayしてるからだと思う。", "ここ", "をみると普通にthis[string]でDictionaryみたいにアクセスできるっぽい。", "\n下記のように修正。", "\n\n", "    ", "public", " ", "static", " ", "void", " ", "SetPlist", "(", "string", " ", "path", ")", " \n    ", "{", "\n        ", "var", " ", "plistPath", " ", "=", " ", "Path", ".", "Combine", " ", "(", "path", ",", " ", "\"Info.plist\"", ");", "\n        ", "var", " ", "plist", " ", "=", " ", "new", " ", "PlistDocument", " ", "();", "\n        ", "plist", ".", "ReadFromFile", " ", "(", "plistPath", ");", "\n\n        ", "var", " ", "capabilities", " ", "=", " ", "plist", ".", "root", "[", "\"Required device capabilities\"", "].", "toArray", "();", "\n        ", "capabilities", ".", "AddString", "(", "\"bluetooth-le\"", ");", "\n\n        ", "var", " ", "backgroundModes", " ", "=", " ", "plist", ".", "root", "[", "\"Required background modes\"", "].", "toArray", "();", "\n        ", "backgroundModes", ".", "AddString", "(", "\"App plays audio or streams audio/video using AirPlay\"", ");", "\n        ", "backgroundModes", ".", "AddString", "(", "\"App communicates using CoreBluetooth\"", ");", "      \n        ", "plist", ".", "WriteToFile", " ", "(", "plistPath", ");", "\n    ", "}", "\n", "\n\n", "ビルドするとplistに何も追加されなかった...", "\n\n", "plistに値が追加された１個目のやつをあらためて確認。コピペしたけど綴りが違う？と思い検索をかけてみた。すると下記のようにRequired device capabilitiesが一件しか引っかからない！！", "\n\n", "\n\n", "とりあえず下記のようにInfo.plistを開いてみた。", "\n\n", "\n\n", "\n\n", "Required device capabilitiesとUIRequiredDeviceCapabilitiesがある？キーが違う！！", "\n\n", "\n", "修正", "\n\n", "キーと値を下記のように修正し、keyがある場合とない場合の処理のチェックも入れた。", "\n\n", "    ", "public", " ", "static", " ", "void", " ", "SetPlist", "(", "string", " ", "path", ")", " \n    ", "{", "\n        ", "var", " ", "plistPath", " ", "=", " ", "Path", ".", "Combine", " ", "(", "path", ",", " ", "\"Info.plist\"", ");", "\n        ", "var", " ", "plist", " ", "=", " ", "new", " ", "PlistDocument", " ", "();", "\n        ", "plist", ".", "ReadFromFile", " ", "(", "plistPath", ");", "\n\n        ", "PlistElementArray", " ", "capabilities", ";", "\n        ", "if", " ", "(", "plist", ".", "root", ".", "values", ".", "ContainsKey", "(", "\"UIRequiredDeviceCapabilities\"", "))", " ", "{", "\n            ", "capabilities", " ", "=", " ", "plist", ".", "root", "[", "\"UIRequiredDeviceCapabilities\"", "].", "toArray", "();", "\n        ", "}", " ", "else", " ", "{", "\n            ", "capabilities", " ", "=", " ", "plist", ".", "root", ".", "CreateArray", "(", "\"UIRequiredDeviceCapabilities\"", ");", "\n        ", "}", "\n        ", "capabilities", ".", "AddString", "(", "\"bluetooth-le\"", ");", "\n\n        ", "PlistElementArray", " ", "backgroundModes", ";", "\n        ", "if", " ", "(", "plist", ".", "root", ".", "values", ".", "ContainsKey", "(", "\"UIBackgroundModes\"", "))", " ", "{", "\n            ", "backgroundModes", " ", "=", " ", "plist", ".", "root", "[", "\"UIBackgroundModes\"", "].", "toArray", "();", "\n        ", "}", " ", "else", " ", "{", "\n            ", "backgroundModes", " ", "=", " ", "plist", ".", "root", ".", "CreateArray", "(", "\"UIBackgroundModes\"", ");", "\n        ", "}", "\n        ", "backgroundModes", ".", "AddString", "(", "\"audio\"", ");", "\n        ", "backgroundModes", ".", "AddString", "(", "\"bluetooth-central\"", ");", "     \n        ", "plist", ".", "WriteToFile", " ", "(", "plistPath", ");", "\n    ", "}", "\n", "\n\n", "できた！！", "\n\n", "下記に表示されているキーと実際のキーは違うっていうのは何となく知っていたけど今まで気にしたことがなかった。", "\nちなみに下記にRequired device capabilitiesと打つと勝手にUIRequiredDeviceCapabilitiesに変換してくれるらしい。", "\n\n", "\n\n", "よくみると参考サイトもCFBundleURLSchemesとか使ってた...", "\n\n", "\n", "さいごに", "\n\n", "とりあえずはできましたがもっとスマートなやり方があれば教えてください。", "\n\n", "Info.plistにそんな変換機能があるとは知らなかった新しいことをやるのは勉強になるな〜。", "\n\n", "\n", "参考", "\n\n", "UnityでXcodeの設定を自動化する方法まとめ", "\n\n", "Unity iOSビルド時にURLスキームを追加するだけのPostProcessBuild", "\n\n", "Unity5のPostProcessBuildでXcode Capabilityの設定する方法", "\n"], "code": ["using", " ", "System.IO", ";", "\n", "using", " ", "UnityEngine", ";", "\n", "using", " ", "UnityEditor", ";", "\n", "using", " ", "UnityEditor.iOS.Xcode", ";", "\n", "using", " ", "UnityEditor.Callbacks", ";", "\n", "using", " ", "System.Collections", ";", "\n\n", "public", " ", "class", " ", "XcodeSettingsPostProcesser", "\n", "{", "\n    ", "[", "PostProcessBuildAttribute", " ", "(", "0", ")]", "\n    ", "public", " ", "static", " ", "void", " ", "OnPostprocessBuild", "(", "BuildTarget", " ", "buildTarget", ",", " ", "string", " ", "pathToBuiltProject", ")", "\n    ", "{", "\n        ", "if", " ", "(", "buildTarget", " ", "!=", " ", "BuildTarget", ".", "iOS", ")", " ", "return", ";", " \n\n        ", "var", " ", "projectPath", " ", "=", " ", "pathToBuiltProject", " ", "+", " ", "\"/Unity-iPhone.xcodeproj/project.pbxproj\"", ";", "\n\n        ", "SetCapability", "(", "projectPath", ");", " \n        ", "SetPlist", "(", "projectPath", ");", " \n    ", "}", "\n\n    ", "public", " ", "static", " ", "void", " ", "SetCapability", "(", "string", " ", "path", ")", " \n    ", "{", "\n        ", "var", " ", "proj", " ", "=", " ", "new", " ", "PBXProject", "();", "\n        ", "proj", ".", "ReadFromString", "(", "File", ".", "ReadAllText", "(", "path", "));", "\n\n        ", "string", " ", "targetName", " ", "=", " ", "\"Unity-iPhone\"", ";", "\n        ", "string", " ", "target", " ", "=", " ", "proj", ".", "TargetGuidByName", "(", "targetName", ");", "\n        ", "proj", ".", "AddCapability", "(", "target", ",", " ", "PBXCapabilityType", ".", "BackgroundModes", ");", "\n\n        ", "File", ".", "WriteAllText", "(", "projPath", ",", " ", "proj", ".", "WriteToString", "());", "\n    ", "}", "\n\n    ", "public", " ", "static", " ", "void", " ", "SetPlist", "(", "string", " ", "path", ")", " \n    ", "{", "\n        ", "var", " ", "plistPath", " ", "=", " ", "Path", ".", "Combine", " ", "(", "path", ",", " ", "\"Info.plist\"", ");", "\n        ", "var", " ", "plist", " ", "=", " ", "new", " ", "PlistDocument", " ", "();", "\n        ", "plist", ".", "ReadFromFile", " ", "(", "plistPath", ");", "\n\n        ", "var", " ", "capabilities", " ", "=", " ", "plist", ".", "root", ".", "CreateArray", "(", "\"Required device capabilities\"", ");", "\n        ", "capabilities", ".", "AddString", "(", "\"bluetooth-le\"", ");", "\n\n        ", "var", " ", "backgroundModes", " ", "=", " ", "plist", ".", "root", ".", "CreateArray", "(", "\"Required background modes\"", ");", "\n        ", "backgroundModes", ".", "AddString", "(", "\"App plays audio or streams audio/video using AirPlay\"", ");", "\n        ", "backgroundModes", ".", "AddString", "(", "\"App communicates using CoreBluetooth\"", ");", "      \n        ", "plist", ".", "WriteToFile", " ", "(", "plistPath", ");", "\n    ", "}", "\n", "}", "\n", "    ", "public", " ", "static", " ", "void", " ", "SetPlist", "(", "string", " ", "path", ")", " \n    ", "{", "\n        ", "var", " ", "plistPath", " ", "=", " ", "Path", ".", "Combine", " ", "(", "path", ",", " ", "\"Info.plist\"", ");", "\n        ", "var", " ", "plist", " ", "=", " ", "new", " ", "PlistDocument", " ", "();", "\n        ", "plist", ".", "ReadFromFile", " ", "(", "plistPath", ");", "\n\n        ", "var", " ", "capabilities", " ", "=", " ", "plist", ".", "root", "[", "\"Required device capabilities\"", "].", "toArray", "();", "\n        ", "capabilities", ".", "AddString", "(", "\"bluetooth-le\"", ");", "\n\n        ", "var", " ", "backgroundModes", " ", "=", " ", "plist", ".", "root", "[", "\"Required background modes\"", "].", "toArray", "();", "\n        ", "backgroundModes", ".", "AddString", "(", "\"App plays audio or streams audio/video using AirPlay\"", ");", "\n        ", "backgroundModes", ".", "AddString", "(", "\"App communicates using CoreBluetooth\"", ");", "      \n        ", "plist", ".", "WriteToFile", " ", "(", "plistPath", ");", "\n    ", "}", "\n", "    ", "public", " ", "static", " ", "void", " ", "SetPlist", "(", "string", " ", "path", ")", " \n    ", "{", "\n        ", "var", " ", "plistPath", " ", "=", " ", "Path", ".", "Combine", " ", "(", "path", ",", " ", "\"Info.plist\"", ");", "\n        ", "var", " ", "plist", " ", "=", " ", "new", " ", "PlistDocument", " ", "();", "\n        ", "plist", ".", "ReadFromFile", " ", "(", "plistPath", ");", "\n\n        ", "PlistElementArray", " ", "capabilities", ";", "\n        ", "if", " ", "(", "plist", ".", "root", ".", "values", ".", "ContainsKey", "(", "\"UIRequiredDeviceCapabilities\"", "))", " ", "{", "\n            ", "capabilities", " ", "=", " ", "plist", ".", "root", "[", "\"UIRequiredDeviceCapabilities\"", "].", "toArray", "();", "\n        ", "}", " ", "else", " ", "{", "\n            ", "capabilities", " ", "=", " ", "plist", ".", "root", ".", "CreateArray", "(", "\"UIRequiredDeviceCapabilities\"", ");", "\n        ", "}", "\n        ", "capabilities", ".", "AddString", "(", "\"bluetooth-le\"", ");", "\n\n        ", "PlistElementArray", " ", "backgroundModes", ";", "\n        ", "if", " ", "(", "plist", ".", "root", ".", "values", ".", "ContainsKey", "(", "\"UIBackgroundModes\"", "))", " ", "{", "\n            ", "backgroundModes", " ", "=", " ", "plist", ".", "root", "[", "\"UIBackgroundModes\"", "].", "toArray", "();", "\n        ", "}", " ", "else", " ", "{", "\n            ", "backgroundModes", " ", "=", " ", "plist", ".", "root", ".", "CreateArray", "(", "\"UIBackgroundModes\"", ");", "\n        ", "}", "\n        ", "backgroundModes", ".", "AddString", "(", "\"audio\"", ");", "\n        ", "backgroundModes", ".", "AddString", "(", "\"bluetooth-central\"", ");", "     \n        ", "plist", ".", "WriteToFile", " ", "(", "plistPath", ");", "\n    ", "}", "\n"]},
{"title": ["Kibana Canvas(Technical Preview版)を触ってみた"], "body": ["Kibana Canvas", "とは、通常のKibanaよりもデータをグラフィカルに表示するためのプラグインです。", "\n※2018年9月時点ではテクニカルプレビュー版のみの公開です", "\n\n", "\n", "環境", "\n\n", "Kibana 6.4.0", "\n\n", "\n", "インストール方法", "\n\n", "公式ページ", "に記載されている手順に従ってインストールします。", "\n作業内容としてはKibanaのプラグインをインストールする時と同じです。", "\n参考：", "Kibanaのプラグインインストール手順", "\n\n", "NODE_OPTIONS", "=", "\"--max-old-space-size=4096\"", " ./bin/kibana-plugin ", "install", " ", "\\", "\nhttps://download.elastic.co/kibana/canvas/kibana-canvas-0.1.2198.zip\n", "\n\n", "インストールが完了すると「Canvas」という項目が追加されます。", "\n", "\n\n", "\n", "実際に作ってみる", "\n\n", "Create workpad", "から新しいWorkpadを作成します。", "\n右の枠からworkpadの名前やサイズ、背景色が設定できます。", "\n", "\n\n", "下の", "Page 1", "をクリックすると、ページ管理のメニューが開くので、ここからページを増やすことも出来ます。", "\n", "\n\n", "右上の", "Add element", "からElementを追加できます。", "\nちょうどDashboard上にVisualizeを追加するようなイメージです。", "\n\n", "\n", "Image Reveal", "\n\n", "KibanaのVisualizeでは実現出来なかったものが沢山並んでいるのですが、今回はImage Revealを追加してみます。", "\nこれはデータのパーセンテージを画像の表示度合いで表すものです。", "\n", "\n\n", "選択するとWorkpad上にElementが追加されました。", "\nElementのサイズや位置、角度を変えたり、右枠の", "Element style", "から", "Container Style", "を選択すると透過率や枠の設定が出来るようです。", "\n角度や透過率を変えるというのはDashboardでは実現できなかったので、これは表現の幅が広がりますね。", "\n", "\n\n", "\n", "元データの設定", "\n\n", "元となるデータはDataタブの", "Change your data source", "から設定できます。", "\n現在は以下の4つから選択できます。", "\n\n", "\n", "Demo Data", "\n", "Elasticsearch Raw Documents", "\n", "Timelion", "\n", "Elasticsearch SQL", "\n", "\n\n", "デフォルトではデモ用のデータが既に設定されていますので、元データが無くても試せるのはありがたいです。", "\n\n", "今回はElasticsearch Raw Documentsを選択して、Elasticsearchに登録済みのデータを元にしたいと思います。", "\n以下の簡易的なアクセスログのようなものを元データとして利用してみます。", "\n\n", "{", "\n    ", "\"date\"", ":", " ", "\"2018-07-01T00:00:00\"", ",", "\n    ", "\"response_time\"", ":", " ", "591", ",", "\n    ", "\"status_code\"", ":", " ", "200", ",", "\n    ", "\"url\"", ":", " ", "\"/test/huga/\"", "\n", "},", "\n", "{", "\n    ", "\"date\"", ":", " ", "\"2018-07-01T00:00:10\"", ",", "\n    ", "\"response_time\"", ":", " ", "632", ",", "\n    ", "\"status_code\"", ":", " ", "404", ",", "\n    ", "\"url\"", ":", " ", "\"/test/hoge/\"", "\n", "}", "\n", "\n\n", "以下の項目を設定し、Saveボタンを押すと反映されます。", "\n\n", "\n", "Index\n\n", "\n", "元となるインデックス名、もしくはIndex Patternを設定します。", "\n省略するとElasticsearchに登録されている全Indexが対象になります。", "\n", "\n", "\n", "Query\n\n", "\n", "対象となるドキュメントの絞り込み条件を設定します。", "\n現在はLucene queryでのみ指定できるようです。", "\n", "\n", "\n", "Sort Field、Sort Order\n\n", "\n", "ドキュメントのソート順と向きを設定します。", "\n", "\n", "\n", "Fields\n\n", "\n", "表示に利用するフィールド名を設定します。", "\n", "\n", "\n", "\n\n", "表示したい内容に合わせてIndexとFieldsぐらいは設定した方が良さそうです。", "\n", "\n\n", "\n", "Measureの設定", "\n\n", "元データを変更すると今まで設定されていたパーセンテージの計算が無効になってしまったので、エラー表示になってしまいました。", "\nエラーの原因を表示してくれるのはわかりやすくて良いですね。", "\nDisplayタブに戻って", "Measure", "から設定を変更します。", "\n", "\n\n", "ここで設定するValueは0 ~ 1の間に収める必要があるようです。", "\n数式と簡単な集計関数を利用してパーセンテージの計算を設定します。", "\n※", "Kibana Canvasで利用できる集計関数", "\n\n", "設定を変更すると、無事Elementが表示されました。", "\n今回は元データを絞り込まなかった際の件数がわかっているので分母に直接数字を指定していますが、リアルタイムに表示する場合は元データを少し工夫する必要がありそうです。", "\n", "\n\n", "\n", "画像の設定", "\n\n", "Reveal Image", "から画像に対する設定を行えます。", "\n使用する画像はアップロード、もしくはURL指定で変更できます。", "\nまた、表示の開始位置を上下左右から選択できます。", "\n\n", "\n", "おわりに", "\n\n", "既にあちこちのイベントでデモが行われていますが、これまでのKibanaでは表現できなかった方法でデータを可視化出来るので非常におもしろい、かつ便利そう！", "\nGAが待ち遠しいですね！", "\n"], "code": ["NODE_OPTIONS", "=", "\"--max-old-space-size=4096\"", " ./bin/kibana-plugin ", "install", " ", "\\", "\nhttps://download.elastic.co/kibana/canvas/kibana-canvas-0.1.2198.zip\n", "{", "\n    ", "\"date\"", ":", " ", "\"2018-07-01T00:00:00\"", ",", "\n    ", "\"response_time\"", ":", " ", "591", ",", "\n    ", "\"status_code\"", ":", " ", "200", ",", "\n    ", "\"url\"", ":", " ", "\"/test/huga/\"", "\n", "},", "\n", "{", "\n    ", "\"date\"", ":", " ", "\"2018-07-01T00:00:10\"", ",", "\n    ", "\"response_time\"", ":", " ", "632", ",", "\n    ", "\"status_code\"", ":", " ", "404", ",", "\n    ", "\"url\"", ":", " ", "\"/test/hoge/\"", "\n", "}", "\n"]},
{"title": ["グローバルなRangeプロパティへの参照を機械的に検知するアイディア"], "body": ["\n", "\n", "はじめに", "\n\n", "Excelのタイプライブラリでは、", "Range", "や", "Cells", "といったセルへの参照用のプロパティがグローバルで公開されています。", "\n\n", "これらを使うと簡単にセルにアクセス出来るため、初心者にとってはとっつきやすく、慣れてからでもちょっとした処理をしたい場合に便利です。", "\n\n", "しかし「ちょっとした処理」では済まない処理、例えば複数のシートにまたがった処理をする場合には、これらのグローバルなプロパティへの参照はバグの温床となります。", "\n\n", "この記事は、そのグローバルなプロパティを参照している場所を簡単に見つけるアイディアのメモです。", "\n\n", "\n", "サンプル：Range系プロパティ", "\n\n", "まずは具体的なサンプルを確認します。", "\n\n", "あらかじめチェックしたいプロジェクトでコンパイルを行っておき、コンパイルエラーが起きていないことを確認しておきます。", "\nその上で、以下のコードを標準モジュールに追加し、再度コンパイルを行います。", "\n\n", "この時エラーになる箇所がグローバルなプロパティ（以下のコードだと", "Cells", "・", "Columns", "・", "Range", "・", "Rows", "）を参照している場所となります。", "\n\n", "\n", "DisalbeGlobalRangeProperty.bas", "\n", "'標準モジュール", "\n", "Option", " ", "Explicit", "\n", "Option", " ", "Private", " ", "Module", "\n\n", "'Property override", "\n", "Public", " ", "Sub", " ", "Cells", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Columns", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Range", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Rows", "():", " ", "End", " ", "Sub", "\n", "\n", "\n\n", "コンパイルエラーの例", "\n", " ", "\n\n", "チェックが終わったら上記コードは消しておきます。", "\n\n", "\n", "やっていること", "\n\n", "上記のコードで行っていることは、グローバルなメンバーの上書き、となります。", "\n\n", "VBAでは対象を明示しない場合、以下の順に識別子の解決が行われます（経験則です）。", "\n\n", "\n", "プロシージャ内の識別子（変数・定数など）", "\n", "同じモジュール内の識別子（変数・定数・プロシージャ…）", "\n", "同じプロジェクト内の識別子（同上）", "\n", "他のライブラリのグローバルなメンバー（参照設定の上から順）", "\n", "\n\n", "Excel上のVBAの場合、", "Range", "は4の「他のライブラリ（Excel）のグローバルなメンバー」を示しています。", "\n\n", "ここで、標準モジュールに", "Public Sub Range(): End Sub", "のプロシージャを定義すると、「同じプロジェクト内の識別子」となり、Excelの", "Range", "より優先順位が高くなります。", "\nこの時Excel本来の", "Range", "と矛盾する定義にしておくと、コンパイルエラーとして検知される、ということになります。", "\n\n", "矛盾する定義にするときのポイントとして", "\n\n", "\n", "プロパティはSubプロシージャにする", "\n", "引数の数を変える", "\n", "返り値の内メソッドはProperty Getプロシージャにする", "\n", "\n\n", "などがあります。", "\n\n", "\n", "注意点", "\n\n", "この方法で検知できるのは、「グローバルに公開されているメンバー」かつ「対象を明示しない書き方をしている場合」となります。", "\n\n", "グローバルに公開されていないメンバーで問題になりそうな例としては、シートモジュール内の", "Range", "などが挙げられます。", "\nシートモジュール内で", "Range(\"A1\")", "とした場合、それは「2. 同じモジュール内の識別子」となり、そのシートのA1セルを示します。", "\n「3. 同じプロジェクト内の識別子（同上）」より優先順位が高いため上書きされません。", "\n\n", "「対象を明示した書き方」というのは、以下のように識別子の前にライブラリ名を付けた書き方です（処理自体に意味は無いです）。この場合も検知できません。", "\n\n", "Excel", ".", "Union", "(", "Excel", ".", "Range", "(", "\"A1\"", "),", " ", "Excel", ".", "Cells", ").", "Activate", "\n", "\n\n", "\n", "おまけ", "\n\n", "\n", "外部からExcelを使用する場合", "\n\n", "外部のVBAホストからExcelを操作する場合、Excelのグローバルなメンバー全てへの参照を避けたいです。", "\nその場合には、以下のコードで大体は潰せるはずです。", "\n\n", "Application", "など他のVBAホストでも定義されているものに関しては適宜コメントアウトしてください。", "\n\n", "\n", "DisableExcelGlobal.bas", "\n", "Option", " ", "Explicit", "\n", "Option", " ", "Private", " ", "Module", "\n\n", "'Method override", "\n", "Public", " ", "Sub", " ", "Calculate", "(", "a", "):", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "DDEExecute", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "DDEInitiate", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "DDEPoke", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "DDERequest", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "DDETerminate", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Evaluate", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ExecuteExcel4Macro", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Intersect", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Run", "(", "a", ",", " ", "b", ",", " ", "c", ",", " ", "d", ",", " ", "e", ",", " ", "f", ",", " ", "g", ",", " ", "h", ",", " ", "i", ",", " ", "j", ",", " ", "k", ",", " ", "l", ",", " ", "m", ",", " ", "n", ",", " ", "o", ",", " ", "p", ",", " ", "q", ",", " ", "r", ",", " ", "s", ",", " ", "t", ",", " ", "u", ",", " ", "v", ",", " ", "w", ",", " ", "x", ",", " ", "y", ",", " ", "z", "):", " ", "End", " ", "Sub", "\n", "'Public Sub SendKeys(): End Sub 'VBA has SendKeys method.", "\n", "Public", " ", "Sub", " ", "Union", "():", " ", "End", " ", "Sub", "\n\n", "'Property override", "\n", "Public", " ", "Sub", " ", "Application", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Creator", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Parent", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ActiveCell", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ActiveChart", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ActiveDialog", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ActiveMenuBar", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ActivePrinter", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ActiveSheet", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ActiveWindow", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ActiveWorkbook", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "AddIns", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Assistant", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Cells", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Charts", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Columns", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "CommandBars", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "DDEAppReturnCode", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "DialogSheets", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "MenuBars", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Modules", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Names", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Range", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Rows", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Selection", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Sheets", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ShortcutMenus", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ThisWorkbook", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Toolbars", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Windows", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Workbooks", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "WorksheetFunction", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Worksheets", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Excel4IntlMacroSheets", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Excel4MacroSheets", "():", " ", "End", " ", "Sub", "\n", "\n", "\n\n", "\n", "生成用スクリプト", "\n\n", "上記のコードは、.NET FrameworkのPIAの定義から生成しました。", "\n参考までに、生成に使用したスクリプト（PowerShell）も記載しておきます。", "\n\n", "\n", "GenerateBlankDefiniton", "\n", "Add-Type", " -AssemblyName Microsoft.Office.Interop.Excel\n", "[", "type", "]", "$global", " ", "=", " ", "[", "Microsoft.Office.Interop.Excel.GlobalClass]\n", "[", "Reflection.BindingFlags]", "$flag", " ", "=", " ", "[", "Reflection.BindingFlags]::Public -bor ", "[", "Reflection.BindingFlags]::Instance\n", "[", "Reflection.MemberInfo[]]", "$members", " ", "=", " ", "$global", ".GetMembers", "(", "$flag", ")", "\n\n", "[", "string", "[]]", "$procDefs", " ", "=", " ", "$members", " | \n    ? ", "{", " ", "# remove `ToString()` and others.", "\n        ", "$_", ".DeclaringType -eq ", "$global", " -and \n        ", "# remove `get_Application`...,`_Evaluate`,`.ctor`", "\n        ", "$_", ".Name -cnotmatch ", "'^[gs]et_|^[_.]'", "  \n    ", "}", " |\n    % ", "{", " ", "'Public Sub {0}():End Sub'", " -f ", "$_", ".Name ", "}", "\n\n", "# クリップボードにコピー", "\n", "Add-Type", " -AssemblyName PresentationFramework\n", "[", "Windows.ClipBoard]::SetText", "(", " ", "$procDefs", " -join ", "\"", "`r`n", "\"", " ", ")", "\n", "\n", "\n"], "code": ["'標準モジュール", "\n", "Option", " ", "Explicit", "\n", "Option", " ", "Private", " ", "Module", "\n\n", "'Property override", "\n", "Public", " ", "Sub", " ", "Cells", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Columns", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Range", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Rows", "():", " ", "End", " ", "Sub", "\n", "Excel", ".", "Union", "(", "Excel", ".", "Range", "(", "\"A1\"", "),", " ", "Excel", ".", "Cells", ").", "Activate", "\n", "Option", " ", "Explicit", "\n", "Option", " ", "Private", " ", "Module", "\n\n", "'Method override", "\n", "Public", " ", "Sub", " ", "Calculate", "(", "a", "):", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "DDEExecute", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "DDEInitiate", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "DDEPoke", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "DDERequest", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "DDETerminate", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Evaluate", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ExecuteExcel4Macro", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Intersect", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Run", "(", "a", ",", " ", "b", ",", " ", "c", ",", " ", "d", ",", " ", "e", ",", " ", "f", ",", " ", "g", ",", " ", "h", ",", " ", "i", ",", " ", "j", ",", " ", "k", ",", " ", "l", ",", " ", "m", ",", " ", "n", ",", " ", "o", ",", " ", "p", ",", " ", "q", ",", " ", "r", ",", " ", "s", ",", " ", "t", ",", " ", "u", ",", " ", "v", ",", " ", "w", ",", " ", "x", ",", " ", "y", ",", " ", "z", "):", " ", "End", " ", "Sub", "\n", "'Public Sub SendKeys(): End Sub 'VBA has SendKeys method.", "\n", "Public", " ", "Sub", " ", "Union", "():", " ", "End", " ", "Sub", "\n\n", "'Property override", "\n", "Public", " ", "Sub", " ", "Application", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Creator", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Parent", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ActiveCell", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ActiveChart", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ActiveDialog", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ActiveMenuBar", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ActivePrinter", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ActiveSheet", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ActiveWindow", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ActiveWorkbook", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "AddIns", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Assistant", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Cells", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Charts", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Columns", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "CommandBars", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "DDEAppReturnCode", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "DialogSheets", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "MenuBars", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Modules", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Names", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Range", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Rows", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Selection", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Sheets", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ShortcutMenus", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "ThisWorkbook", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Toolbars", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Windows", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Workbooks", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "WorksheetFunction", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Worksheets", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Excel4IntlMacroSheets", "():", " ", "End", " ", "Sub", "\n", "Public", " ", "Sub", " ", "Excel4MacroSheets", "():", " ", "End", " ", "Sub", "\n", "Add-Type", " -AssemblyName Microsoft.Office.Interop.Excel\n", "[", "type", "]", "$global", " ", "=", " ", "[", "Microsoft.Office.Interop.Excel.GlobalClass]\n", "[", "Reflection.BindingFlags]", "$flag", " ", "=", " ", "[", "Reflection.BindingFlags]::Public -bor ", "[", "Reflection.BindingFlags]::Instance\n", "[", "Reflection.MemberInfo[]]", "$members", " ", "=", " ", "$global", ".GetMembers", "(", "$flag", ")", "\n\n", "[", "string", "[]]", "$procDefs", " ", "=", " ", "$members", " | \n    ? ", "{", " ", "# remove `ToString()` and others.", "\n        ", "$_", ".DeclaringType -eq ", "$global", " -and \n        ", "# remove `get_Application`...,`_Evaluate`,`.ctor`", "\n        ", "$_", ".Name -cnotmatch ", "'^[gs]et_|^[_.]'", "  \n    ", "}", " |\n    % ", "{", " ", "'Public Sub {0}():End Sub'", " -f ", "$_", ".Name ", "}", "\n\n", "# クリップボードにコピー", "\n", "Add-Type", " -AssemblyName PresentationFramework\n", "[", "Windows.ClipBoard]::SetText", "(", " ", "$procDefs", " -join ", "\"", "`r`n", "\"", " ", ")", "\n"]},
{"title": ["gzipの出力には入力ファイル名が含まれている（空データを圧縮させて調べてみた）"], "body": ["こんにちは。", "\n", "gzip", " コマンドで空データ（ゼロサイズ）を圧縮させ、その出力内容を調べてみました。出力（出力ファイル）の内部には入力ファイル名（もしくは入力先名）が含まれていました。出力のサイズを確認してもその分が格納されていることが分かります。", "\n\n", "また ", "less", " コマンドで確認することで、その入力先名が表示されますが、空データを圧縮させたものに対しては、その旨の警告らしき文字化け(?)が表示されました。macOS で動かしています。", "\n\n", "$", " ", "echo", " ", "-n", " ", "\"\"", " | ", "gzip", " ", ">", " temp.txt.gz\n", "$", " ", "ls", " ", "-ld", " temp.txt.gz\n", "-rw-r--r--  1 foo  staff  20  9 19 23:38 temp.txt.gz\n", "$", " ", "echo", " ", "\"\"", " | ", "gzip", " ", ">", " temp.txt.gz\n", "$", " ", "ls", " ", "-ld", " temp.txt.gz\n", "-rw-r--r--  1 foo  staff  21  9 19 23:53 temp.txt.gz\n", "$", " ", "touch ", "temp.txt\n", "$", " ", "gzip", " ", "-c", " temp.txt ", ">", " temp.txt.gz\n", "$", " ", "ls", " ", "-ld", " temp.txt", "*", "\n", "-rw-r--r--  1 foo  staff   0  9 19 23:10 temp.txt\n-rw-r--r--  1 foo  staff  29  9 19 23:16 temp.txt.gz\n", "$", " less temp.txt.gz\n", "^_<8B>", "^H^H<F3>X<A2>[^@^Ctemp.txt^@^C^@^@^@^@^@^@^@^@^@\n", "temp.txt.gz (END)\n", "$", "\n", "\n"], "code": ["$", " ", "echo", " ", "-n", " ", "\"\"", " | ", "gzip", " ", ">", " temp.txt.gz\n", "$", " ", "ls", " ", "-ld", " temp.txt.gz\n", "-rw-r--r--  1 foo  staff  20  9 19 23:38 temp.txt.gz\n", "$", " ", "echo", " ", "\"\"", " | ", "gzip", " ", ">", " temp.txt.gz\n", "$", " ", "ls", " ", "-ld", " temp.txt.gz\n", "-rw-r--r--  1 foo  staff  21  9 19 23:53 temp.txt.gz\n", "$", " ", "touch ", "temp.txt\n", "$", " ", "gzip", " ", "-c", " temp.txt ", ">", " temp.txt.gz\n", "$", " ", "ls", " ", "-ld", " temp.txt", "*", "\n", "-rw-r--r--  1 foo  staff   0  9 19 23:10 temp.txt\n-rw-r--r--  1 foo  staff  29  9 19 23:16 temp.txt.gz\n", "$", " less temp.txt.gz\n", "^_<8B>", "^H^H<F3>X<A2>[^@^Ctemp.txt^@^C^@^@^@^@^@^@^@^@^@\n", "temp.txt.gz (END)\n", "$", "\n"]},
{"title": ["TECH PLAYで連載されている「パズルのアルゴリズム問題」を解いてみた"], "body": ["\n", "\n", "パズルのアルゴリズム問題 とは", "\n\n", "https://note.mu/masuipeo/n/n6449c981dfed", "\n\n", "増井敏克さんによる，TECH PLAY Magazineの連載です．", "\n毎月出題・解説は翌月とのこと．", "\n\n", "\n", "モチベーション", "\n\n", "自由に公開しても良いとの事なので，公開します．", "\n解説コードがRubyなので，C++14で書くことにします．", "\n\n", "\n", "解法", "\n\n", "以降は", "ネタバレ", "です．", "\n\n", "\n", "魔方陣", "\n\n", "問題文URL ", "https://techplay.jp/column/298", "\n\n", "#include \"bits/stdc++.h\"\n", "using", " ", "namespace", " ", "std", ";", "\n\n", "int", " ", "main", "()", " ", "{", "\n    ", "int", " ", "N", ";", "\n    ", "cin", " ", ">>", " ", "N", ";", "\n\n    ", "vector", "<", "int", ">", " ", "mat", "(", "9", ");", "\n\n    ", "for", " ", "(", "int", " ", "i", " ", "=", " ", "0", ";", " ", "i", " ", "<", " ", "9", ";", " ", "++", "i", ")", "\n        ", "mat", "[", "i", "]", " ", "=", " ", "N", " ", "+", " ", "i", ";", "\n\n    ", "do", " ", "{", "\n        ", "int", " ", "sum", " ", "=", " ", "mat", "[", "0", "]", " ", "+", " ", "mat", "[", "1", "]", " ", "+", " ", "mat", "[", "2", "];", "\n        ", "if", " ", "(", "sum", " ", "==", " ", "mat", "[", "3", "]", " ", "+", " ", "mat", "[", "4", "]", " ", "+", " ", "mat", "[", "5", "]", " ", "&&", "\n            ", "sum", " ", "==", " ", "mat", "[", "6", "]", " ", "+", " ", "mat", "[", "7", "]", " ", "+", " ", "mat", "[", "8", "]", " ", "&&", "\n            ", "sum", " ", "==", " ", "mat", "[", "0", "]", " ", "+", " ", "mat", "[", "3", "]", " ", "+", " ", "mat", "[", "6", "]", " ", "&&", "\n            ", "sum", " ", "==", " ", "mat", "[", "1", "]", " ", "+", " ", "mat", "[", "4", "]", " ", "+", " ", "mat", "[", "7", "]", " ", "&&", "\n            ", "sum", " ", "==", " ", "mat", "[", "2", "]", " ", "+", " ", "mat", "[", "5", "]", " ", "+", " ", "mat", "[", "8", "]", " ", "&&", "\n            ", "sum", " ", "==", " ", "mat", "[", "0", "]", " ", "+", " ", "mat", "[", "4", "]", " ", "+", " ", "mat", "[", "8", "]", " ", "&&", "\n            ", "sum", " ", "==", " ", "mat", "[", "2", "]", " ", "+", " ", "mat", "[", "4", "]", " ", "+", " ", "mat", "[", "6", "])", " ", "{", "\n            ", "printf", "(", "\"%2d%2d%2d", "\\n", "\"", ",", " ", "mat", "[", "0", "],", " ", "mat", "[", "1", "],", " ", "mat", "[", "2", "]);", "\n            ", "printf", "(", "\"%2d%2d%2d", "\\n", "\"", ",", " ", "mat", "[", "3", "],", " ", "mat", "[", "4", "],", " ", "mat", "[", "5", "]);", "\n            ", "printf", "(", "\"%2d%2d%2d", "\\n", "\"", ",", " ", "mat", "[", "6", "],", " ", "mat", "[", "7", "],", " ", "mat", "[", "8", "]);", "\n            ", "break", ";", "\n        ", "}", "\n    ", "}", " ", "while", " ", "(", "next_permutation", "(", "mat", ".", "begin", "(),", " ", "mat", ".", "end", "()));", "\n\n    ", "return", " ", "0", ";", "\n", "}", "\n", "\n\n", "マスに入れたい数字が既に決まっているので，", "next_permutation", "で全探索すればよいです．", "\n\n", "ループ回数は", "9!", "で，大体37万回なので十分高速です．", "\n\n", "\n", "階段でよく遊んだゲーム", "\n\n", "問題文URL ", "https://techplay.jp/column/328", "\n\n", "#include \"bits/stdc++.h\"\n", "using", " ", "namespace", " ", "std", ";", "\n\n", "map", "<", "array", "<", "int", ",", " ", "3", ">", ",", " ", "int", ">", " ", "memo", ";", " ", "// メモ化再帰", "\n\n", "// n: じゃんけんを行う回数", "\n", "// ma: aさんがゴールに到達するまでに必要な段数", "\n", "// mb: bさんがゴールに到達するまでに必要な段数", "\n", "// @return: Aさんが先にゴールに到達するようなそれぞれの出す手が何通りあるか", "\n", "int", " ", "solve", "(", "int", " ", "n", ",", " ", "int", " ", "ma", ",", " ", "int", " ", "mb", ")", " ", "{", "\n    ", "if", " ", "(", "ma", " ", "<=", " ", "0", ")", " ", "return", " ", "1", ";", " ", "// 既にゴールラインを超えているので勝ち", "\n    ", "if", " ", "(", "mb", " ", "<=", " ", "0", ")", " ", "return", " ", "0", ";", " ", "// 既にゴールラインを超えているので負け", "\n    ", "if", " ", "(", "n", " ", "<=", " ", "0", ")", " ", "return", " ", "0", ";", " ", "// じゃんけんしないので勝つことも無い", "\n\n    ", "// メモ化再帰(キャッシュ)", "\n    ", "array", "<", "int", ",", " ", "3", ">", " ", "key", " ", "=", " ", "{", " ", "n", ",", " ", "ma", ",", " ", "mb", " ", "};", "\n    ", "if", " ", "(", "memo", ".", "count", "(", "key", "))", " ", "return", " ", "memo", "[", "key", "];", "\n\n    ", "int", " ", "ans", " ", "=", " ", "0", ";", "\n\n    ", "ans", " ", "+=", " ", "solve", "(", "n", " ", "-", " ", "1", ",", " ", "ma", ",", " ", "mb", ")", "*", "3", ";", " ", "// あいこのパターンは3つ", "\n    ", "ans", " ", "+=", " ", "solve", "(", "n", " ", "-", " ", "1", ",", " ", "ma", " ", "-", " ", "1", ",", " ", "mb", ")", " ", "*", " ", "1", ";", " ", "// GでAが勝つパターンは1つ", "\n    ", "ans", " ", "+=", " ", "solve", "(", "n", " ", "-", " ", "1", ",", " ", "ma", " ", "-", " ", "2", ",", " ", "mb", ")", " ", "*", " ", "2", ";", " ", "// G以外でAが勝つパターンは2つ", "\n    ", "ans", " ", "+=", " ", "solve", "(", "n", " ", "-", " ", "1", ",", " ", "ma", ",", " ", "mb", " ", "-", " ", "1", ")", " ", "*", " ", "1", ";", " ", "// GでBが勝つパターンは1つ", "\n    ", "ans", " ", "+=", " ", "solve", "(", "n", " ", "-", " ", "1", ",", " ", "ma", ",", " ", "mb", " ", "-", " ", "2", ")", " ", "*", " ", "2", ";", " ", "// G以外でBが勝つパターンは2つ", "\n\n    ", "return", " ", "memo", "[", "key", "]", " ", "=", " ", "ans", ";", "\n", "}", "\n\n\n", "int", " ", "main", "()", " ", "{", "\n    ", "int", " ", "n", ",", " ", "m", ";", "\n\n    ", "cin", " ", ">>", " ", "m", " ", ">>", " ", "n", ";", "\n    ", "cout", " ", "<<", " ", "solve", "(", "n", ",", " ", "m", ",", " ", "m", ")", " ", "<<", " ", "endl", ";", "\n\n    ", "return", " ", "0", ";", "\n", "}", "\n", "\n\n", "元の問題を複数に部分問題に分割して解く問題です．", "\n連載の方とほぼ同じなので解説は省略．", "\n\n", "メモ化再帰については，「もっとプログラマ脳を鍛える数学パズル」にもかなり詳しく書かれています．", "\n\n", "\n", "山手線", "\n\n", "#include \"bits/stdc++.h\"\n", "\n", "using", " ", "namespace", " ", "std", ";", "\n\n\n", "// 駅の個数", "\n", "const", " ", "int", " ", "M", " ", "=", " ", "29", ";", "\n", "// 間隔", "\n", "const", " ", "int", " ", "D", "[]", " ", "=", " ", "{", "\n    ", "13", ",", "  ", "7", ",", " ", "10", ",", " ", "06", ",", " ", "11", ",", "\n    ", "11", ",", "  ", "5", ",", "  ", "8", ",", " ", "16", ",", " ", "07", ",", "\n    ", "11", ",", " ", "18", ",", " ", "12", ",", "  ", "9", ",", " ", "14", ",", "\n    ", "13", ",", "  ", "7", ",", " ", "15", ",", " ", "12", ",", " ", "16", ",", "\n    ", "15", ",", " ", "12", ",", "  ", "9", ",", " ", "20", ",", " ", "22", ",", "\n    ", "15", ",", " ", "12", ",", " ", "11", ",", "  ", "8", "\n", "};", "\n", "// 円周", "\n", "const", " ", "int", " ", "Dtotal", " ", "=", " ", "accumulate", "(", "D", ",", " ", "D", " ", "+", " ", "M", ",", " ", "0", ");", "\n\n", "// 人の数", "\n", "int", " ", "N", ";", "\n\n\n", "// base駅に必ず1人置いて，marginずつ間隔を開けて座れるか？", "\n", "bool", " ", "check", "(", "int", " ", "margin", ",", " ", "int", " ", "base", ")", " ", "{", "\n    ", "int", " ", "len", " ", "=", " ", "0", ";", "\n    ", "int", " ", "ptr", " ", "=", " ", "0", ";", "\n    ", "for", " ", "(", "int", " ", "i", " ", "=", " ", "1", ";", " ", "i", " ", "<", " ", "N", ";", " ", "++", "i", ")", " ", "{", "\n        ", "int", " ", "x", " ", "=", " ", "0", ";", "\n        ", "while", " ", "(", "x", " ", "<", " ", "margin", ")", " ", "{", "\n            ", "x", " ", "+=", " ", "D", "[(", "base", " ", "+", " ", "ptr", "++", ")", " ", "%", " ", "M", "];", "\n            ", "if", " ", "(", "ptr", " ", ">=", " ", "M", ")", " ", "return", " ", "false", ";", "\n        ", "}", "\n        ", "len", " ", "+=", " ", "x", ";", "\n    ", "}", "\n    ", "return", " ", "Dtotal", " ", "-", " ", "len", " ", ">=", " ", "margin", ";", "\n", "}", "\n\n", "// marginずつ間隔を開けて配置できるか", "\n", "bool", " ", "check", "(", "int", " ", "margin", ")", " ", "{", "\n    ", "for", " ", "(", "int", " ", "i", " ", "=", " ", "0", ";", " ", "i", " ", "<", " ", "M", ";", " ", "++", "i", ")", " ", "{", "\n        ", "if", " ", "(", "check", "(", "margin", ",", " ", "i", "))", " ", "return", " ", "true", ";", "\n    ", "}", "\n    ", "return", " ", "false", ";", "\n", "}", "\n\n\n", "int", " ", "main", "()", " ", "{", "\n    ", "cin", " ", ">>", " ", "N", ";", "\n\n    ", "// 二分探索", "\n    ", "int", " ", "tval", " ", "=", " ", "0", ",", " ", "fval", " ", "=", " ", "Dtotal", ";", "\n\n    ", "while", " ", "(", "fval", " ", "-", " ", "tval", " ", ">", " ", "1", ")", " ", "{", "\n        ", "int", " ", "v", " ", "=", " ", "(", "fval", " ", "+", " ", "tval", ")", " ", "/", " ", "2", ";", "\n        ", "if", " ", "(", "check", "(", "v", "))", "\n            ", "tval", " ", "=", " ", "v", ";", "\n        ", "else", "\n            ", "fval", " ", "=", " ", "v", ";", "\n    ", "}", "\n\n    ", "cout", " ", "<<", " ", "tval", " ", "<<", " ", "endl", ";", "\n\n    ", "return", " ", "0", ";", "\n", "}", "\n", "\n\n", "小数点以下1桁だったので，10倍して整数にしました．", "\n\n", "まず，関数", "bool check(int margin)", " を用意します．", "\n", "margin", "ずつ間隔を開けて配置できるかどうか判定する関数です．", "\n\n", "この関数を使って解（間隔の最小値が最大になるような配置の間隔の最小値）を探索すれば良いです．", "\n二分探索がオススメですが，各駅の間の距離の精度も高くないので，線形探索でも答えを計算できるはずです．", "\n"], "code": ["#include \"bits/stdc++.h\"\n", "using", " ", "namespace", " ", "std", ";", "\n\n", "int", " ", "main", "()", " ", "{", "\n    ", "int", " ", "N", ";", "\n    ", "cin", " ", ">>", " ", "N", ";", "\n\n    ", "vector", "<", "int", ">", " ", "mat", "(", "9", ");", "\n\n    ", "for", " ", "(", "int", " ", "i", " ", "=", " ", "0", ";", " ", "i", " ", "<", " ", "9", ";", " ", "++", "i", ")", "\n        ", "mat", "[", "i", "]", " ", "=", " ", "N", " ", "+", " ", "i", ";", "\n\n    ", "do", " ", "{", "\n        ", "int", " ", "sum", " ", "=", " ", "mat", "[", "0", "]", " ", "+", " ", "mat", "[", "1", "]", " ", "+", " ", "mat", "[", "2", "];", "\n        ", "if", " ", "(", "sum", " ", "==", " ", "mat", "[", "3", "]", " ", "+", " ", "mat", "[", "4", "]", " ", "+", " ", "mat", "[", "5", "]", " ", "&&", "\n            ", "sum", " ", "==", " ", "mat", "[", "6", "]", " ", "+", " ", "mat", "[", "7", "]", " ", "+", " ", "mat", "[", "8", "]", " ", "&&", "\n            ", "sum", " ", "==", " ", "mat", "[", "0", "]", " ", "+", " ", "mat", "[", "3", "]", " ", "+", " ", "mat", "[", "6", "]", " ", "&&", "\n            ", "sum", " ", "==", " ", "mat", "[", "1", "]", " ", "+", " ", "mat", "[", "4", "]", " ", "+", " ", "mat", "[", "7", "]", " ", "&&", "\n            ", "sum", " ", "==", " ", "mat", "[", "2", "]", " ", "+", " ", "mat", "[", "5", "]", " ", "+", " ", "mat", "[", "8", "]", " ", "&&", "\n            ", "sum", " ", "==", " ", "mat", "[", "0", "]", " ", "+", " ", "mat", "[", "4", "]", " ", "+", " ", "mat", "[", "8", "]", " ", "&&", "\n            ", "sum", " ", "==", " ", "mat", "[", "2", "]", " ", "+", " ", "mat", "[", "4", "]", " ", "+", " ", "mat", "[", "6", "])", " ", "{", "\n            ", "printf", "(", "\"%2d%2d%2d", "\\n", "\"", ",", " ", "mat", "[", "0", "],", " ", "mat", "[", "1", "],", " ", "mat", "[", "2", "]);", "\n            ", "printf", "(", "\"%2d%2d%2d", "\\n", "\"", ",", " ", "mat", "[", "3", "],", " ", "mat", "[", "4", "],", " ", "mat", "[", "5", "]);", "\n            ", "printf", "(", "\"%2d%2d%2d", "\\n", "\"", ",", " ", "mat", "[", "6", "],", " ", "mat", "[", "7", "],", " ", "mat", "[", "8", "]);", "\n            ", "break", ";", "\n        ", "}", "\n    ", "}", " ", "while", " ", "(", "next_permutation", "(", "mat", ".", "begin", "(),", " ", "mat", ".", "end", "()));", "\n\n    ", "return", " ", "0", ";", "\n", "}", "\n", "#include \"bits/stdc++.h\"\n", "using", " ", "namespace", " ", "std", ";", "\n\n", "map", "<", "array", "<", "int", ",", " ", "3", ">", ",", " ", "int", ">", " ", "memo", ";", " ", "// メモ化再帰", "\n\n", "// n: じゃんけんを行う回数", "\n", "// ma: aさんがゴールに到達するまでに必要な段数", "\n", "// mb: bさんがゴールに到達するまでに必要な段数", "\n", "// @return: Aさんが先にゴールに到達するようなそれぞれの出す手が何通りあるか", "\n", "int", " ", "solve", "(", "int", " ", "n", ",", " ", "int", " ", "ma", ",", " ", "int", " ", "mb", ")", " ", "{", "\n    ", "if", " ", "(", "ma", " ", "<=", " ", "0", ")", " ", "return", " ", "1", ";", " ", "// 既にゴールラインを超えているので勝ち", "\n    ", "if", " ", "(", "mb", " ", "<=", " ", "0", ")", " ", "return", " ", "0", ";", " ", "// 既にゴールラインを超えているので負け", "\n    ", "if", " ", "(", "n", " ", "<=", " ", "0", ")", " ", "return", " ", "0", ";", " ", "// じゃんけんしないので勝つことも無い", "\n\n    ", "// メモ化再帰(キャッシュ)", "\n    ", "array", "<", "int", ",", " ", "3", ">", " ", "key", " ", "=", " ", "{", " ", "n", ",", " ", "ma", ",", " ", "mb", " ", "};", "\n    ", "if", " ", "(", "memo", ".", "count", "(", "key", "))", " ", "return", " ", "memo", "[", "key", "];", "\n\n    ", "int", " ", "ans", " ", "=", " ", "0", ";", "\n\n    ", "ans", " ", "+=", " ", "solve", "(", "n", " ", "-", " ", "1", ",", " ", "ma", ",", " ", "mb", ")", "*", "3", ";", " ", "// あいこのパターンは3つ", "\n    ", "ans", " ", "+=", " ", "solve", "(", "n", " ", "-", " ", "1", ",", " ", "ma", " ", "-", " ", "1", ",", " ", "mb", ")", " ", "*", " ", "1", ";", " ", "// GでAが勝つパターンは1つ", "\n    ", "ans", " ", "+=", " ", "solve", "(", "n", " ", "-", " ", "1", ",", " ", "ma", " ", "-", " ", "2", ",", " ", "mb", ")", " ", "*", " ", "2", ";", " ", "// G以外でAが勝つパターンは2つ", "\n    ", "ans", " ", "+=", " ", "solve", "(", "n", " ", "-", " ", "1", ",", " ", "ma", ",", " ", "mb", " ", "-", " ", "1", ")", " ", "*", " ", "1", ";", " ", "// GでBが勝つパターンは1つ", "\n    ", "ans", " ", "+=", " ", "solve", "(", "n", " ", "-", " ", "1", ",", " ", "ma", ",", " ", "mb", " ", "-", " ", "2", ")", " ", "*", " ", "2", ";", " ", "// G以外でBが勝つパターンは2つ", "\n\n    ", "return", " ", "memo", "[", "key", "]", " ", "=", " ", "ans", ";", "\n", "}", "\n\n\n", "int", " ", "main", "()", " ", "{", "\n    ", "int", " ", "n", ",", " ", "m", ";", "\n\n    ", "cin", " ", ">>", " ", "m", " ", ">>", " ", "n", ";", "\n    ", "cout", " ", "<<", " ", "solve", "(", "n", ",", " ", "m", ",", " ", "m", ")", " ", "<<", " ", "endl", ";", "\n\n    ", "return", " ", "0", ";", "\n", "}", "\n", "#include \"bits/stdc++.h\"\n", "\n", "using", " ", "namespace", " ", "std", ";", "\n\n\n", "// 駅の個数", "\n", "const", " ", "int", " ", "M", " ", "=", " ", "29", ";", "\n", "// 間隔", "\n", "const", " ", "int", " ", "D", "[]", " ", "=", " ", "{", "\n    ", "13", ",", "  ", "7", ",", " ", "10", ",", " ", "06", ",", " ", "11", ",", "\n    ", "11", ",", "  ", "5", ",", "  ", "8", ",", " ", "16", ",", " ", "07", ",", "\n    ", "11", ",", " ", "18", ",", " ", "12", ",", "  ", "9", ",", " ", "14", ",", "\n    ", "13", ",", "  ", "7", ",", " ", "15", ",", " ", "12", ",", " ", "16", ",", "\n    ", "15", ",", " ", "12", ",", "  ", "9", ",", " ", "20", ",", " ", "22", ",", "\n    ", "15", ",", " ", "12", ",", " ", "11", ",", "  ", "8", "\n", "};", "\n", "// 円周", "\n", "const", " ", "int", " ", "Dtotal", " ", "=", " ", "accumulate", "(", "D", ",", " ", "D", " ", "+", " ", "M", ",", " ", "0", ");", "\n\n", "// 人の数", "\n", "int", " ", "N", ";", "\n\n\n", "// base駅に必ず1人置いて，marginずつ間隔を開けて座れるか？", "\n", "bool", " ", "check", "(", "int", " ", "margin", ",", " ", "int", " ", "base", ")", " ", "{", "\n    ", "int", " ", "len", " ", "=", " ", "0", ";", "\n    ", "int", " ", "ptr", " ", "=", " ", "0", ";", "\n    ", "for", " ", "(", "int", " ", "i", " ", "=", " ", "1", ";", " ", "i", " ", "<", " ", "N", ";", " ", "++", "i", ")", " ", "{", "\n        ", "int", " ", "x", " ", "=", " ", "0", ";", "\n        ", "while", " ", "(", "x", " ", "<", " ", "margin", ")", " ", "{", "\n            ", "x", " ", "+=", " ", "D", "[(", "base", " ", "+", " ", "ptr", "++", ")", " ", "%", " ", "M", "];", "\n            ", "if", " ", "(", "ptr", " ", ">=", " ", "M", ")", " ", "return", " ", "false", ";", "\n        ", "}", "\n        ", "len", " ", "+=", " ", "x", ";", "\n    ", "}", "\n    ", "return", " ", "Dtotal", " ", "-", " ", "len", " ", ">=", " ", "margin", ";", "\n", "}", "\n\n", "// marginずつ間隔を開けて配置できるか", "\n", "bool", " ", "check", "(", "int", " ", "margin", ")", " ", "{", "\n    ", "for", " ", "(", "int", " ", "i", " ", "=", " ", "0", ";", " ", "i", " ", "<", " ", "M", ";", " ", "++", "i", ")", " ", "{", "\n        ", "if", " ", "(", "check", "(", "margin", ",", " ", "i", "))", " ", "return", " ", "true", ";", "\n    ", "}", "\n    ", "return", " ", "false", ";", "\n", "}", "\n\n\n", "int", " ", "main", "()", " ", "{", "\n    ", "cin", " ", ">>", " ", "N", ";", "\n\n    ", "// 二分探索", "\n    ", "int", " ", "tval", " ", "=", " ", "0", ",", " ", "fval", " ", "=", " ", "Dtotal", ";", "\n\n    ", "while", " ", "(", "fval", " ", "-", " ", "tval", " ", ">", " ", "1", ")", " ", "{", "\n        ", "int", " ", "v", " ", "=", " ", "(", "fval", " ", "+", " ", "tval", ")", " ", "/", " ", "2", ";", "\n        ", "if", " ", "(", "check", "(", "v", "))", "\n            ", "tval", " ", "=", " ", "v", ";", "\n        ", "else", "\n            ", "fval", " ", "=", " ", "v", ";", "\n    ", "}", "\n\n    ", "cout", " ", "<<", " ", "tval", " ", "<<", " ", "endl", ";", "\n\n    ", "return", " ", "0", ";", "\n", "}", "\n"]},
{"title": ["カメラで動体検知、変化量をグラフ化する"], "body": ["前回", "の続き。", "\n前回セットアップした赤外線カメラで何かしようと思い、試しに自分の睡眠状態を監視/グラフ化させてみた。", "\n\n", "\n", "睡眠状態を監視/グラフ化する", "\n\n", "睡眠の監視/グラフ化として、とりあえず以下の2点を目標とした。", "\n\n", "\n", "カメラに自分が寝ている時の動作を検知させ、その変化量をデータベースに保存する", "\n", "データベースに蓄積された変化量をグラフ化することで、自分が寝ている時どれくらい動いているかを可視化する", "\n", "\n\n", "これらを実現するため、以下モジュールを使用した。", "\n\n", "\n", "motion", "\nカメラで動体検知した時の変化量/タイムスタンプを、MySQLのデータベースにINSERT実行させる", "\n", "MySQL", "\nmotionで取得した変化量/タイムスタンプを蓄積する", "\n", "lighttpd", "\nMySQLで蓄積された変化量/タイムスタンプを、Webページでグラフ表示させる\n", "\n", "\n", "\n\n", "\n", "MySQLの設定", "\n\n", "\n", "MySQLのインストール、初期設定(ルートユーザの設定)", "\n", "\n\n", "sudo apt-get install mysql-server\nmysql_secure_installation\n", "\n\n", "\n", "MySQLにログイン", "\n", "\n\n", "mysql -u root -p\n", "\n\n", "\n", "任意のデータベースを作成", "\n", "\n\n", "CREATE MOTION_DB;\nUSE MOTION_DB;\n", "\n\n", "\n", "motionが使用する、変化量/タイムスタンプを保存する任意のテーブルを作成", "\n", "\n\n", "CREATE TABLE sleep_check (camera int, event_time_stamp timestamp not null);\n", "\n\n", "\n", "morion/lighttpdがデータベースを参照するためのユーザアカウントを追加", "\n", "\n\n", "CREATE USER ‘your_sql_name'@'localhost' IDENTIFIED BY 'your_sql_password';\nGRANT ALL PRIVILEGES ON database_name.* TO 'your_sql_name'@'localhost';\n", "\n\n", "\n", "motionの設定", "\n\n", "motionからMySQLへデータ送信するため、/etc/motion/motion.confの一部を以下のように設定。", "\n\n", "\n", "/etc/motion/motion.conf", "\n", "# MySQLへのログイン設定\n", "database_type", " ", "mysql", "\n", "database_dbname", " ", "motion_db", " ", "#使用するデータベース名\n", "database_host", " ", "localhost", "\n", "database_user", " ", "your_sql_name", " ", "# MySQLで作成したユーザアカウント名\n", "database_password", " ", "your_sql_password", " ", "# MySQLで作成したユーザアカウントのパスワード\n", "database_busy_timeout", " ", "10", "\n\n", "# MySQLへ変化量/タイムスタンプ登録処理を行うINSERT命令\n# sql_query insert into テーブル名 (MySQLのテーブル登録で定義したデータ群) values(motionからMySQLへ送るデータ)\n", "sql_query", " ", "insert", " ", "into", " ", "sleep_check", "(", "changed_pixels", ", ", "time_stamp", ") ", "values", "(", "'%D'", ", ", "'%Y-%m-%d %T'", ")\n", "\n", "\n\n", "motionからSQLへ送信可能なデータの一覧は", "こちら", "。", "\n今回は変化量(ピクセル値)とタイムスタンプのみ送信させる。", "\n\n", "\n", "lighttpdの設定", "\n\n", "グラフの描写、lighttpdにおけるWebページへの表示については、こちらのサイト", "\"センサの記録をグラフ化 \"", "を参考にさせて頂きました(というかほぼ丸パクリ)。", "\n\n", "以下の順序でグラフ表示を行う。", "\n1. グラフ描写を行うhtmlファイルのテンプレートを用意", "\n2. データベースから変化量/タイムスタンプの一覧を取得し、1のテンプレートファイルにグラフデータとして書き込むPythonプログラムを用意", "\n3. lighttpdに2のPythonプログラムをCGIとして登録、Webページにグラフを表示させる", "\n\n", "\n", "PythonからMySQLを操作、htmlテンプレートを描写するためのパッケージ", "\n\n", "sudo apt-get install python-pip\nsudo pip install MySQL-python\nsudo pip install jinja2\n", "\n\n", "\n", "データベースからグラフを描写するhtmlファイルの自動作成", "\n\n", "グラフ描写のために、以下の2ファイルを用意する。", "\n\n", "\n", "Google Chart APIにより、変化量/タイムスタンプのグラフを描写するhtmlファイルのテンプレート", "\n", "\n\n", "\n", "/var/www/template.html", "\n", "<html>", "\n  ", "<head>", "\n    ", "<title>", "Motion Check", "</title>", "\n    ", "<meta", " ", "http-equiv=", "\"content-type\"", " ", "content=", "\"text/html; charset=utf-8\"", " ", "/>", "\n    ", "<script ", "type=", "\"text/javascript\"", " ", "src=", "\"https://www.google.com/jsapi\"", "></script>", "\n    ", "<script ", "type=", "\"text/javascript\"", ">", "\n      ", "google", ".", "load", "(", "\"visualization\"", ",", " ", "\"1\"", ",", " ", "{", "packages", ":[", "\"corechart\"", "]});", "\n      ", "google", ".", "setOnLoadCallback", "(", "drawChart", ");", "\n      ", "function", " ", "drawChart", "()", " ", "{", "\n      ", "var", " ", "data", " ", "=", " ", "google", ".", "visualization", ".", "arrayToDataTable", "([", "\n      ", "[", "'Date'", ",", " ", "'Pixel'", "],", "\n      ", "{", "%", " ", "for", " ", "record", " ", "in", " ", "pixel_list", " ", "%", "}", "\n      ", "[", "'{{record.date}}'", ",", "  ", "{{", "record", ".", "pixel", "}}],", "\n      ", "{", "%", " ", "endfor", " ", "%", "}", "\n      ", "]);", "\n      ", "// グラフのオプションを設定", "\n      ", "var", " ", "options", " ", "=", " ", "{", "\n      ", "title", ":", " ", "'{{title}}'", "\n      ", "};", "\n      ", "var", " ", "chart", " ", "=", " ", "new", " ", "google", ".", "visualization", ".", "LineChart", "(", "document", ".", "getElementById", "(", "'chart_div'", "));", "\n      ", "chart", ".", "draw", "(", "data", ",", " ", "options", ");", "\n      ", "}", "\n    ", "</script>", "\n  ", "</head>", "\n  ", "<body>", "\n\n    ", "<div", " ", "id=", "\"chart_div\"", " ", "style=", "\"width: 80%; height: 400px;\"", "></div>", "\n\n  ", "</body>", "\n", "</html>", "\n", "\n", "\n\n", "\n", "データベースから変化量/タイムスタンプ値を取得、テンプレートに書き込むPythonプログラム", "\n", "\n\n", "\n", "/var/www/get_pixel.py", "\n", "#!/usr/bin/python", "\n", "# -*- coding: utf-8 -*-", "\n\n", "from", " ", "jinja2", " ", "import", " ", "Environment", ",", " ", "FileSystemLoader", "\n", "import", " ", "MySQLdb", "\n", "import", " ", "datetime", "\n\n", "MAX_PIXEL", " ", "=", " ", "30000", "\n\n", "def", " ", "pixel_chart", "(", "environ", ",", " ", "start_response", "):", "\n    ", "env", " ", "=", " ", "Environment", "(", "loader", "=", "FileSystemLoader", "(", "'./'", ",", " ", "encoding", "=", "'utf8'", "))", "\n    ", "tpl", " ", "=", " ", "env", ".", "get_template", "(", "'template.html'", ")", "\n\n    ", "title", " ", "=", " ", "u\"Pixel Chart\"", "\n\n    ", "pixel_list", " ", "=", " ", "[]", "\n\n    ", "connector", " ", "=", " ", "MySQLdb", ".", "connect", "(", "host", "=", "\"localhost\"", ",", " ", "db", "=", "\"motion_db\"", ",", " ", "user", "=", "\"your_sql_name\"", ",", " ", "passwd", "=", "\"your_sql_passwd\"", ",", " ", "charset", "=", "\"utf8\"", ")", "    \n    ", "cursor", " ", "=", " ", "connector", ".", "cursor", "()", "\n    ", "sql", " ", "=", " ", "\"select changed_pixels,time_stamp from sleep_check\"", "\n\n    ", "cursor", ".", "execute", "(", "sql", ")", "\n    ", "records", " ", "=", " ", "cursor", ".", "fetchall", "()", "\n\n    ", "#テンプレートへ挿入するグラフデータの作成", "\n    ", "# 3000pixel以上は睡眠中ではなく、活動中の動きとして省く", "\n    ", "for", " ", "record", " ", "in", " ", "records", ":", "\n        ", "if", " ", "record", "[", "0", "]", " ", "<", " ", "MAX_PIXEL", ":", "\n            ", "pixel_list", ".", "append", "({", "'date'", ":", "record", "[", "1", "]", ".", "strftime", "(", "\"", "%", "H:", "%", "M:", "%", "S\"", "),", " ", "'pixel'", ":", "record", "[", "0", "]})", "\n         ", "else", ":", "\n            ", "pixel_list", ".", "append", "({", "'date'", ":", "record", "[", "1", "]", ".", "strftime", "(", "\"", "%", "H:", "%", "M:", "%", "S\"", "),", " ", "'pixel'", ":", "MAX_PIXEL", "})", "\n\n    ", "cursor", ".", "close", "()", "\n    ", "connector", ".", "close", "()", "\n\n    ", "#テンプレートへ挿入するデータの作成", "\n    ", "title", " ", "=", " ", "u\"Pixel Chart\"", "\n\n    ", "#テンプレートへの挿入", "\n    ", "html", " ", "=", " ", "tpl", ".", "render", "({", "'title'", ":", "title", ",", " ", "'pixel_list'", ":", "pixel_list", "})", "\n\n    ", "start_response", "(", "'200 OK'", ",", " ", "[(", "'Content-Type'", ",", " ", "'text/html'", ")])", "\n    ", "return", " ", "[", "html", ".", "encode", "(", "'utf-8'", ")]", "\n\n", "if", " ", "__name__", " ", "==", " ", "'__main__'", ":", "\n    ", "from", " ", "flup.server.fcgi", " ", "import", " ", "WSGIServer", "\n", "WSGIServer", "(", "pixel_chart", ")", ".", "run", "()", "\n", "\n", "\n\n", "\n", "lighttpdの設定", "\n\n", "\n", "lighttpdのインストール", "\n", "\n\n", "sudo apt-get install lighttpd\nsudo apt-get --no-install-recommends install python-flup\n", "\n\n", "\n", "pythonプログラムをcgiとして登録しておく。", "\n", "\n\n", "\n", "/etc/lighttpd/lighttpd.conf", "\n", "server", ".", "modules", " = (\n    ", "\"mod_access\"", ",\n    ", "\"mod_alias\"", ",\n    ", "\"mod_compress\"", ",\n    ", "\"mod_redirect\"", ",\n    ", "\"mod_fastcgi\"", ",\n)\n\n", "server", ".", "document", "-", "root", "        = ", "\"/var/www\"", "\n", "server", ".", "upload", "-", "dirs", "          = ( ", "\"/var/cache/lighttpd/uploads\"", " )\n", "server", ".", "errorlog", "             = ", "\"/var/log/lighttpd/error.log\"", "\n", "server", ".", "pid", "-", "file", "             = ", "\"/var/run/lighttpd.pid\"", "\n", "server", ".", "username", "             = ", "\"www-data\"", "\n", "server", ".", "groupname", "            = ", "\"www-data\"", "\n", "server", ".", "port", "                 = ", "80", "\n\n", "index", "-", "file", ".", "names", "            = ( ", "\"index.php\"", ", ", "\"index.html\"", ", ", "\"index.lighttpd.html\"", " )\n", "url", ".", "access", "-", "deny", "             = ( ", "\"~\"", ", ", "\".inc\"", " )\n", "static", "-", "file", ".", "exclude", "-", "extensions", " = ( ", "\".php\"", ", ", "\".pl\"", ", ", "\".fcgi\"", " )\n\n", "compress", ".", "cache", "-", "dir", "          = ", "\"/var/cache/lighttpd/compress/\"", "\n", "compress", ".", "filetype", "           = ( ", "\"application/javascript\"", ", ", "\"text/css\"", ", ", "\"text/html\"", ", ", "\"text/plain\"", " )\n\n", "# default listening port for IPv6 falls back to the IPv4 port\n", "include_shell", " ", "\"/usr/share/lighttpd/use-ipv6.pl \"", " + ", "server", ".", "port", "\n", "include_shell", " ", "\"/usr/share/lighttpd/create-mime.assign.pl\"", "\n", "include_shell", " ", "\"/usr/share/lighttpd/include-conf-enabled.pl\"", "\n\n", "fastcgi", ".", "server", " = (\n    ", "\"get_pixel.py\"", " => (\n    ", "\"python-fcgi\"", " => (\n    ", "\"socket\"", " => ", "\"/tmp/get_pixel.python.socket\"", ",\n    ", "\"bin-path\"", " => ", "\"/var/www/get_pixel.py\"", ",\n    ", "\"check-local\"", " => ", "\"disable\"", ",\n    ", "\"max-procs\"", " => ", "1", "\n            )\n        )\n)\n", "\n", "\n\n", "\n", "サービスの開始/利用", "\n\n", "\n", "サービス開始シェルスクリプト", "\n測定の度にmotionが溜めた録画データとMySQLのDBを手動クリアするのが面倒だったため、サービス再起動スクリプトとして作成。", "\nmotion実行に\"service motion start\"を使った場合、/var/log/motion.logの作成に失敗して動作しなかったため、現時点は直接実行にしている。", "\n", "\n\n", "#!/bin/sh", "\n\n", "# Stop Daemons", "\nservice motion stop\nservice lighttpd stop\n\n", "# Clear DB and record files", "\n", "rm", " ", "-f", " /var/lib/motion/", "*", ".jpg\nmysql ", "-u", " MySQLユーザ名 ", "-pMySQL", "パスワード データベース名 ", "-e", " ", "\"truncate table テーブル名;\"", "\n\n", "# Restart Daemons", "\nmotion ", "-b", "\nservice lighttpd start\n", "\n\n", "\n", "Pythonプログラムの実行権限付加\nグラフ描写は外部からPythonプログラムを叩いて行うため、chmod等により外部からの実行権限を与えておく。", "\n", "\n\n", "chmod a+x /var/www/get_pixel.py\n", "\n\n", "\n", "グラフページへのアクセス\n", "http://Raspberry PiのIPアドレス/get_pixel.py", "にアクセスすることで、グラフが表示される。", "\n", "\n\n", "\n", "動作結果", "\n\n", "試しに一晩監視(1:04 - 8:39の間)させてみた結果、以下のグラフを得られた。", "\n3000ピクセル以上の箇所は起き上がっている状態として省き、それ以下を眠っている状態として残した。", "\n", "\n\n", "結果として、所々1000pixel越えの動きがあるため、安眠とは言い切れなさそう。", "\nとはいえ、該当箇所でどんな動きをしているか分からないので、これだけでは改善の方針も立てられない。", "\n次の目標として、あるpixel値以上の動きを検知したら録画するように、motionで設定 or motion自身に手を加えてみる予定。", "\n\n", "\n", "参考", "\n\n", "\n", "motion.confにおける設定値一覧", "\n", "motion.confのsql_query設定値一覧", "\n", "センサの記録をグラフ化", "\n", "\n"], "code": ["sudo apt-get install mysql-server\nmysql_secure_installation\n", "mysql -u root -p\n", "CREATE MOTION_DB;\nUSE MOTION_DB;\n", "CREATE TABLE sleep_check (camera int, event_time_stamp timestamp not null);\n", "CREATE USER ‘your_sql_name'@'localhost' IDENTIFIED BY 'your_sql_password';\nGRANT ALL PRIVILEGES ON database_name.* TO 'your_sql_name'@'localhost';\n", "# MySQLへのログイン設定\n", "database_type", " ", "mysql", "\n", "database_dbname", " ", "motion_db", " ", "#使用するデータベース名\n", "database_host", " ", "localhost", "\n", "database_user", " ", "your_sql_name", " ", "# MySQLで作成したユーザアカウント名\n", "database_password", " ", "your_sql_password", " ", "# MySQLで作成したユーザアカウントのパスワード\n", "database_busy_timeout", " ", "10", "\n\n", "# MySQLへ変化量/タイムスタンプ登録処理を行うINSERT命令\n# sql_query insert into テーブル名 (MySQLのテーブル登録で定義したデータ群) values(motionからMySQLへ送るデータ)\n", "sql_query", " ", "insert", " ", "into", " ", "sleep_check", "(", "changed_pixels", ", ", "time_stamp", ") ", "values", "(", "'%D'", ", ", "'%Y-%m-%d %T'", ")\n", "sudo apt-get install python-pip\nsudo pip install MySQL-python\nsudo pip install jinja2\n", "<html>", "\n  ", "<head>", "\n    ", "<title>", "Motion Check", "</title>", "\n    ", "<meta", " ", "http-equiv=", "\"content-type\"", " ", "content=", "\"text/html; charset=utf-8\"", " ", "/>", "\n    ", "<script ", "type=", "\"text/javascript\"", " ", "src=", "\"https://www.google.com/jsapi\"", "></script>", "\n    ", "<script ", "type=", "\"text/javascript\"", ">", "\n      ", "google", ".", "load", "(", "\"visualization\"", ",", " ", "\"1\"", ",", " ", "{", "packages", ":[", "\"corechart\"", "]});", "\n      ", "google", ".", "setOnLoadCallback", "(", "drawChart", ");", "\n      ", "function", " ", "drawChart", "()", " ", "{", "\n      ", "var", " ", "data", " ", "=", " ", "google", ".", "visualization", ".", "arrayToDataTable", "([", "\n      ", "[", "'Date'", ",", " ", "'Pixel'", "],", "\n      ", "{", "%", " ", "for", " ", "record", " ", "in", " ", "pixel_list", " ", "%", "}", "\n      ", "[", "'{{record.date}}'", ",", "  ", "{{", "record", ".", "pixel", "}}],", "\n      ", "{", "%", " ", "endfor", " ", "%", "}", "\n      ", "]);", "\n      ", "// グラフのオプションを設定", "\n      ", "var", " ", "options", " ", "=", " ", "{", "\n      ", "title", ":", " ", "'{{title}}'", "\n      ", "};", "\n      ", "var", " ", "chart", " ", "=", " ", "new", " ", "google", ".", "visualization", ".", "LineChart", "(", "document", ".", "getElementById", "(", "'chart_div'", "));", "\n      ", "chart", ".", "draw", "(", "data", ",", " ", "options", ");", "\n      ", "}", "\n    ", "</script>", "\n  ", "</head>", "\n  ", "<body>", "\n\n    ", "<div", " ", "id=", "\"chart_div\"", " ", "style=", "\"width: 80%; height: 400px;\"", "></div>", "\n\n  ", "</body>", "\n", "</html>", "\n", "#!/usr/bin/python", "\n", "# -*- coding: utf-8 -*-", "\n\n", "from", " ", "jinja2", " ", "import", " ", "Environment", ",", " ", "FileSystemLoader", "\n", "import", " ", "MySQLdb", "\n", "import", " ", "datetime", "\n\n", "MAX_PIXEL", " ", "=", " ", "30000", "\n\n", "def", " ", "pixel_chart", "(", "environ", ",", " ", "start_response", "):", "\n    ", "env", " ", "=", " ", "Environment", "(", "loader", "=", "FileSystemLoader", "(", "'./'", ",", " ", "encoding", "=", "'utf8'", "))", "\n    ", "tpl", " ", "=", " ", "env", ".", "get_template", "(", "'template.html'", ")", "\n\n    ", "title", " ", "=", " ", "u\"Pixel Chart\"", "\n\n    ", "pixel_list", " ", "=", " ", "[]", "\n\n    ", "connector", " ", "=", " ", "MySQLdb", ".", "connect", "(", "host", "=", "\"localhost\"", ",", " ", "db", "=", "\"motion_db\"", ",", " ", "user", "=", "\"your_sql_name\"", ",", " ", "passwd", "=", "\"your_sql_passwd\"", ",", " ", "charset", "=", "\"utf8\"", ")", "    \n    ", "cursor", " ", "=", " ", "connector", ".", "cursor", "()", "\n    ", "sql", " ", "=", " ", "\"select changed_pixels,time_stamp from sleep_check\"", "\n\n    ", "cursor", ".", "execute", "(", "sql", ")", "\n    ", "records", " ", "=", " ", "cursor", ".", "fetchall", "()", "\n\n    ", "#テンプレートへ挿入するグラフデータの作成", "\n    ", "# 3000pixel以上は睡眠中ではなく、活動中の動きとして省く", "\n    ", "for", " ", "record", " ", "in", " ", "records", ":", "\n        ", "if", " ", "record", "[", "0", "]", " ", "<", " ", "MAX_PIXEL", ":", "\n            ", "pixel_list", ".", "append", "({", "'date'", ":", "record", "[", "1", "]", ".", "strftime", "(", "\"", "%", "H:", "%", "M:", "%", "S\"", "),", " ", "'pixel'", ":", "record", "[", "0", "]})", "\n         ", "else", ":", "\n            ", "pixel_list", ".", "append", "({", "'date'", ":", "record", "[", "1", "]", ".", "strftime", "(", "\"", "%", "H:", "%", "M:", "%", "S\"", "),", " ", "'pixel'", ":", "MAX_PIXEL", "})", "\n\n    ", "cursor", ".", "close", "()", "\n    ", "connector", ".", "close", "()", "\n\n    ", "#テンプレートへ挿入するデータの作成", "\n    ", "title", " ", "=", " ", "u\"Pixel Chart\"", "\n\n    ", "#テンプレートへの挿入", "\n    ", "html", " ", "=", " ", "tpl", ".", "render", "({", "'title'", ":", "title", ",", " ", "'pixel_list'", ":", "pixel_list", "})", "\n\n    ", "start_response", "(", "'200 OK'", ",", " ", "[(", "'Content-Type'", ",", " ", "'text/html'", ")])", "\n    ", "return", " ", "[", "html", ".", "encode", "(", "'utf-8'", ")]", "\n\n", "if", " ", "__name__", " ", "==", " ", "'__main__'", ":", "\n    ", "from", " ", "flup.server.fcgi", " ", "import", " ", "WSGIServer", "\n", "WSGIServer", "(", "pixel_chart", ")", ".", "run", "()", "\n", "sudo apt-get install lighttpd\nsudo apt-get --no-install-recommends install python-flup\n", "server", ".", "modules", " = (\n    ", "\"mod_access\"", ",\n    ", "\"mod_alias\"", ",\n    ", "\"mod_compress\"", ",\n    ", "\"mod_redirect\"", ",\n    ", "\"mod_fastcgi\"", ",\n)\n\n", "server", ".", "document", "-", "root", "        = ", "\"/var/www\"", "\n", "server", ".", "upload", "-", "dirs", "          = ( ", "\"/var/cache/lighttpd/uploads\"", " )\n", "server", ".", "errorlog", "             = ", "\"/var/log/lighttpd/error.log\"", "\n", "server", ".", "pid", "-", "file", "             = ", "\"/var/run/lighttpd.pid\"", "\n", "server", ".", "username", "             = ", "\"www-data\"", "\n", "server", ".", "groupname", "            = ", "\"www-data\"", "\n", "server", ".", "port", "                 = ", "80", "\n\n", "index", "-", "file", ".", "names", "            = ( ", "\"index.php\"", ", ", "\"index.html\"", ", ", "\"index.lighttpd.html\"", " )\n", "url", ".", "access", "-", "deny", "             = ( ", "\"~\"", ", ", "\".inc\"", " )\n", "static", "-", "file", ".", "exclude", "-", "extensions", " = ( ", "\".php\"", ", ", "\".pl\"", ", ", "\".fcgi\"", " )\n\n", "compress", ".", "cache", "-", "dir", "          = ", "\"/var/cache/lighttpd/compress/\"", "\n", "compress", ".", "filetype", "           = ( ", "\"application/javascript\"", ", ", "\"text/css\"", ", ", "\"text/html\"", ", ", "\"text/plain\"", " )\n\n", "# default listening port for IPv6 falls back to the IPv4 port\n", "include_shell", " ", "\"/usr/share/lighttpd/use-ipv6.pl \"", " + ", "server", ".", "port", "\n", "include_shell", " ", "\"/usr/share/lighttpd/create-mime.assign.pl\"", "\n", "include_shell", " ", "\"/usr/share/lighttpd/include-conf-enabled.pl\"", "\n\n", "fastcgi", ".", "server", " = (\n    ", "\"get_pixel.py\"", " => (\n    ", "\"python-fcgi\"", " => (\n    ", "\"socket\"", " => ", "\"/tmp/get_pixel.python.socket\"", ",\n    ", "\"bin-path\"", " => ", "\"/var/www/get_pixel.py\"", ",\n    ", "\"check-local\"", " => ", "\"disable\"", ",\n    ", "\"max-procs\"", " => ", "1", "\n            )\n        )\n)\n", "#!/bin/sh", "\n\n", "# Stop Daemons", "\nservice motion stop\nservice lighttpd stop\n\n", "# Clear DB and record files", "\n", "rm", " ", "-f", " /var/lib/motion/", "*", ".jpg\nmysql ", "-u", " MySQLユーザ名 ", "-pMySQL", "パスワード データベース名 ", "-e", " ", "\"truncate table テーブル名;\"", "\n\n", "# Restart Daemons", "\nmotion ", "-b", "\nservice lighttpd start\n", "chmod a+x /var/www/get_pixel.py\n"]},
{"title": ["プログラミングで使えるGoogle Homeの機能(随時更新)"], "body": ["\n", "え。Google Homeって", "「180の16進数は」って聞くと答えてくれるんだ…。", "地味に便利・・・", "https://t.co/5PT9ggojGS", "— 高見ちえたん (@TakamiChie) ", "2018年9月19日", "\n", "\n\n", "\n\n", "ということで、こんな機能を発見して「あ、これは開発に使える・・・」と思ったので勢いで作ってしまったエントリです。", "\n\n", "今後も見つけたらどんどん追加していこうと思います。", "\n\n", "\n", "変換系", "\n\n", "\n", "○○の16進数は", "\n\n", "たとえば「150の16進数は」などと聞くと「150は、0x96です。」などと返してくれます。", "\nカラーコードの変換などでこのような基数変換は良く使うと思うので、暗算で基数変更ができる！という方でなければ重宝するのではないかなと。", "\n\n", "ただ、基数変換の結果両方アルファベットとなった場合など、よくわからない発音をされてしまうケースがあるようで、そこは注意です(0xACなど、「アーク」と発音されてしまう)", "\n\n", "ちなみになぜか255だけは16進数変換できませんでした(お役に立てそうにありませんと言われた)", "\n"], "code": []},
{"title": ["C++11 をベースに考えよう"], "body": ["C++ 言語は　C言語の文法やライブラリを引きずりやすい。", "\n私の場合も、C++言語をなるべくC言語のライブラリを引きずらないように書くようにしてきた。", "\nどうやら、C++言語も　C++11以降のスタイルで書くように徹した方がいいらしいことを理解してきたのでメモを示す。", "\n\n", "\n", "C++11", "自体が利点が多い。", "\n\n", "Effective Modern C++ ―C++11/14プログラムを進化させる42項目", "\n", "\nこの本の目次を読んでみれば、C+11へ移行すべき理由がわかるだろう。", "\n\n", "\n", "OpenCV4ではC++11ベースに", "\n\n", "OpenCVもOpenCV3では、C++を標準とするものに変わりきったし、OpenCV4ではC++11をベースとするものになるとのことだ。", "\n\n", "OE 4. OpenCV 4", "\n\n", "\n", "Switch to C++ 11. OpenCV 3.0 is C++ 98 library, whereas many C++ developers switched to C++ 11 or even later standards. We finally need to follow this route. Migration to C++ 11 means breaking “binary compatibility promise”, so this move alone would require OpenCV 4.0.", "\n", "\n\n", "\n", "C++11　とPythonとのよいbindingがある。", "\n\n", "pybind11", "\n\n", "[python高速化]pybind11によるc++組み込み", "\n\n", "pybind11でC++の関数をpythonから使う", "\n"], "code": []},
{"title": ["XcodeのBuildPhase RunScript でxcfilelistを使う"], "body": ["\n", "\n", "はじめに", "\n\n", "Carthageでライブラリ管理を行うような場合、Build Phases に 以下のようなRunScriptを追加する必要があります。", "\n\n", "\n\n", "Carthageを例にとりますと、ここでInput FilesにCarthageで導入したライブラリのBuild成果物のPathを記載する必要がありましたが、ライブラリの数が増えると以下のような問題が発生します。", "\n\n", "\n", "単純に記入が手間", "\n", "記入漏れ等に気づきにくい、逆に重複があっても気づきにくい", "\n", "意味のあるまとまり（通信ライブラリ、Alphabet順など）に整理しづらい", "\n", "\n\n", "このあたりの仕組みに関してXcode10で改善があったため共有します。", "\n\n", "\n", "検証環境", "\n\n", "以下の環境を使用しています。", "\n\n", "\n", "macOS High Sierra Version 10.13.6", "\n", "Xcode Version 10.0.0", "\n", "\n\n", "\n", "何が変わったか", "\n\n", "先ほどの画像に注目していただくと、 Input Files以外に見慣れない Input File Lists項目があることに気づかれるかと思います。Xcode10にてFileだけではなく、xcfilelistをInputやOutputとして取り扱えるようになりました。", "\n以下、具体的な対応方法を記載します。", "\n\n", "\n", "対応方法", "\n\n", "ここで具体的な対応方法について記載します。", "\n\n", "\n", "xcfilelistの追加方法", "\n\n", "Xcodeの File > New > File と辿っていくとよく見る追加ファイル種別の選択画面が表示されます。これを下に辿っていくと Other内に Build Phase File List という項目があります。こちらを選択することでxcfilelistを追加することができます。", "\n\n", "\n\n", "作成直後のファイルの中身は下記のようになります。", "\n\n", "#  CartfileTargets.xcfilelist", "\n", "#  ReduxSample", "\n", "#", "\n", "#  Created on 2018/09/20.", "\n", "#  Copyright © 2018年 iganin. All rights reserved.", "\n\n", "# This file may be set as an input or output file list for a shell script build phase.", "\n", "# List file paths below; one per line. These paths will be considered inputs or outputs for the script phase.", "\n", "# Build settings will be expanded, e.g. $(SRCROOT)/fileName", "\n", "\n\n", "こちらに先ほどの画像のResourcePathを追記していきます。", "\nファイル内はコメント記入もでき、改行も可能なため意味のあるまとまりに分けることもできます。", "\n\n", "#  CartfileTargets.xcfilelist", "\n", "#  ReduxSample", "\n", "#", "\n", "#  Created on 2018/09/20.", "\n", "#  Copyright © 2018年 iganin. All rights reserved.", "\n\n", "# ReSwift", "\n", "$", "(", "SRCROOT", ")", "/", "Carthage", "/", "Build", "/", "iOS", "/", "ReSwift", ".", "framework", "\n\n", "# Reactive Libraries", "\n", "$", "(", "SRCROOT", ")", "/", "Carthage", "/", "Build", "/", "iOS", "/", "RxBlocking", ".", "framework", "\n", "$", "(", "SRCROOT", ")", "/", "Carthage", "/", "Build", "/", "iOS", "/", "RxCocoa", ".", "framework", "\n", "$", "(", "SRCROOT", ")", "/", "Carthage", "/", "Build", "/", "iOS", "/", "RxSwift", ".", "framework", "\n", "\n\n", "最後に作成したxcfilelistをInput Filesに追加します。", "\n先ほどと同じライブラリのcopy-frameworks RunScriptですが随分とすっきりしました。", "\n", "\n\n", "\n", "所感", "\n\n", "以下のメリットがあると考えています。", "\n\n", "\n", "記入漏れや重複記入に気づきやすい", "\n", "ファイル内で意味のあるまとまりに分けることができる", "\n", "そもそもファイルを分けることができるので、Test用、社内ライブラリ、社外ライブラリなどでファイルを分割可能", "\n", "Enterprise、Productなど複数Schemeで同一のライブラリを読み込んでいる場合などに追加の手間が大きく省ける", "\n", "\n\n", "今回はCarthageのcopy-frameworksでご説明しましたが、他のRunScriptフェーズでも同様に使用可能です。", "\n今後は各ファイルを追加するのではなく、xcfilelistに記載しxcfilelistを追加する形が良いのではないでしょうか。", "\n\n", "\n", "参考", "\n\n", "\n", "WWDC - Building Faster in Xcode", "\n", "13分ごろから本記事記載の内容に関して言及されています", "\n", "\n"], "code": ["#  CartfileTargets.xcfilelist", "\n", "#  ReduxSample", "\n", "#", "\n", "#  Created on 2018/09/20.", "\n", "#  Copyright © 2018年 iganin. All rights reserved.", "\n\n", "# This file may be set as an input or output file list for a shell script build phase.", "\n", "# List file paths below; one per line. These paths will be considered inputs or outputs for the script phase.", "\n", "# Build settings will be expanded, e.g. $(SRCROOT)/fileName", "\n", "#  CartfileTargets.xcfilelist", "\n", "#  ReduxSample", "\n", "#", "\n", "#  Created on 2018/09/20.", "\n", "#  Copyright © 2018年 iganin. All rights reserved.", "\n\n", "# ReSwift", "\n", "$", "(", "SRCROOT", ")", "/", "Carthage", "/", "Build", "/", "iOS", "/", "ReSwift", ".", "framework", "\n\n", "# Reactive Libraries", "\n", "$", "(", "SRCROOT", ")", "/", "Carthage", "/", "Build", "/", "iOS", "/", "RxBlocking", ".", "framework", "\n", "$", "(", "SRCROOT", ")", "/", "Carthage", "/", "Build", "/", "iOS", "/", "RxCocoa", ".", "framework", "\n", "$", "(", "SRCROOT", ")", "/", "Carthage", "/", "Build", "/", "iOS", "/", "RxSwift", ".", "framework", "\n"]},
{"title": ["D言語で始めるOpenCL(2) ローカルメモリー編"], "body": ["\n", "\n", "前回までのあらすじ", "\n\n", "前回", "\n\n", "ようやくCPU(のむちゃくちゃ遅い実装)に対して20倍速い行列積の計算ができるようになりました。", "\n\n", "これはまだまだ全然遅いので、今回はそれをどんどん改善していきます。", "\n\n", "なお、記事内で使用しているD言語のOpenCLラッパーライブラリは下記です。(自作)", "\n\n", "https://github.com/outlandkarasu/dcltk", "\n\n", "\n", "現状の速度について", "\n\n", "1000 * 2000の行列と2000 * 3000の行列の積を計算した場合、", "FLOPS", "はたぶん下記の通りになります。", "\n\n", "\n", "結果の行列は1000 * 3000で、要素数は1e3 * 3e3 = 3e6 になる。", "\n", "この3e6の要素それぞれについて、乗算が2000回・加算が2000回発生する。つまり 3e6 * (2e3 + 2e3) = 12e9", "\n", "計算回数 1e9 = 1G 回、12e9 = 12G 回", "\n", "よって、1000 * 2000の行列と2000 * 3000の行列の積を仮に1秒で計算できた場合、12GFLOPS", "\n", "\n\n", "現状ではK80を使って2秒ほど掛かっていたので、12GFLOPSの半分の6GFLOPSが計算速度になります。", "\n\n", "さて、私がGoogleにお金を払って借りているK80の性能はどの程度でしょうか。", "\n\n", "Up to 8.73 teraflops single-precision performance with NVIDIA GPU Boost\n", "\n\n", "出展", "\n", "https://www.nvidia.com/en-us/data-center/tesla-k80/", "\n\n", "借りているのはGPU1コア(1/2ボード)なので、半分と考えて4.36TFLOPS程度でしょうか。", "\n\n", "つまり、いま出せている速度は、", "カタログスペックの1/725です", "。", "\n\n", "CPUと比較して喜んでいる場合ではなかった……。", "\n少しでもこのカタログスペックにたどり着くよう、最適化バトルが始まります。", "\n\n", "\n", "ローカルメモリを使う", "\n\n", "OpenCLで扱えるメモリには、下記のような階層があります。", "\n\n", "\n", "ホストのメモリー", "\n", "====== CommandQueueなどの壁(PCIeなどのバス) ======", "\n", "GPUのグローバルメモリー", "\n", "====== GPU内部バスの壁 ======", "\n", "GPUのローカルメモリー。ワークグループ間で共有可能。", "\n", "====== 共有メモリ同期の壁 ======", "\n", "プライベートメモリー。いわゆるレジスタ？", "\n", "\n\n", "下に行くほど計算ユニットに近く、高速で、小容量です。", "\nまた、速度の壁は上に行くほど厚い(はず)です。", "\nつまり、上の方にある壁ほど、そこを超えてデータを読み書きするのに時間がかかります。", "\n\n", "さて、現状のコードはどうなっているでしょうか。", "\n\n", "__kernel", " ", "void", " ", "product", "(", "\n        ", "__global", " ", "const", " ", "float", " ", "*", "lhs", ",", " ", "// グローバルメモリー", "\n        ", "__global", " ", "const", " ", "float", " ", "*", "rhs", ",", " ", "// グローバルメモリー", "\n        ", "__global", " ", "float", " ", "*", "result", ",", "    ", "// グローバルメモリー", "\n        ", "uint", " ", "rows", ",", "\n        ", "uint", " ", "cols", ",", "\n        ", "uint", " ", "resultCols", ")", " ", "{", "\n    ", "// ワークアイテムのグローバルIDを取得する。", "\n    ", "const", " ", "size_t", " ", "groupI", " ", "=", " ", "get_global_id", "(", "0", ");", "\n    ", "const", " ", "size_t", " ", "groupRows", " ", "=", " ", "get_global_size", "(", "0", ");", "\n    ", "const", " ", "size_t", " ", "groupJ", " ", "=", " ", "get_global_id", "(", "1", ");", "\n    ", "const", " ", "size_t", " ", "groupCols", " ", "=", " ", "get_global_size", "(", "1", ");", "\n\n    ", "for", "(", "size_t", " ", "i", " ", "=", " ", "groupI", ";", " ", "i", " ", "<", " ", "rows", ";", " ", "i", " ", "+=", " ", "groupRows", ")", " ", "{", "\n        ", "for", "(", "size_t", " ", "j", " ", "=", " ", "groupJ", ";", " ", "j", " ", "<", " ", "resultCols", ";", " ", "j", " ", "+=", " ", "groupCols", ")", " ", "{", "\n            ", "float", " ", "value", " ", "=", " ", "0", ".", "0", "f", ";", "\n            ", "for", "(", "size_t", " ", "k", " ", "=", " ", "0", ";", " ", "k", " ", "<", " ", "cols", ";", " ", "++", "k", ")", " ", "{", "\n                ", "// グローバルメモリーから読み込み * 2", "\n                ", "value", " ", "+=", " ", "lhs", "[", "i", " ", "*", " ", "rows", " ", "+", " ", "k", "]", " ", "*", " ", "rhs", "[", "k", " ", "*", " ", "resultCols", " ", "+", " ", "j", "];", "\n            ", "}", "\n            ", "// グローバルメモリーに書き込み", "\n            ", "result", "[", "i", " ", "*", " ", "resultCols", " ", "+", " ", "j", "]", " ", "=", " ", "value", ";", "\n        ", "}", "\n    ", "}", "\n", "}", "\n", "\n\n", "ループのもっとも内側で、2番目に遅いグローバルメモリーから読み込みまくっています。", "\n", "しかも、全ワークアイテムでその読み込みが発生しています。", "\n", "さらに、よく考えると、グローバルメモリーの同じ箇所を何度も計算用にコピーしています。", "\n\n", "これを改善する方法を考えます。", "\n\n", "\n", "計算に使用するデータを、より速いローカルメモリーに置く。", "\n", "ローカルメモリーでデータを共有することで、ワークグループの範囲で読み込み回数を削減する。", "\n", "ローカルメモリーにデータを置くことで、同じ値を何度もグローバルメモリーから読み込まないようにする。", "\n", "\n\n", "\n", "ワークアイテムの現状", "\n\n", "現在、ワークアイテムは行列積の結果の各要素について下記のように割り当てられています。", "\n(A〜Iが個々のワークアイテムを示します)", "\n\n", "\n", "\n", "\n", "\n", "0", "\n", "1", "\n", "2", "\n", "3", "\n", "4", "\n", "...", "\n", "\n", "\n", "\n", "\n", "0", "\n", "A", "\n", "B", "\n", "C", "\n", "A", "\n", "B", "\n", "C", "\n", "\n", "\n", "1", "\n", "D", "\n", "E", "\n", "F", "\n", "D", "\n", "E", "\n", "F", "\n", "\n", "\n", "2", "\n", "G", "\n", "H", "\n", "I", "\n", "G", "\n", "H", "\n", "I", "\n", "\n", "\n", "3", "\n", "A", "\n", "B", "\n", "C", "\n", "A", "\n", "B", "\n", "C", "\n", "\n", "\n", "4", "\n", "D", "\n", "E", "\n", "F", "\n", "D", "\n", "E", "\n", "F", "\n", "\n", "\n", "...", "\n", "G", "\n", "H", "\n", "I", "\n", "G", "\n", "H", "\n", "I", "\n", "\n", "\n", "\n\n", "このA〜Iの塊の1つ1つが、一度に計算されるようになっています。", "\n\n", "\n", "\n", "\n", "\n", "0", "\n", "1", "\n", "2", "\n", "\n", "\n", "\n", "\n", "0", "\n", "A", "\n", "B", "\n", "C", "\n", "\n", "\n", "1", "\n", "D", "\n", "E", "\n", "F", "\n", "\n", "\n", "2", "\n", "G", "\n", "H", "\n", "I", "\n", "\n", "\n", "\n\n", "(これが行列の端まで敷き詰められている)", "\n\n", "このひと塊を計算するのに必要なデータをローカルメモリーに共有し、グローバルメモリーへのアクセスを省略することで、高速化を図ります。", "\n\n", "\n", "ローカルメモリーの確保", "\n\n", "先ほどからローカルメモリーとばかり言っていますが、それはどうやって確保するのでしょうか。", "\n\n", "私の知る限り2つ方法があります。", "\n\n", "まず、GPUコードの中でローカル変数に", "__local", "修飾子をつける方法です。", "\n\n", "void", " ", "f", "(", "void", ")", " ", "{", "\n    ", "// これ", "\n    ", "__local", " ", "float", " ", "localMemory", "[", "1024", "];", "\n", "}", "\n", "\n\n", "これでも良いのですが、いかんせん固定長になってしまいます。", "\n\n", "もう1つ、動的に確保する方法があります。それは、ホスト側コードで", "clSetKernelArg", "を使用する方法です。", "\n\n", "clSetKernelArg", "(", "kernel", ",", " ", "0", ",", " ", "sizeof", "(", "float", ")", " ", "*", " ", "1024", ",", " ", "null", ");", "\n", "\n\n", "GPU側コードは下記のようにします。", "\n\n", "__kernel", " ", "void", " ", "kernel", "(", "__local", " ", "float", " ", "*", "localMemory", ")", " ", "{", "\n    ", "// localMemory使ってガンガン計算", "\n", "}", "\n", "\n\n", "こうすると、", "localMemory", "引数がローカルメモリーということになり、指定したサイズ確保されている状態になります。", "\n\n", "……正直これはAPIとして微妙な感じなので、自作ラッパーライブラリでは", "allocateLocalMemory", "という名前で関数を追加しました。", "\n\n", "cl", ".", "allocateLocalMemory", "(", "kernel", ",", " ", "0", ",", " ", "1024", " ", "*", " ", "float", ".", "sizeof", ");", "\n", "\n\n", "\n", "ワークアイテムの同期", "\n\n", "ローカルメモリーを使う場合、同一ワークグループ内のワークアイテムで同期を行う必要があります。", "\n同期を行わないと、使いたい値を別ワークアイテムに上書きされてしまったり、消されたりと言った問題が発生します。", "\n\n", "そういった処理の競合を防ぐために、", "barrier(CLK_LOCAL_MEM_FENCE)", "を使用します。", "\nこれを使うと、ワークグループ内のワークアイテムが", "barrier", "のある行で一旦停止し、タイミングを合わせた上で一斉に再開することになります。", "\n\n", "つまり、", "ローカルメモリーへの読み書きのタイミングを揃えられます", "。", "\n\n", "気をつけないといけない点として、", "ワークグループの全ワークアイテムが", "barrier", "に到達しないと正しく同期してくれません。", "\n", "if", "や", "for", "で一部のワークアイテムが実行しない", "barrier", "がある場合、バグの元になります。", "\n\n", "出典 ", "https://www.khronos.org/registry/OpenCL/sdk/1.2/docs/man/xhtml/barrier.html", "\n\n", "If barrier is inside a conditional statement, then all work-items must enter the conditional if any work-item enters the conditional statement and executes the barrier.\n", "\n\n", "\n", "実装", "\n\n", "上記を踏まえてようやく実装です。", "\n\n", "\n", "ワークグループ単位で処理を行うようループを整理する", "\n\n", "まず、全ワークアイテムが", "barrier", "を踏む必要があるので、ループの回り方を変えます。", "\n範囲チェックを外側の", "for", "ではなく内側で行うようにします。", "\nCPU脳で考えると超無駄に思えますが、ローカルメモリーを使うためには仕方ありません。", "\n\n", "const", " ", "size_t", " ", "groupI", " ", "=", " ", "get_global_id", "(", "0", ");", "\n", "const", " ", "size_t", " ", "groupRows", " ", "=", " ", "get_global_size", "(", "0", ");", "\n", "const", " ", "size_t", " ", "groupJ", " ", "=", " ", "get_global_id", "(", "1", ");", "\n", "const", " ", "size_t", " ", "groupCols", " ", "=", " ", "get_global_size", "(", "1", ");", "\n\n", "// ここでは行列の端を超えていてもループを終了しないようにする。", "\n", "for", "(", "size_t", " ", "i", " ", "=", " ", "0", ";", " ", "i", " ", "<", " ", "rows", ";", " ", "i", " ", "+=", " ", "groupRows", ")", " ", "{", "\n    ", "for", "(", "size_t", " ", "j", " ", "=", " ", "0", ";", " ", "j", " ", "<", " ", "resultCols", ";", " ", "j", " ", "+=", " ", "groupCols", ")", " ", "{", "\n        ", "// 行列範囲内かどうか", "\n        ", "const", " ", "bool", " ", "inRange", " ", "=", " ", "(", "i", " ", "+", " ", "groupI", ")", " ", "<", " ", "rows", " ", "&&", " ", "(", "j", " ", "+", " ", "groupJ", ")", " ", "<", " ", "resultCols", ";", "\n        ", "float", " ", "value", " ", "=", " ", "0", ".", "0", "f", ";", "\n\n        ", "for", "(", "size_t", " ", "k", " ", "=", " ", "0", ";", " ", "k", " ", "<", " ", "cols", ";", " ", "++", "k", ")", " ", "{", "\n\n            ", "// TODO: ここでワークグループが使用する値をローカルメモリーにコピー", "\n\n            ", "// 範囲内の場合のみ計算", "\n            ", "if", "(", "inRange", ")", " ", "{", "\n                ", "// TODO: ローカルメモリーを使用する", "\n                ", "value", " ", "+=", " ", "lhs", "[(", "i", " ", "+", " ", "groupI", ")", " ", "*", " ", "rows", " ", "+", " ", "k", "]", " ", "*", " ", "rhs", "[", "k", " ", "*", " ", "resultCols", " ", "+", " ", "(", "j", " ", "+", " ", "groupJ", ")];", "\n            ", "}", "\n        ", "}", "\n\n        ", "// 範囲内の場合のみ値を設定", "\n        ", "if", "(", "inRange", ")", " ", "{", "\n            ", "result", "[(", "i", " ", "+", " ", "groupI", ")", " ", "*", " ", "resultCols", " ", "+", " ", "(", "j", " ", "+", " ", "groupJ", ")]", " ", "=", " ", "value", ";", "\n        ", "}", "\n    ", "}", "   \n", "}", "\n", "\n\n", "さて、まだグローバルなワークアイテムIDを基準にした処理しか行なっていません。", "\nローカルメモリーはワークグループ内でしか使用できないので、ワークグループ内のIDであるローカルIDを基準にループするよう修正します。", "\n\n", "// ワークグループ内部でのIDを取得", "\n", "const", " ", "size_t", " ", "localI", " ", "=", " ", "get_local_id", "(", "0", ");", "\n", "const", " ", "size_t", " ", "localRows", " ", "=", " ", "get_local_size", "(", "0", ");", "\n", "const", " ", "size_t", " ", "localJ", " ", "=", " ", "get_local_id", "(", "1", ");", "\n", "const", " ", "size_t", " ", "localCols", " ", "=", " ", "get_local_size", "(", "1", ");", "\n", "\n\n", "        ", "// ワークグループのサイズ(列数)ごとの処理に修正", "\n        ", "for", "(", "size_t", " ", "k", " ", "=", " ", "0", ";", " ", "k", " ", "<", " ", "cols", ";", " ", "k", " ", "+=", " ", "localCols", ")", " ", "{", "\n\n            ", "// TODO: ここでワークグループが使用する値をローカルメモリーにコピー", "\n\n            ", "// 範囲内の場合のみ計算", "\n            ", "if", "(", "inRange", ")", " ", "{", "\n                ", "// ワークグループが処理している範囲で計算を行う。", "\n                ", "// 現在のワークアイテムが行列の端から出ている場合は何もしない。", "\n                ", "for", "(", "size_t", " ", "lk", " ", "=", " ", "0", ";", " ", "lk", " ", "<", " ", "localCols", " ", "&&", " ", "(", "k", " ", "+", " ", "lk", ")", " ", "<", " ", "cols", ";", " ", "++", "lk", ")", " ", "{", "\n                    ", "// TODO: ローカルメモリーを使用する", "\n                    ", "value", " ", "+=", " ", "lhs", "[(", "i", " ", "+", " ", "groupI", ")", " ", "*", " ", "rows", " ", "+", " ", "(", "k", " ", "+", " ", "lk", ")]", " ", "*", " ", "rhs", "[(", "k", " ", "+", " ", "lk", ")", " ", "*", " ", "resultCols", " ", "+", " ", "(", "j", " ", "+", " ", "groupJ", ")];", "\n                ", "}", "\n            ", "}", "\n        ", "}", "\n", "\n\n", "この一番内側の", "lk", "のループでグローバルメモリーアクセスがローカルメモリーアクセスになることで高速化されます。", "\n\n", "\n", "ローカルメモリーへのコピー", "\n\n", "いよいよローカルメモリーへグローバルメモリーから値をコピーしますが、ここからが面倒臭いです。", "\n\n", "今回の処理は、", "\n\n", "\n", "直前の計算(ローカルメモリーアクセス)が終わるまで待機", "\n", "ワークグループ内部の全ワークアイテムで、ローカルメモリーにコピー", "\n", "ローカルメモリーのコピーが終わるまで待機", "\n", "ローカルメモリーを使用した計算を開始", "\n", "\n\n", "という順序で行います。というわけで、とりあえず", "barrier", "を貼ります。", "\n\n", "// TODO: ここでワークグループが使用する値をローカルメモリーにコピー", "\n", "barrier", "(", "CLK_LOCAL_MEM_FENCE", ");", " ", "// 直前の計算完了まで待つ", "\n", "barrier", "(", "CLK_LOCAL_MEM_FENCE", ");", " ", "// コピー完了まで待つ", "\n", "\n\n", "次に、グローバルメモリーからローカルメモリーへのコピーを行います。", "\nこのコピーをまた単一ワークアイテムでシコシコ実行すると遅いです。", "\nそこで、ワークアイテムを一斉に動かして並列処理でコピーが終わるようにします。", "\nコードとしては、", "localI", "・", "localJ", "を元にグローバルメモリー", "lhs", "・", "rhs", "からローカルメモリーへ、1要素分のコピーを行うことになります。", "\nコード上ではただの1要素のコピーに見えますが、ワークアイテムで並列実行されるので必要な要素分コピーが行われることになります。", "\n\n", "段階を追って実装します。まず、", "左辺の行列の行の要素", "をコピーしてみます。", "\n\n", "barrier", "(", "CLK_LOCAL_MEM_FENCE", ");", " ", "// 直前の計算完了まで待つ", "\n\n", "// ワークアイテムが行列からはみ出していなければコピー実行", "\n", "if", "((", "i", " ", "+", " ", "groupI", ")", " ", "<", " ", "rows", " ", "&&", " ", "(", "k", " ", "+", " ", "localJ", ")", " ", "<", " ", "cols", ")", " ", "{", "\n    ", "localRow", "[", "localI", " ", "*", " ", "localCols", " ", "+", " ", "localJ", "]", " ", "=", " ", "lhs", "[(", "i", " ", "+", " ", "groupI", ")", " ", "*", " ", "cols", " ", "+", " ", "(", "k", " ", "+", " ", "localJ", ")];", "\n", "}", "\n\n", "barrier", "(", "CLK_LOCAL_MEM_FENCE", ");", " ", "// コピー完了まで待つ", "\n", "\n\n", "localRow", "はどこから出てきたのでしょうか？ これはカーネル関数の引数に追加し、先述の", "allocateLocalMemory", "で確保します。", "\n\n", "__kernel", " ", "void", " ", "product", "(", "\n        ", "__global", " ", "const", " ", "float", " ", "*", "lhs", ",", "\n        ", "__global", " ", "const", " ", "float", " ", "*", "rhs", ",", "\n        ", "__global", " ", "float", " ", "*", "result", ",", "\n        ", "uint", " ", "rows", ",", "\n        ", "uint", " ", "cols", ",", "\n        ", "uint", " ", "resultCols", ",", "\n        ", "__local", " ", "float", " ", "*", "localRow", ")", " ", "// これ", "\n", "\n\n", "localRow", "は、ワークグループで一度に処理する要素の分、つまりワークグループ内のワークアイテムの数だけ必要になります。", "\n\n", "// ローカルメモリーを確保\n", "cl", ".", "allocateLocalMemory", "(", "kernel", ",", " ", "6", ",", " ", "32", " ", "*", " ", "32", " ", "*", " ", "float", ".", "sizeof", ");", "\n", "\n\n", "右辺の行列の列の要素", "もコピーします。", "\n\n", "barrier", "(", "CLK_LOCAL_MEM_FENCE", ");", " ", "// 直前の計算完了まで待つ", "\n\n", "// ワークアイテムが行列からはみ出していなければコピー実行", "\n", "if", "((", "i", " ", "+", " ", "groupI", ")", " ", "<", " ", "rows", " ", "&&", " ", "(", "k", " ", "+", " ", "localJ", ")", " ", "<", " ", "cols", ")", " ", "{", "\n    ", "localRow", "[", "localI", " ", "*", " ", "localCols", " ", "+", " ", "localJ", "]", " ", "=", " ", "lhs", "[(", "i", " ", "+", " ", "groupI", ")", " ", "*", " ", "cols", " ", "+", " ", "(", "k", " ", "+", " ", "localJ", ")];", "\n", "}", "\n", "if", "((", "j", " ", "+", " ", "groupJ", ")", " ", "<", " ", "resultCols", " ", "&&", " ", "(", "k", " ", "+", " ", "localI", ")", " ", "<", " ", "cols", ")", " ", "{", "\n    ", "localCol", "[", "localI", " ", "*", " ", "localCols", " ", "+", " ", "localJ", "]", " ", "=", " ", "rhs", "[(", "k", " ", "+", " ", "localI", ")", " ", "*", " ", "resultCols", " ", "+", " ", "(", "j", " ", "+", " ", "groupJ", ")];", "\n", "}", "\n\n", "barrier", "(", "CLK_LOCAL_MEM_FENCE", ");", " ", "// コピー完了まで待つ", "\n", "\n\n", "localCol", "についても、ローカルメモリーを先ほどと同様に確保します。(省略)", "\n\n", "（以下、細かい言い訳。なぜ", "rhs", "からのコピーで", "localI", "を使用するのかについて）", "\nさて、ここで実はワークグループサイズに暗黙の仮定を置いてしまっています。現状では上のコードは", "ワークグループサイズの行数・列数が同じでないと動きません", "。", "\nなぜなら、", "localCol", "へのコピーで、コピー元のインデックス生成に", "localI", "(行番号)を使用してしまっているからです……。", "\nここは本来は", "localJ", "(列番号)が対応するべきですが、", "localJ", "が増えると", "groupJ", "も増える関係にあるため、うまくいきません。(対角線の要素のみコピーするような動作になってしまいます)", "\n", "localI", "を使えば、", "groupJ", "が同じで行番号が違うワークアイテムが動くことになるので、コピー元とコピー先が1:1対応してうまくコピーできます……。", "\n\n", "\n", "ローカルメモリーで計算する", "\n\n", "色々苦労しましたがようやくローカルメモリーで計算できます。", "\n", "localRow", "・", "localCol", "にワークグループが参照する両辺の要素はコピーされているので、これを参照して計算するようにします。", "\n\n", "        ", "// ワークグループのサイズ(列数)ごとの処理に修正", "\n        ", "for", "(", "size_t", " ", "k", " ", "=", " ", "0", ";", " ", "k", " ", "<", " ", "cols", ";", " ", "k", " ", "+=", " ", "localCols", ")", " ", "{", "\n\n            ", "barrier", "(", "CLK_LOCAL_MEM_FENCE", ");", " ", "// 直前の計算完了まで待つ", "\n\n            ", "// ワークアイテムが行列からはみ出していなければコピー実行", "\n            ", "if", "((", "i", " ", "+", " ", "groupI", ")", " ", "<", " ", "rows", " ", "&&", " ", "(", "k", " ", "+", " ", "localJ", ")", " ", "<", " ", "cols", ")", " ", "{", "\n                ", "localRow", "[", "localI", " ", "*", " ", "localCols", " ", "+", " ", "localJ", "]", " ", "=", " ", "lhs", "[(", "i", " ", "+", " ", "groupI", ")", " ", "*", " ", "cols", " ", "+", " ", "(", "k", " ", "+", " ", "localJ", ")];", "\n            ", "}", "\n            ", "if", "((", "j", " ", "+", " ", "groupJ", ")", " ", "<", " ", "resultCols", " ", "&&", " ", "(", "k", " ", "+", " ", "localI", ")", " ", "<", " ", "cols", ")", " ", "{", "\n                ", "localCol", "[", "localI", " ", "*", " ", "localCols", " ", "+", " ", "localJ", "]", " ", "=", " ", "rhs", "[(", "k", " ", "+", " ", "localI", ")", " ", "*", " ", "resultCols", " ", "+", " ", "(", "j", " ", "+", " ", "groupJ", ")];", "\n            ", "}", "\n\n            ", "barrier", "(", "CLK_LOCAL_MEM_FENCE", ");", " ", "// コピー完了まで待つ", "\n\n            ", "// 範囲内の場合のみ計算", "\n            ", "if", "(", "inRange", ")", " ", "{", "\n                ", "// ワークグループが処理している範囲で計算を行う。", "\n                ", "// 現在のワークアイテムが行列の端から出ている場合は何もしない。", "\n                ", "for", "(", "size_t", " ", "lk", " ", "=", " ", "0", ";", " ", "lk", " ", "<", " ", "localCols", " ", "&&", " ", "(", "k", " ", "+", " ", "lk", ")", " ", "<", " ", "cols", ";", " ", "++", "lk", ")", " ", "{", "\n                    ", "// ローカルメモリー参照", "\n                    ", "value", " ", "+=", " ", "localRow", "[", "localI", " ", "*", " ", "localCols", " ", "+", " ", "lk", "]", " ", "*", " ", "localCol", "[", "lk", " ", "*", " ", "localCols", " ", "+", " ", "localJ", "];", "\n                ", "}", "\n            ", "}", "\n        ", "}", "\n", "\n\n", "本当にこれで早くなったのか?", "\n\n", "\n", "計算結果", "\n\n", "ローカルメモリー使用前", "\n\n", "cpu: 48344 msecs, gpu: 2100 msecs\n", "\n\n", "ローカルメモリー使用後", "\n\n", "cpu: 42206 msecs, gpu: 791 msecs\n", "\n\n", "なんということでしょう。ほぼ2.5倍に！", "\n\n", "あんな遅そうなコードなのに……。", "\n\n", "FLOPSで言えば、15GFLOPSまで到達しました。とは言え、理論性能の1/290です……。", "\n明らかにまだまだ遅そうなので、さらなる最適化を行います。", "\n"], "code": ["Up to 8.73 teraflops single-precision performance with NVIDIA GPU Boost\n", "__kernel", " ", "void", " ", "product", "(", "\n        ", "__global", " ", "const", " ", "float", " ", "*", "lhs", ",", " ", "// グローバルメモリー", "\n        ", "__global", " ", "const", " ", "float", " ", "*", "rhs", ",", " ", "// グローバルメモリー", "\n        ", "__global", " ", "float", " ", "*", "result", ",", "    ", "// グローバルメモリー", "\n        ", "uint", " ", "rows", ",", "\n        ", "uint", " ", "cols", ",", "\n        ", "uint", " ", "resultCols", ")", " ", "{", "\n    ", "// ワークアイテムのグローバルIDを取得する。", "\n    ", "const", " ", "size_t", " ", "groupI", " ", "=", " ", "get_global_id", "(", "0", ");", "\n    ", "const", " ", "size_t", " ", "groupRows", " ", "=", " ", "get_global_size", "(", "0", ");", "\n    ", "const", " ", "size_t", " ", "groupJ", " ", "=", " ", "get_global_id", "(", "1", ");", "\n    ", "const", " ", "size_t", " ", "groupCols", " ", "=", " ", "get_global_size", "(", "1", ");", "\n\n    ", "for", "(", "size_t", " ", "i", " ", "=", " ", "groupI", ";", " ", "i", " ", "<", " ", "rows", ";", " ", "i", " ", "+=", " ", "groupRows", ")", " ", "{", "\n        ", "for", "(", "size_t", " ", "j", " ", "=", " ", "groupJ", ";", " ", "j", " ", "<", " ", "resultCols", ";", " ", "j", " ", "+=", " ", "groupCols", ")", " ", "{", "\n            ", "float", " ", "value", " ", "=", " ", "0", ".", "0", "f", ";", "\n            ", "for", "(", "size_t", " ", "k", " ", "=", " ", "0", ";", " ", "k", " ", "<", " ", "cols", ";", " ", "++", "k", ")", " ", "{", "\n                ", "// グローバルメモリーから読み込み * 2", "\n                ", "value", " ", "+=", " ", "lhs", "[", "i", " ", "*", " ", "rows", " ", "+", " ", "k", "]", " ", "*", " ", "rhs", "[", "k", " ", "*", " ", "resultCols", " ", "+", " ", "j", "];", "\n            ", "}", "\n            ", "// グローバルメモリーに書き込み", "\n            ", "result", "[", "i", " ", "*", " ", "resultCols", " ", "+", " ", "j", "]", " ", "=", " ", "value", ";", "\n        ", "}", "\n    ", "}", "\n", "}", "\n", "void", " ", "f", "(", "void", ")", " ", "{", "\n    ", "// これ", "\n    ", "__local", " ", "float", " ", "localMemory", "[", "1024", "];", "\n", "}", "\n", "clSetKernelArg", "(", "kernel", ",", " ", "0", ",", " ", "sizeof", "(", "float", ")", " ", "*", " ", "1024", ",", " ", "null", ");", "\n", "__kernel", " ", "void", " ", "kernel", "(", "__local", " ", "float", " ", "*", "localMemory", ")", " ", "{", "\n    ", "// localMemory使ってガンガン計算", "\n", "}", "\n", "cl", ".", "allocateLocalMemory", "(", "kernel", ",", " ", "0", ",", " ", "1024", " ", "*", " ", "float", ".", "sizeof", ");", "\n", "If barrier is inside a conditional statement, then all work-items must enter the conditional if any work-item enters the conditional statement and executes the barrier.\n", "const", " ", "size_t", " ", "groupI", " ", "=", " ", "get_global_id", "(", "0", ");", "\n", "const", " ", "size_t", " ", "groupRows", " ", "=", " ", "get_global_size", "(", "0", ");", "\n", "const", " ", "size_t", " ", "groupJ", " ", "=", " ", "get_global_id", "(", "1", ");", "\n", "const", " ", "size_t", " ", "groupCols", " ", "=", " ", "get_global_size", "(", "1", ");", "\n\n", "// ここでは行列の端を超えていてもループを終了しないようにする。", "\n", "for", "(", "size_t", " ", "i", " ", "=", " ", "0", ";", " ", "i", " ", "<", " ", "rows", ";", " ", "i", " ", "+=", " ", "groupRows", ")", " ", "{", "\n    ", "for", "(", "size_t", " ", "j", " ", "=", " ", "0", ";", " ", "j", " ", "<", " ", "resultCols", ";", " ", "j", " ", "+=", " ", "groupCols", ")", " ", "{", "\n        ", "// 行列範囲内かどうか", "\n        ", "const", " ", "bool", " ", "inRange", " ", "=", " ", "(", "i", " ", "+", " ", "groupI", ")", " ", "<", " ", "rows", " ", "&&", " ", "(", "j", " ", "+", " ", "groupJ", ")", " ", "<", " ", "resultCols", ";", "\n        ", "float", " ", "value", " ", "=", " ", "0", ".", "0", "f", ";", "\n\n        ", "for", "(", "size_t", " ", "k", " ", "=", " ", "0", ";", " ", "k", " ", "<", " ", "cols", ";", " ", "++", "k", ")", " ", "{", "\n\n            ", "// TODO: ここでワークグループが使用する値をローカルメモリーにコピー", "\n\n            ", "// 範囲内の場合のみ計算", "\n            ", "if", "(", "inRange", ")", " ", "{", "\n                ", "// TODO: ローカルメモリーを使用する", "\n                ", "value", " ", "+=", " ", "lhs", "[(", "i", " ", "+", " ", "groupI", ")", " ", "*", " ", "rows", " ", "+", " ", "k", "]", " ", "*", " ", "rhs", "[", "k", " ", "*", " ", "resultCols", " ", "+", " ", "(", "j", " ", "+", " ", "groupJ", ")];", "\n            ", "}", "\n        ", "}", "\n\n        ", "// 範囲内の場合のみ値を設定", "\n        ", "if", "(", "inRange", ")", " ", "{", "\n            ", "result", "[(", "i", " ", "+", " ", "groupI", ")", " ", "*", " ", "resultCols", " ", "+", " ", "(", "j", " ", "+", " ", "groupJ", ")]", " ", "=", " ", "value", ";", "\n        ", "}", "\n    ", "}", "   \n", "}", "\n", "// ワークグループ内部でのIDを取得", "\n", "const", " ", "size_t", " ", "localI", " ", "=", " ", "get_local_id", "(", "0", ");", "\n", "const", " ", "size_t", " ", "localRows", " ", "=", " ", "get_local_size", "(", "0", ");", "\n", "const", " ", "size_t", " ", "localJ", " ", "=", " ", "get_local_id", "(", "1", ");", "\n", "const", " ", "size_t", " ", "localCols", " ", "=", " ", "get_local_size", "(", "1", ");", "\n", "        ", "// ワークグループのサイズ(列数)ごとの処理に修正", "\n        ", "for", "(", "size_t", " ", "k", " ", "=", " ", "0", ";", " ", "k", " ", "<", " ", "cols", ";", " ", "k", " ", "+=", " ", "localCols", ")", " ", "{", "\n\n            ", "// TODO: ここでワークグループが使用する値をローカルメモリーにコピー", "\n\n            ", "// 範囲内の場合のみ計算", "\n            ", "if", "(", "inRange", ")", " ", "{", "\n                ", "// ワークグループが処理している範囲で計算を行う。", "\n                ", "// 現在のワークアイテムが行列の端から出ている場合は何もしない。", "\n                ", "for", "(", "size_t", " ", "lk", " ", "=", " ", "0", ";", " ", "lk", " ", "<", " ", "localCols", " ", "&&", " ", "(", "k", " ", "+", " ", "lk", ")", " ", "<", " ", "cols", ";", " ", "++", "lk", ")", " ", "{", "\n                    ", "// TODO: ローカルメモリーを使用する", "\n                    ", "value", " ", "+=", " ", "lhs", "[(", "i", " ", "+", " ", "groupI", ")", " ", "*", " ", "rows", " ", "+", " ", "(", "k", " ", "+", " ", "lk", ")]", " ", "*", " ", "rhs", "[(", "k", " ", "+", " ", "lk", ")", " ", "*", " ", "resultCols", " ", "+", " ", "(", "j", " ", "+", " ", "groupJ", ")];", "\n                ", "}", "\n            ", "}", "\n        ", "}", "\n", "// TODO: ここでワークグループが使用する値をローカルメモリーにコピー", "\n", "barrier", "(", "CLK_LOCAL_MEM_FENCE", ");", " ", "// 直前の計算完了まで待つ", "\n", "barrier", "(", "CLK_LOCAL_MEM_FENCE", ");", " ", "// コピー完了まで待つ", "\n", "barrier", "(", "CLK_LOCAL_MEM_FENCE", ");", " ", "// 直前の計算完了まで待つ", "\n\n", "// ワークアイテムが行列からはみ出していなければコピー実行", "\n", "if", "((", "i", " ", "+", " ", "groupI", ")", " ", "<", " ", "rows", " ", "&&", " ", "(", "k", " ", "+", " ", "localJ", ")", " ", "<", " ", "cols", ")", " ", "{", "\n    ", "localRow", "[", "localI", " ", "*", " ", "localCols", " ", "+", " ", "localJ", "]", " ", "=", " ", "lhs", "[(", "i", " ", "+", " ", "groupI", ")", " ", "*", " ", "cols", " ", "+", " ", "(", "k", " ", "+", " ", "localJ", ")];", "\n", "}", "\n\n", "barrier", "(", "CLK_LOCAL_MEM_FENCE", ");", " ", "// コピー完了まで待つ", "\n", "__kernel", " ", "void", " ", "product", "(", "\n        ", "__global", " ", "const", " ", "float", " ", "*", "lhs", ",", "\n        ", "__global", " ", "const", " ", "float", " ", "*", "rhs", ",", "\n        ", "__global", " ", "float", " ", "*", "result", ",", "\n        ", "uint", " ", "rows", ",", "\n        ", "uint", " ", "cols", ",", "\n        ", "uint", " ", "resultCols", ",", "\n        ", "__local", " ", "float", " ", "*", "localRow", ")", " ", "// これ", "\n", "// ローカルメモリーを確保\n", "cl", ".", "allocateLocalMemory", "(", "kernel", ",", " ", "6", ",", " ", "32", " ", "*", " ", "32", " ", "*", " ", "float", ".", "sizeof", ");", "\n", "barrier", "(", "CLK_LOCAL_MEM_FENCE", ");", " ", "// 直前の計算完了まで待つ", "\n\n", "// ワークアイテムが行列からはみ出していなければコピー実行", "\n", "if", "((", "i", " ", "+", " ", "groupI", ")", " ", "<", " ", "rows", " ", "&&", " ", "(", "k", " ", "+", " ", "localJ", ")", " ", "<", " ", "cols", ")", " ", "{", "\n    ", "localRow", "[", "localI", " ", "*", " ", "localCols", " ", "+", " ", "localJ", "]", " ", "=", " ", "lhs", "[(", "i", " ", "+", " ", "groupI", ")", " ", "*", " ", "cols", " ", "+", " ", "(", "k", " ", "+", " ", "localJ", ")];", "\n", "}", "\n", "if", "((", "j", " ", "+", " ", "groupJ", ")", " ", "<", " ", "resultCols", " ", "&&", " ", "(", "k", " ", "+", " ", "localI", ")", " ", "<", " ", "cols", ")", " ", "{", "\n    ", "localCol", "[", "localI", " ", "*", " ", "localCols", " ", "+", " ", "localJ", "]", " ", "=", " ", "rhs", "[(", "k", " ", "+", " ", "localI", ")", " ", "*", " ", "resultCols", " ", "+", " ", "(", "j", " ", "+", " ", "groupJ", ")];", "\n", "}", "\n\n", "barrier", "(", "CLK_LOCAL_MEM_FENCE", ");", " ", "// コピー完了まで待つ", "\n", "        ", "// ワークグループのサイズ(列数)ごとの処理に修正", "\n        ", "for", "(", "size_t", " ", "k", " ", "=", " ", "0", ";", " ", "k", " ", "<", " ", "cols", ";", " ", "k", " ", "+=", " ", "localCols", ")", " ", "{", "\n\n            ", "barrier", "(", "CLK_LOCAL_MEM_FENCE", ");", " ", "// 直前の計算完了まで待つ", "\n\n            ", "// ワークアイテムが行列からはみ出していなければコピー実行", "\n            ", "if", "((", "i", " ", "+", " ", "groupI", ")", " ", "<", " ", "rows", " ", "&&", " ", "(", "k", " ", "+", " ", "localJ", ")", " ", "<", " ", "cols", ")", " ", "{", "\n                ", "localRow", "[", "localI", " ", "*", " ", "localCols", " ", "+", " ", "localJ", "]", " ", "=", " ", "lhs", "[(", "i", " ", "+", " ", "groupI", ")", " ", "*", " ", "cols", " ", "+", " ", "(", "k", " ", "+", " ", "localJ", ")];", "\n            ", "}", "\n            ", "if", "((", "j", " ", "+", " ", "groupJ", ")", " ", "<", " ", "resultCols", " ", "&&", " ", "(", "k", " ", "+", " ", "localI", ")", " ", "<", " ", "cols", ")", " ", "{", "\n                ", "localCol", "[", "localI", " ", "*", " ", "localCols", " ", "+", " ", "localJ", "]", " ", "=", " ", "rhs", "[(", "k", " ", "+", " ", "localI", ")", " ", "*", " ", "resultCols", " ", "+", " ", "(", "j", " ", "+", " ", "groupJ", ")];", "\n            ", "}", "\n\n            ", "barrier", "(", "CLK_LOCAL_MEM_FENCE", ");", " ", "// コピー完了まで待つ", "\n\n            ", "// 範囲内の場合のみ計算", "\n            ", "if", "(", "inRange", ")", " ", "{", "\n                ", "// ワークグループが処理している範囲で計算を行う。", "\n                ", "// 現在のワークアイテムが行列の端から出ている場合は何もしない。", "\n                ", "for", "(", "size_t", " ", "lk", " ", "=", " ", "0", ";", " ", "lk", " ", "<", " ", "localCols", " ", "&&", " ", "(", "k", " ", "+", " ", "lk", ")", " ", "<", " ", "cols", ";", " ", "++", "lk", ")", " ", "{", "\n                    ", "// ローカルメモリー参照", "\n                    ", "value", " ", "+=", " ", "localRow", "[", "localI", " ", "*", " ", "localCols", " ", "+", " ", "lk", "]", " ", "*", " ", "localCol", "[", "lk", " ", "*", " ", "localCols", " ", "+", " ", "localJ", "];", "\n                ", "}", "\n            ", "}", "\n        ", "}", "\n", "cpu: 48344 msecs, gpu: 2100 msecs\n", "cpu: 42206 msecs, gpu: 791 msecs\n"]},
{"title": ["環境構築"], "body": ["\n", "\n", "MacOSXにReact.js環境を構築する", "\n\n", "夜です。眠いです。少し書いたら寝ます。普段はWindows PCのNodistを使ってReact環境を作ってます。", "\n今回はMacで環境を作っていこうと思います。とりあえず、今日はcreate-react-app できるところまで。", "\n\n", "\n", "brewインストール", "\n\n", "https://brew.sh/", "\n\n", "$ ", "/usr/bin/ruby ", "-e", " ", "\"", "$(", "curl ", "-fsSL", " https://raw.githubusercontent.com/Homebrew/install/master/install", ")", "\"", "\n", "\n\n", "brewはインストール済みだったぽいので、最新版にアップデート", "\n\n", "$ ", "brew update\n", "$ ", "brew ", "-v", "\n", ">", " Homebrew 1.7.5\n", "\n\n", "\n", "anyenv で開発環境を構築", "\n\n", "Nodistと似たような感じで、様々な言語をサポートしてるので anyenv を使います。", "\n\n", "https://github.com/riywo/ndenv", "\n\n", "$ ", "brew ", "install ", "ndenv\n", "$ ", "ndenv ", "-v", "\n", ">", " ndenv 0.4.0\n\n", "$ ", "echo", " ", "'export PATH=\"$HOME/.ndenv/bin:$PATH\"'", " ", ">>", " ~/.bash_profile\n", "$ ", "echo", " ", "'eval \"$(ndenv init -)\"'", " ", ">>", " ~/.bash_profile\n", "$ ", "exec", " ", "$SHELL", " ", "-l", "\n", "\n\n", "node自体をインストールするのに、node-build も勧められてるので入れます。", "\n\n", "$ ", "git clone https://github.com/riywo/node-build.git ", "$(", "ndenv root", ")", "/plugins/node-build\n", "\n\n", "早速 node をいれます。安定ビルドバージョンの 8.12.0 （2018年9月19日現在）を指定します。", "\n\n", "$ ", "ndenv ", "install ", "8.12.0\n/usr/bin/env: bash", "\\r", ": No such file or directory\n", "\n\n", "!?", "\n\n", "bash\\r が無いと言っている。どうやらwindowsの改行コードがだめらしい。", "\ndos2unix という改行コード変換を試す。", "\n\n", "$ ", "brew ", "install ", "doc2unix\n", "\n\n", "参考にしたコマンドが、ユーザーディレクトリ以下の全てのファイルを変換しようとしたので、あえて掲載しない。正直ミスったと思った。", "\n途中で止めたが、一応動作した。", "\n\n", "$ ", "ndenv ", "install ", "v8.12.0\n", "$ ", "ndenv versions\n v8.12.0\n\n", "$ ", "ndenv global 8.12.0\n", "$ ", "node ", "-v", "\nv8.12.0\n", "\n\n", "\n", "yarn インストール", "\n\n", "$ ", "brew ", "install ", "yarn ", "--without-node", "\n", "\n\n", "\n", "create-react-app インストール", "\n\n", "$ ", "yarn global add create-react-app\n", "$ ", "create-react-app my-app\n", "$ ", "cd ", "my-app\n", "$ ", "yarn start\n", "\n\n", "動いた。寝る。", "\n"], "code": ["$ ", "/usr/bin/ruby ", "-e", " ", "\"", "$(", "curl ", "-fsSL", " https://raw.githubusercontent.com/Homebrew/install/master/install", ")", "\"", "\n", "$ ", "brew update\n", "$ ", "brew ", "-v", "\n", ">", " Homebrew 1.7.5\n", "$ ", "brew ", "install ", "ndenv\n", "$ ", "ndenv ", "-v", "\n", ">", " ndenv 0.4.0\n\n", "$ ", "echo", " ", "'export PATH=\"$HOME/.ndenv/bin:$PATH\"'", " ", ">>", " ~/.bash_profile\n", "$ ", "echo", " ", "'eval \"$(ndenv init -)\"'", " ", ">>", " ~/.bash_profile\n", "$ ", "exec", " ", "$SHELL", " ", "-l", "\n", "$ ", "git clone https://github.com/riywo/node-build.git ", "$(", "ndenv root", ")", "/plugins/node-build\n", "$ ", "ndenv ", "install ", "8.12.0\n/usr/bin/env: bash", "\\r", ": No such file or directory\n", "$ ", "brew ", "install ", "doc2unix\n", "$ ", "ndenv ", "install ", "v8.12.0\n", "$ ", "ndenv versions\n v8.12.0\n\n", "$ ", "ndenv global 8.12.0\n", "$ ", "node ", "-v", "\nv8.12.0\n", "$ ", "brew ", "install ", "yarn ", "--without-node", "\n", "$ ", "yarn global add create-react-app\n", "$ ", "create-react-app my-app\n", "$ ", "cd ", "my-app\n", "$ ", "yarn start\n"]},
{"title": ["Istio入門：既存のGKE上アプリケーションにIstioを導入するまでの流れ"], "body": ["こんにちは。株式会社リクルートライフスタイルで", "CET", "という", "チーム", "に所属している", "@mihirat", " です。", "\n\n", "社内でIstioを導入した際に、チュートリアルなどではわかりにくいハマりポイントや、既存GKEクラスタの導入にあたって留意すべき点がけっこうあるなと思ったのでまとめます。", "\n\n", "対象読者は", "\n\n", "\n", "GKEですでにサービスなどを運用している", "\n", "Istioの概要は知っている、またはチュートリアルは終わった", "\n", "\n\n", "くらいの方を想定しています。", "\n\n", "なお、Istioとはなにかを解説する記事はすでにたくさんあるので、できるだけ作業レベルで導入の仕方を解説していきます。", "\nIstioを知るハンズオンとしては、Googleの中の方の", "Istio 1.0 を試してみた！", "などが良いです。", "\n\n", "\n", "移行したいアプリの構成", "\n\n", "もともとの構成はこんな感じでした。", "\n\n", "\n", "GCP上でglobal IPを取得し、FQDNと紐づけて外部流入をさせる", "\n", "トラフィックはIngressで受けており、SSL terminationを行う", "\n", "Ingressの次にNginxのpodがあり、バックエンドのpodへkube-dnsを用いてリバースプロキシさせる", "\n", "バックエンドのpodでは、GCSからリソースを取得するなどの処理をしつつレスポンスを返すサーバーが動作", "\n", "\n\n", "なお、下記の手順は、クラスタを別で新しく作成して、そこにIstioを導入する想定で進めます。", "\n\n", "既存クラスタ上で作業するとダウンタイムが出る危険性が高い気がします。", "\n（namespaceを既存と別に切ればいいような気もしますが、既存namespaceに影響が出ないかを自分は確認していません）", "\n\n", "\n", "やることの流れ", "\n\n", "1.　クラスタ作成", "\n2.　クラスタへのIstio導入と、namespaceへの有効化", "\n3.　namespace内へのリソースのデプロイ", "\n\n", "\n", "準備", "\n\n", "本家のチュートリアルに沿って、Istioを導入します。", "\n利用するのは", "\n\n", "$ kubectl apply -f install/kubernetes/istio-demo.yaml", "\n\n", "です。", "\nistio-demo-auth.yamlでは、mutualTLSといってpod間の通信が全てTLSになって最高！に見えるのですが、readiness probeとliveness probeが使えなくなります。", "\n", "サービスが動いているportとは別にprobe専用のportを空けるという話", "もありますが、それってReadinessの意味がないような？", "\n\n", "無事にIstioが導入できたら（サンプルアプリのデプロイまで行ってしっかり確認しましょう）、既存アプリをデプロイするためのnamespaceを作成します。", "\n\n", "それが終わったら、下記コマンドでnamespace全体に対してIstioを有効化します。", "\n\n", "$　kubectl label namespace my-app istio-injection=enabled", "\n\n", "この操作によって、このnamespace内で以後作成されるpodは全て、", "\nIstioで利用されているEnvoyをsidecarとして自動的に注入された状態で立ち上がることになります。", "\nこの機能はkubernetes1.9以上じゃないと使えません（kubernetesのpod initializerを利用しているため）", "\n\n", "\n", "知るべきこと1. IstioではIngressは使わない", "\n\n", "最初にして最大の難関。", "\nIstioではIngressは使わず、Istio独自のGatewayとVirtualServiceというリソースを用います。（後述）", "\n\n", "(0.8からこうなったらしく、２０１７年の記事を読むと混乱します。後方互換性のためか公式にもまだIngress関係のリソースが残っていますが、使わないべきです。", "参考", ")", "\n\n", "その理由としては、IngressではIstioのもつ機能が全部活用できない、とのこと。", "\n\n", "\n", "In a Kubernetes environment, the Kubernetes Ingress Resource is used to specify services that should be exposed outside the cluster. In an Istio service mesh, a better approach (which also works in both Kubernetes and other environments) is to use a different configuration model, namely Istio Gateway. A Gateway allows Istio features such as monitoring and route rules to be applied to traffic entering the cluster.", "\n", "\n\n", "本家より", "\n\n", "で、そのアオリというわけではないんですが、GCPのglobal IPがIstioでは使えません。しばらくはサポートする予定もないみたいです。", "\n\n", "暫定では、ServiceのLoadbalancerIPを用いてくれ、という回答。", "\n\n", "\n", "Per our chat, it is possible to set the load balancer IP in a LoadBalancer service (search for loadBalancerIP on ", "https://kubernetes.io/docs/concepts/services-networking/service/", ").", "\nThis can be set to a regional static IP but not global static IP - this is limited in Arcus and there's no plan to support global.", "\nThe missing part is that you have to use the actual IP address instead of a nice label like you can with an Ingress (kubernetes.io/ingress.global-static-ip-name: my-static-ip).", "\n", "\n\n", "Issue", "\n\n", "なので、Ingressで行っていた下記のような書き方はできません。SSL　terminationも別のところでやる必要があります。", "\n\n", "apiVersion", ":", " ", "extensions/v1beta1", "\n", "kind", ":", " ", "Ingress", "\n", "metadata", ":", "\n  ", "name", ":", " ", "my-app", "\n  ", "annotations", ":", "\n    ", "kubernetes.io/ingress.global-static-ip-name", ":", " ", "\"", "gad-my-app\"", " ", "# 使えない", "\n    ", "kubernetes.io/ingress.allow-http", ":", " ", "\"", "false\"", "\n    ", "ingress.gcp.kubernetes.io/pre-shared-cert", ":", " ", "\"", "myapp-cert\"　# 使えない", "\n", "\n\n", "ということで、Ingressで構成を作ってしまっていた場合、IPアドレスの受け先を変更する必要があるため、blue-greenデプロイで既存GKEアプリを移行することになるかと思います。", "\n\n", "以下、これを実行していきます。", "\n\n", "\n", "Regional IPを使って、IstioのServiceのLoadBalancerIPにpatchを当てる", "\n\n", "Istioをクラスタに導入したとき、istio-systemというnamespaceにistio-ingressgatewayというk8sのServiceリソースが作成されています。", "\nk8sのServiceでは、LoadBalancerIPを既存IPに張り替えることで、そのServiceでそのIPアドレスのトラフィックを受けることができます。これを使って、静的IPをIstio化したクラスタのnamespaceに対応させます。", "\n\n", "具体的には", "\n\n", "\n", "$ kubectl patch svc istio-ingressgateway --namespace istio-system \\", "\n  --patch '{\"spec\": { \"loadBalancerIP\": \"\" }'", "\n", "\n\n", "です。", "KnativeのReadme", "を参考にしました。", "\nこれで、IPアドレス宛に来たトラフィックは全てIstioのLBを通って来ます。", "\n\n", "\n", "SSL　termination周りのリソースをsecretとしてデプロイ", "\n\n", "Ingressで実行していたterminationは、前述のGatewayで行うことになります。まずsecretをデプロイします。", "\n\n", "apiVersion", ":", " ", "v1", "\n", "kind", ":", " ", "Secret", "\n", "metadata", ":", "\n  ", "name", ":", " ", "istio-ingressgateway-certs", " ", "# 予約語", "\n  ", "namespace", ":", " ", "istio-system", "\n", "type", ":", " ", "Opaque", "\n", "data", ":", "\n  ", "tls.key", ":", " ", "my-key-base64", "\n  ", "tls.crt", ":", " ", "my-crt-base64", "\n", "\n\n", "これで証明書などをIstioのnamespaceにデプロイして、Gatewayから呼び出します。", "\nGatewayは下記のように記述して、 ", "$ kubectl apply -f gateway.yaml", "　でデプロイします。", "\n\n", "apiVersion", ":", " ", "networking.istio.io/v1alpha3", "\n", "kind", ":", " ", "Gateway", "\n", "metadata", ":", "\n  ", "name", ":", " ", "my-gateway", "\n  ", "namespace", ":", " ", "my-app", "\n", "spec", ":", "\n  ", "selector", ":", "\n    ", "istio", ":", " ", "ingressgateway", " ", "# use istio default controller", "\n  ", "servers", ":", "\n  ", "-", " ", "port", ":", "\n      ", "number", ":", " ", "443", "\n      ", "name", ":", " ", "https", "\n      ", "protocol", ":", " ", "HTTPS", "\n    ", "tls", ":", "\n      ", "mode", ":", " ", "SIMPLE", "\n      ", "serverCertificate", ":", " ", "/etc/istio/ingressgateway-certs/tls.crt", " ", "# 合わせる", "\n      ", "privateKey", ":", " ", "/etc/istio/ingressgateway-certs/tls.key", " ", "# 合わせる", "\n    ", "hosts", ":", "\n    ", "-", " ", "dev.my-app.com", "\n", "\n\n", "このあたりは", "本家を参照", "すると出てきます。", "\n\n", "Gatewayはあくまでもトラフィックを受けるためだけのリソースで、受けたリソースをどこに流すかはVirtualServiceが担当します。", "\n\n", "apiVersion", ":", " ", "networking.istio.io/v1alpha3", "\n", "kind", ":", " ", "VirtualService", "\n", "metadata", ":", "\n  ", "name", ":", " ", "my-virtualservice", "\n  ", "namespace", ":", " ", "my-app", "\n", "spec", ":", "\n  ", "hosts", ":", "\n  ", "-", " ", "dev.my-app.com", "\n  ", "gateways", ":", "\n  ", "-", " ", "my-gateway", "\n  ", "http", ":", "\n  ", "-", " ", "route", ":", "\n    ", "-", " ", "destination", ":", "\n        ", "host", ":", "\n         ", "my-nginx", " ", "# my-nginxのk8s Serviceに対してトラフィックを流す", "\n        ", "port", ":", "\n          ", "number", ":", " ", "80", "\n", "\n\n", "\n", "知るべきこと2. Istio内部ではHTTP/1.0は利用できない", "\n\n", "「まだ1.0とかありえないしｗ」と思われる方もいるかもしれませんが、Nginxのproxy_passのデフォルト設定では1.0になっています。1.0のままだと、Nginxからの疎通自体はできるものの、Statusコードが426になって返ってきます。", "\n", "該当Issue", "\n\n", "Istio公式のQuickstartより。", "\n\n", "\n", "Note: The application must use HTTP/1.1 or HTTP/2.0 protocol for all its HTTP traffic because HTTP/1.0 is not supported.", "\n", "\n\n", "なので、Nginxの場合は", "\n\n", "proxy_http_version", " ", "1", ".1", ";", "\n", "\n\n", "などを定義してやる必要があります。", "\n\n", "なお、kube-dnsが適切に動作していれば、", "\n\n", "proxy_pass", "  ", "http://<service-name>.<cluster-namespace>.svc.cluster.local", "\n", "\n\n", "などは引き続きそのまま利用できます。", "\n", "本家チュートリアル内でデプロイされるサンプルアプリ", "も参考になります。", "\n\n", "\n", "知るべきこと3. APIなど外部通信は全てHostnameなどで穴あけが必要", "\n\n", "個人的に一番詰まったのはここでした。", "\nIstioでは、通信する外部ホストの全てをリストアップして記述してやる必要があります。", "\n例えば、", "pip install", "をする場合は", "pypi.org", "、google apiを利用する場合は", "www.googleapi.com", "など。", "\n詳細は", "こちらの本家記事", "を読まれることをおすすめします。", "\n\n", "今回想定しているアプリでは、Google Cloud Storageと通信するので、利用するAPIのホストとプロトコルは下記の２つ。", "\n\n", "https://storage.googleapi.com\nhttp://metadata.google.internal\n", "\n\n", "しかしながら、metadata.google.internalには罠があり、生IPを記述しないとcloud storage apiが使えないという問題が。", "\n", "該当Issue", "\n\n", "一方で、生IPではなくA recordを要求する場合もあるようです。挙動がよくわからないですが…。", "\n自分が直面した事象としては、 GKEのVMのdefault credentialsを取得する際に", "\n\n", "\n", "503 Failed to retrieve", "\n", "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/?recursive=true", "\n", "\n\n", "のようなエラーが表示されてしまったのですが、これはFQDNを併記することで解決しました。", "\n\n", "これらを用いて、下記のように記述して", "kubectl apply -f external.yaml", "　などでデプロイします。", "\n\n", "apiVersion", ":", " ", "networking.istio.io/v1alpha3", "\n", "kind", ":", " ", "ServiceEntry", " ", "# Egress相当の役割をもつリソース", "\n", "metadata", ":", "\n  ", "name", ":", " ", "external-google-api", "\n  ", "namespace", ":", " ", "my-app", "\n", "spec", ":", "\n  ", "hosts", ":", "\n  ", "-", " ", "\"", "*.googleapis.com\"", " ", "# wildcardが使える", "\n  ", "-", " ", "169.254.169.254", " ", "# metadata.google.internalのIPアドレス", "\n  ", "-", " ", "\"", "metadata.google.internal\"", " ", "# 併記", "\n  ", "location", ":", " ", "MESH_EXTERNAL", "\n  ", "ports", ":", "\n  ", "-", " ", "number", ":", " ", "443", "\n    ", "name", ":", " ", "https", "\n    ", "protocol", ":", " ", "HTTPS", "\n  ", "-", " ", "number", ":", " ", "80　#metadata.google.internalはhttpなのでこれも必要", "\n    ", "name", ":", " ", "http", "\n    ", "protocol", ":", " ", "HTTP", "\n", "---", "\n", "apiVersion", ":", " ", "networking.istio.io/v1alpha3", "\n", "kind", ":", " ", "VirtualService", " ", "# ServiceEntryに対応するIngressを記述", "\n", "metadata", ":", "\n  ", "name", ":", " ", "gcs-tls", "\n  ", "namespace", ":", " ", "my-app", "\n", "spec", ":", "\n  ", "hosts", ":", "\n  ", "-", " ", "\"", "*.googleapis.com\"", "\n  ", "tls", ":", "\n  ", "-", " ", "match", ":", " ", "# 他にもhostがある場合、複数のsni_hostsとdestinationのペアを書く必要があるようだ？", "\n    ", "-", " ", "port", ":", " ", "443", "\n      ", "sni_hosts", ":", "\n      ", "-", " ", "\"", "storage.googleapis.com\"", "\n    ", "route", ":", "\n    ", "-", " ", "destination", ":", "\n        ", "host", ":", " ", "\"", "storage.googleapis.com\"", "\n", "---", "\n", "apiVersion", ":", " ", "networking.istio.io/v1alpha3", "\n", "kind", ":", " ", "VirtualService　", "\n", "metadata", ":", "\n  ", "name", ":", " ", "metadata-http", "\n  ", "namespace", ":", " ", "my-app", "\n", "spec", ":", "\n  ", "hosts", ":", "\n  ", "-", " ", "\"", "metadata.google.internal\"", "\n  ", "http", ":", " ", "# プロトコルがhttpの場合はこちら", "\n  ", "-", " ", "route", ":", "\n    ", "-", " ", "destination", ":", "\n        ", "host", ":", " ", "\"", "metadata.google.internal\"", "\n        ", "port", ":", "\n          ", "number", ":", " ", "80", "\n", "\n\n", "これでようやく、最初の構成のアプリケーションがIstioを導入した状態で動作するようになりました。", "\nまだまだIstio初心者ですが、これから知見を貯めていきます。", "\n\n", "本記事は", "元記事", "の転載です。", "\n"], "code": ["apiVersion", ":", " ", "extensions/v1beta1", "\n", "kind", ":", " ", "Ingress", "\n", "metadata", ":", "\n  ", "name", ":", " ", "my-app", "\n  ", "annotations", ":", "\n    ", "kubernetes.io/ingress.global-static-ip-name", ":", " ", "\"", "gad-my-app\"", " ", "# 使えない", "\n    ", "kubernetes.io/ingress.allow-http", ":", " ", "\"", "false\"", "\n    ", "ingress.gcp.kubernetes.io/pre-shared-cert", ":", " ", "\"", "myapp-cert\"　# 使えない", "\n", "apiVersion", ":", " ", "v1", "\n", "kind", ":", " ", "Secret", "\n", "metadata", ":", "\n  ", "name", ":", " ", "istio-ingressgateway-certs", " ", "# 予約語", "\n  ", "namespace", ":", " ", "istio-system", "\n", "type", ":", " ", "Opaque", "\n", "data", ":", "\n  ", "tls.key", ":", " ", "my-key-base64", "\n  ", "tls.crt", ":", " ", "my-crt-base64", "\n", "apiVersion", ":", " ", "networking.istio.io/v1alpha3", "\n", "kind", ":", " ", "Gateway", "\n", "metadata", ":", "\n  ", "name", ":", " ", "my-gateway", "\n  ", "namespace", ":", " ", "my-app", "\n", "spec", ":", "\n  ", "selector", ":", "\n    ", "istio", ":", " ", "ingressgateway", " ", "# use istio default controller", "\n  ", "servers", ":", "\n  ", "-", " ", "port", ":", "\n      ", "number", ":", " ", "443", "\n      ", "name", ":", " ", "https", "\n      ", "protocol", ":", " ", "HTTPS", "\n    ", "tls", ":", "\n      ", "mode", ":", " ", "SIMPLE", "\n      ", "serverCertificate", ":", " ", "/etc/istio/ingressgateway-certs/tls.crt", " ", "# 合わせる", "\n      ", "privateKey", ":", " ", "/etc/istio/ingressgateway-certs/tls.key", " ", "# 合わせる", "\n    ", "hosts", ":", "\n    ", "-", " ", "dev.my-app.com", "\n", "apiVersion", ":", " ", "networking.istio.io/v1alpha3", "\n", "kind", ":", " ", "VirtualService", "\n", "metadata", ":", "\n  ", "name", ":", " ", "my-virtualservice", "\n  ", "namespace", ":", " ", "my-app", "\n", "spec", ":", "\n  ", "hosts", ":", "\n  ", "-", " ", "dev.my-app.com", "\n  ", "gateways", ":", "\n  ", "-", " ", "my-gateway", "\n  ", "http", ":", "\n  ", "-", " ", "route", ":", "\n    ", "-", " ", "destination", ":", "\n        ", "host", ":", "\n         ", "my-nginx", " ", "# my-nginxのk8s Serviceに対してトラフィックを流す", "\n        ", "port", ":", "\n          ", "number", ":", " ", "80", "\n", "proxy_http_version", " ", "1", ".1", ";", "\n", "proxy_pass", "  ", "http://<service-name>.<cluster-namespace>.svc.cluster.local", "\n", "https://storage.googleapi.com\nhttp://metadata.google.internal\n", "apiVersion", ":", " ", "networking.istio.io/v1alpha3", "\n", "kind", ":", " ", "ServiceEntry", " ", "# Egress相当の役割をもつリソース", "\n", "metadata", ":", "\n  ", "name", ":", " ", "external-google-api", "\n  ", "namespace", ":", " ", "my-app", "\n", "spec", ":", "\n  ", "hosts", ":", "\n  ", "-", " ", "\"", "*.googleapis.com\"", " ", "# wildcardが使える", "\n  ", "-", " ", "169.254.169.254", " ", "# metadata.google.internalのIPアドレス", "\n  ", "-", " ", "\"", "metadata.google.internal\"", " ", "# 併記", "\n  ", "location", ":", " ", "MESH_EXTERNAL", "\n  ", "ports", ":", "\n  ", "-", " ", "number", ":", " ", "443", "\n    ", "name", ":", " ", "https", "\n    ", "protocol", ":", " ", "HTTPS", "\n  ", "-", " ", "number", ":", " ", "80　#metadata.google.internalはhttpなのでこれも必要", "\n    ", "name", ":", " ", "http", "\n    ", "protocol", ":", " ", "HTTP", "\n", "---", "\n", "apiVersion", ":", " ", "networking.istio.io/v1alpha3", "\n", "kind", ":", " ", "VirtualService", " ", "# ServiceEntryに対応するIngressを記述", "\n", "metadata", ":", "\n  ", "name", ":", " ", "gcs-tls", "\n  ", "namespace", ":", " ", "my-app", "\n", "spec", ":", "\n  ", "hosts", ":", "\n  ", "-", " ", "\"", "*.googleapis.com\"", "\n  ", "tls", ":", "\n  ", "-", " ", "match", ":", " ", "# 他にもhostがある場合、複数のsni_hostsとdestinationのペアを書く必要があるようだ？", "\n    ", "-", " ", "port", ":", " ", "443", "\n      ", "sni_hosts", ":", "\n      ", "-", " ", "\"", "storage.googleapis.com\"", "\n    ", "route", ":", "\n    ", "-", " ", "destination", ":", "\n        ", "host", ":", " ", "\"", "storage.googleapis.com\"", "\n", "---", "\n", "apiVersion", ":", " ", "networking.istio.io/v1alpha3", "\n", "kind", ":", " ", "VirtualService　", "\n", "metadata", ":", "\n  ", "name", ":", " ", "metadata-http", "\n  ", "namespace", ":", " ", "my-app", "\n", "spec", ":", "\n  ", "hosts", ":", "\n  ", "-", " ", "\"", "metadata.google.internal\"", "\n  ", "http", ":", " ", "# プロトコルがhttpの場合はこちら", "\n  ", "-", " ", "route", ":", "\n    ", "-", " ", "destination", ":", "\n        ", "host", ":", " ", "\"", "metadata.google.internal\"", "\n        ", "port", ":", "\n          ", "number", ":", " ", "80", "\n"]},
{"title": ["Raspberry Pi 3 B+ のCentOS7.5にffmpeg4.0をビルド/インストール メモ"], "body": ["\n", "\n", "概要", "\n\n", "Raspberry Pi 3 B+ + CentOSでのffmpegをビルドを行った。", "\nRaspberry Pi 2でビルドをした1年半以上前とトラブルが割と変わっていたので、", "\n通しでの備忘録。", "\n(と言うかRaspberry Pi3 + CentOSの情報が少ない)", "\n\n", "\n", "環境", "\n\n", "\n", "Raspberry Pi 3 B+", "\n", "CentOS 7.5 (1804 armhfp Minimal image for RaspberryPi 2/3)", "\n", "/usr/local/src でビルドを行う (PREFIXは使わない)", "\n", "\n\n", "\n", "要約", "\n\n", "\n", "yum(標準リポジトリ)からinstall", "\n\n", "\n", "\n", "\n", "library", "\n", "packages", "\n", "\n", "\n", "\n", "\n", "nasm", "\n", "nasm", "\n", "\n", "\n", "bzip2", "\n", "bzip2 bzip2-libs bzip2-devel", "\n", "\n", "\n", "libgsm", "\n", "gsm gsm-devel gsm-tools", "\n", "\n", "\n", "libogg", "\n", "libogg libogg-devel libogg-devel-docs", "\n", "\n", "\n", "libvorbis", "\n", "libvorbis libvorbis-devel libvorbis-devel-docs vorbis-tools", "\n", "\n", "\n", "libtheora", "\n", "libtheora libtheora-devel libtheora-devel-docs", "\n", "\n", "\n", "speex", "\n", "speex speex-devel speex-tools", "\n", "\n", "\n", "libpulse", "\n", "pulseaudio-libs pulseaudio-libs-devel pulseaudio-libs-glib2", "\n", "\n", "\n", "opus", "\n", "\n", "opus", " ", "opus-devel", " ", "※ 1.0.2では古いのでソースからbuildする", "\n", "\n", "\n", "libvpx", "\n", "\n", "libvpx", " ", "libvpx-devel libvpx-utils", " ", "※ 1.3.0では古いのでソースからbuildする", "\n", "\n", "\n", "\n\n", "\n", "yum(epel)からinstall", "\n\n", "\n", "\n", "\n", "library", "\n", "packages", "\n", "\n", "\n", "\n", "\n", "yasm", "\n", "yasm yasm-devel", "\n", "\n", "\n", "soxr", "\n", "soxr soxr-devel", "\n", "\n", "\n", "lame", "\n", "lame lame-devel lame-libs lame-mp3", "\n", "\n", "\n", "openjpeg2", "\n", "openjpeg2 openjpeg2-devel openjpeg2-tools", "\n", "\n", "\n", "\n\n", "\n", "sourceからbuild", "\n\n", "\n", "\n", "\n", "library", "\n", "URL", "\n", "\n", "\n", "\n", "\n", "libfdk_aac", "\n", "https://sourceforge.net/projects/opencore-amr/files/fdk-aac/fdk-aac-0.1.6.tar.gz", "\n", "\n", "\n", "xvidcore", "\n", "https://downloads.xvid.com/downloads/xvidcore-1.3.5.tar.gz", "\n", "\n", "\n", "libopus", "\n", "git://github.com/xiph/opus.git", "\n", "\n", "\n", "libass", "\n", "https://github.com/libass/libass.git", "\n", "\n", "\n", "libx264", "\n", "https://git.videolan.org/git/x264.git", "\n", "\n", "\n", "libx265", "\n", "https://bitbucket.org/multicoreware/x265", "\n", "\n", "\n", "libvpx", "\n", "https://chromium.googlesource.com/webm/libvpx", "\n", "\n", "\n", "ffmpeg", "\n", "git://github.com/ffmpeg/ffmpeg", "\n", "\n", "\n", "\n\n", "\n", "手順", "\n\n", "\n", "手順①：yum で必要なライブラリをインストール", "\n\n", "上述ほか、適宜必用なパッケージ(ライブラリ)をインストールする。", "\n\n", "\n", "手順②：ライブラリをソースからビルドしてインストール", "\n\n", "\n", "libfdk_aac", "\n\n", "# cd /usr/local/src\n# wget https://sourceforge.net/projects/opencore-amr/files/fdk-aac/fdk-aac-0.1.6.tar.gz\n# tar -xvf --no-same-owner fdk-aac-0.1.6.tar.gz\n# cd fdk-aac-0.1.6\n# autoreconf -fiv\n# ./configure --enable-shared\n# make -j2\n# make install\n# make clean\n", "\n\n", "\n", "xvidcore", "\n\n", "# cd /usr/local/src\n# wget https://downloads.xvid.com/downloads/xvidcore-1.3.5.tar.gz\n# tar -xvf --no-same-owner xvidcore-1.3.5.tar.gz\n# cd xvidcore\n# cd build/generic\n# autoreconf -fiv\n# ./configure\n# make -j2\n# make install\n# make clean\n", "\n\n", "\n", "libass", "\n\n", "# cd /usr/local/src\n# git clone https://github.com/libass/libass.git --depth 1\n# cd libass\n# autoreconf -fiv\n# ./configure --enable-shared\n# make -j2\n# make install\n# make clean\n", "\n\n", "\n", "opus", "\n\n", "\n", "公式yumリポジトリの1.0.2では古いため、最新ソースからビルドする。", "\n", "\n\n", "# cd /usr/local/src\n# git clone git://github.com/xiph/opus.git --depth 1\n# cd opus\n# ./autogen.sh\n# ./configure --enable-shared --enable-pic\n# make -j2\n# make install\n# make clean\n", "\n\n", "\n", "x264", "\n\n", "# cd /usr/local/src\n# git clone https://git.videolan.org/git/x264.git --depth 1\n# cd x264\n# ./configure --enable-static --enable-pic\n# make -j2\n# make install\n# make clean\n", "\n\n", "\n", "x265", "\n\n", "\n", "公式yumリポジトリの1.3.0では古いため、ソースからビルドする。", "\n", "リポジトリ最新のリビジョンではビルド出来ない。", "\nstable版のリビジョン：12009(2018/03/22 v2.7.x) 以前ではビルドが通る。", "\n(今回は ", "11991", " を利用)", "\n", "CGGのバグによりbuildエラーになるため、 ", "CMakeLists.txt", " を修正してCPUアーキテクチャを直指定する", "\n( ", "cortex-a53", " は無いともGCCに怒られるので、 ", "cortex-a7", " を指定)", "\n・Umbrella　RaspberryPi　Pi3でlibx265 リベンジ", "\n", "http://wbbwbb.blog83.fc2.com/blog-entry-244.html", "\n", "\n", "\n\n", "\n", "\n", "error", "\n", "[  2%] [  2%] Building CXX object common/CMakeFiles/common.dir/arm/asm-primitives.cpp.o\nBuilding CXX object encoder/CMakeFiles/encoder.dir/analysis.cpp.o\n*** Error in `/bin/c++': double free or corruption (!prev): 0x00fcf8d8 ***\n", "\n", "\n\n", "make[2]: *** [encoder/CMakeFiles/encoder.dir/analysis.cpp.o] エラー 134\nmake[1]: make[2]: *** [encoder/CMakeFiles/encoder.dir/all] エラー 2*** [common/CMakeFiles/common.dir/arm/asm-primitives.cpp.o] エラー 134\nmake[1]: *** 未完了のジョブを待っています....\nmake[1]: *** [common/CMakeFiles/common.dir/all] エラー 2\nmake: *** [all] エラー 2\n", "\n", "\n\n", "\n", "ビルド可能なバージョンのリビジョン", "\n\n", "\n", "\n", "\n", "revision", "\n", "コミット日時", "\n", "version", "\n", "ビルド可否", "\n", "備考", "\n", "\n", "\n", "\n", "\n", "12416", "\n", "2018/09/09", "\n", "v2.8.x", "\n", "NG", "\n", "make エラー", "\n", "\n", "\n", "12346", "\n", "2018/05/21", "\n", "v2.8", "\n", "NG", "\n", "make エラー", "\n", "\n", "\n", "11991", "\n", "2018/02/21", "\n", "v2.7", "\n", "OK", "\n", "※ ./source/CMakeLists.txt の修正あり", "\n", "\n", "\n", "11729", "\n", "2017/03/10", "\n", "v2.3", "\n", "OK", "\n", "※ ./source/CMakeLists.txt の修正あり", "\n", "\n", "\n", "\n\n", "\n", "ビルド可能なstableのリビジョン確認", "\n\n", "\n", "\n", "\n", "revision", "\n", "コミット日時", "\n", "version", "\n", "ビルド可否", "\n", "備考", "\n", "\n", "\n", "\n", "\n", "12340", "\n", "2018/05/02", "\n", "v2.7.x", "\n", "NG", "\n", "make エラー", "\n", "\n", "\n", "12336", "\n", "2018/04/30", "\n", "v2.7.x", "\n", "NG", "\n", "make エラー", "\n", "\n", "\n", "12329", "\n", "2018/04/12", "\n", "v2.7.x", "\n", "NG", "\n", "make エラー", "\n", "\n", "\n", "12009", "\n", "2018/03/22", "\n", "v2.7.x", "\n", "OK", "\n", "※ ./source/CMakeLists.txt の修正あり", "\n", "\n", "\n", "11993", "\n", "2018/03/01", "\n", "v2.7.x", "\n", "OK", "\n", "※ ./source/CMakeLists.txt の修正あり", "\n", "\n", "\n", "\n\n", "# cd /usr/local/src\n# hg clone https://bitbucket.org/multicoreware/x265\n# cd x265\n# hg update 11991\n# vi ./source/CMakeLists.txt\n", "\n\n", "\n", "./source/MakeLists.txt", "\n", "    ", "if", "(", "ARM AND CROSS_COMPILE_ARM", ")", "\n        ", "set", "(", "ARM_ARGS ", "-march", "=", "armv6 ", "-mfloat-abi", "=", "soft ", "-mfpu", "=", "vfp ", "-marm", " ", "-fPIC", ")", "\n    elseif", "(", "ARM", ")", "\n        find_package", "(", "Neon", ")", "\n        ", "if", "(", "CPU_HAS_NEON", ")", "\n            ", "# modify(native => cortex-a7, neon => neon-vfpv4)", "\n            ", "# set(ARM_ARGS -mcpu=native -mfloat-abi=hard -mfpu=neon -marm -fPIC)", "\n            ", "set", "(", "ARM_ARGS ", "-mcpu", "=", "cortex-a7 ", "-mfloat-abi", "=", "hard ", "-mfpu", "=", "neon-vfpv4 ", "-marm", " ", "-fPIC", ")", "\n            add_definitions", "(", "-DHAVE_NEON", ")", "\n        ", "else", "()", "\n            ", "set", "(", "ARM_ARGS ", "-mcpu", "=", "native ", "-mfloat-abi", "=", "hard ", "-mfpu", "=", "vfp ", "-marm", ")", "\n        endif", "()", "\n    endif", "()", "\n", "\n", "\n\n", "# cd build/linux\n# ./make-Makefiles.bash\n    ENABLE_PIC    -> ON\n    ENABLE_SHARED -> ON\n    Press [c] to configure\n    Press [g] to generate\n# make -j2\n# make install\n# make clean\n", "\n\n", "\n", "libvpx", "\n\n", "\n", "公式リポジトリの1.3.0では古いため、ソースからビルドする。\n(ffmpegのビルドには1.4以上が必要)", "\n", "./Configureでエラーになる -> targetに ", "armv7-linux-gcc", " を指定する", "\n", "\n\n", "\n", "\n", "error", "\n", " Unable to invoke compiler: gcc  -march=armv7-a -mfloat-abi=softfp -mfpu=neon -DNDEBUG -O3 -fPIC -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wimplicit-function-declaration -Wuninitialized -Wunused -Wextra -Wundef -Wframe-larger-than=52000\n", "\n", "\n", "\n\n", "# cd /usr/local/src\n# git clone https://chromium.googlesource.com/webm/libvpx\n# cd libvpx\n# ./configure --enable-shared --enable-pic --target=armv7-linux-gcc\n# make -j2\n# make install\n# make clean\n", "\n\n", "\n", "手順③：ffmpegをソースからビルドしてインストール", "\n\n", "\n", "ffmpeg", "\n\n", "\n", "x265使用時はconfigureで ", "--extra-libs=-lpthread", " を指定して ", "pthread", " を無効にする。", "\n・multicoreware / x265 / 課題 / #371 - x265 not found using pkg-config - Bitbucket", "\n", "https://bitbucket.org/multicoreware/x265/issues/371/x265-not-found-using-pkg-config", "\n", "\n", "\n\n", "\n", "\n", "error", "\n", "gcc -L/home/werner/ffmpeg_build/lib -Wl,--as-needed -Wl,-z,noexecstack -I/home/werner/ffmpeg_build/include -L/home/werner/ffmpeg_build/lib -o /tmp/ffconf.mRzqLK9Z/test /tmp/ffconf.mRzqLK9Z/test.o -lx265 -lstdc++ -lm -lrt -ldl -lnuma\n/home/werner/ffmpeg_build/lib/libx265.a(threading.cpp.o): In function `x265::Thread::start()':\nthreading.cpp:(.text+0x35): undefined reference to `pthread_create'\n/home/werner/ffmpeg_build/lib/libx265.a(threading.cpp.o): In function `x265::Thread::stop()':\nthreading.cpp:(.text+0x63): undefined reference to `pthread_join'\ncollect2: error: ld returned 1 exit status\nERROR: x265 not found using pkg-config\n", "\n", "\n", "\n\n", "# ldconfig\n# cd /usr/local/src\n# git clone git://github.com/ffmpeg/ffmpeg --depth 1\n# cd ffmpeg\n# PKG_CONFIG_PATH=/usr/local/lib/pkgconfig \\\n  ./configure \\\n  --pkg-config-flags=\"--static\" \\\n  --enable-static \\\n  --enable-shared \\\n  --disable-debug \\\n  --disable-stripping \\\n  --enable-nonfree \\\n  --enable-libfreetype \\\n  --enable-bzlib \\\n  --enable-libgsm \\\n  --enable-libmp3lame \\\n  --enable-pic \\\n  --enable-libopenjpeg \\\n  --enable-libfdk-aac \\\n  --enable-libopus \\\n  --enable-libvorbis \\\n  --enable-libsoxr \\\n  --enable-libpulse \\\n  --enable-libspeex \\\n  --enable-libtheora \\\n  --enable-libvpx \\\n  --enable-libass \\\n  --enable-libx264 \\\n  --enable-libx265 \\\n  --enable-libxvid \\\n  --enable-gpl \\\n  --extra-libs=-lpthread\n\n# make -j2\n# make install\n# make distclean\n", "\n\n", "\n", "その他", "\n\n", "\n", "ffserverがない ⇒ ffmpeg 4.0から削除されたとのこと", "\n・FFmpeg/Changelog at master · FFmpeg/FFmpeg", "\n", "https://github.com/FFmpeg/FFmpeg/blob/master/Changelog", "\n", "\n", "\n\n", "\n", "\n", "Changelog", "\n", "version 4.0:\n- Bitstream filters for editing metadata in H.264, HEVC and MPEG-2 streams\n- Dropped support for OpenJPEG versions 2.0 and below. Using OpenJPEG now\n", "\n", "\n\n", "- Removed the ffserver program\n- Removed the ffmenc and ffmdec muxer and demuxer\n", "\n", "\n\n", "\n", "ffmpegのビルド・インストールは出来たが動かない ⇒ 共有ライブラリにパスを追加する。", "\n", "\n\n", "\n", "\n", "error", "\n", "ffmpeg: error while loading shared libraries: libavdevice.so.58: cannot open shared object file: No such file or directory\n", "\n", "\n", "\n\n", "# touch /etc/ld.so.conf.d/usr-local.conf\n# vi /etc/ld.so.conf.d/usr-local.conf\n", "\n\n", "\n", "usr-local.conf", "\n", "/usr/local/lib\n", "\n", "\n\n", "# ldconfig\n", "\n\n", "\n", "pthread無効化にして良いの？ ⇒ 誰か教えてください。。。(むしろそこまでしてx265を有効にする必要ある？)", "\n", "\n\n", "\n", "参考(謝辞)", "\n\n", "\n", "ffmpegをスタティックビルドする（CentOS6） - Qiita", "\n", "https://qiita.com/takakiku/items/4f129a8859d99f6be2db", "\n", "LinuxでFFmpegをほぼ全自動でビルドする（CentOS、Ubuntu等に対応） | 自分に負けないラボラトリー", "\n", "https://www.jifu-labo.net/2015/09/ffmpeg_build/", "\n", "Umbrella　RaspberryPi　Pi3でlibx265 リベンジ", "\n", "http://wbbwbb.blog83.fc2.com/blog-entry-244.html", "\n", "[FFmpeg] ffmpeg に libx265 をリンクする", "\n", "https://qiita.com/pb_tmz08/items/29165f4c3ef9bc4285ab", "\n", "CentOS7 ffmpegをソースからインストール - わすれないうちにメモしよう", "\n", "http://d.hatena.ne.jp/kt_hiro/20150101/1420094609", "\n", "3.18.4 ARMオプション | GCC 7 入門リファレンス | サンプルコード [日本語]", "\n", "https://code-examples.net/ja/docs/gcc~7/arm-options", "\n", "Compiling with libvpx support - wiki", "\n", "http://wiki.webmproject.org/ffmpeg/building-with-libvpx", "\n", "multicoreware / x265 / 課題 / #371 - x265 not found using pkg-config - Bitbucket", "\n", "https://bitbucket.org/multicoreware/x265/issues/371/x265-not-found-using-pkg-config", "\n", "LinuxでIntel QSVを使ったH.264ハードウェアエンコード（CentOS7＋ffmpeg） | Kung Noi Blog", "\n", "http://www.goodnai.com/blog/2015/11/24/linux%E3%81%A7intel-qsv%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%9Fh-264%E3%83%8F%E3%83%BC%E3%83%89%E3%82%A6%E3%82%A7%E3%82%A2%E3%82%A8%E3%83%B3%E3%82%B3%E3%83%BC%E3%83%89%EF%BC%88centos7%EF%BC%8Bffmpeg/", "\n", "Amazon Linux 2013.09 に FFmpeg をインストールする - Qiita", "\n", "https://qiita.com/nifuramu/items/ba86a9940ddf4379765b", "\n", "\n"], "code": ["# cd /usr/local/src\n# wget https://sourceforge.net/projects/opencore-amr/files/fdk-aac/fdk-aac-0.1.6.tar.gz\n# tar -xvf --no-same-owner fdk-aac-0.1.6.tar.gz\n# cd fdk-aac-0.1.6\n# autoreconf -fiv\n# ./configure --enable-shared\n# make -j2\n# make install\n# make clean\n", "# cd /usr/local/src\n# wget https://downloads.xvid.com/downloads/xvidcore-1.3.5.tar.gz\n# tar -xvf --no-same-owner xvidcore-1.3.5.tar.gz\n# cd xvidcore\n# cd build/generic\n# autoreconf -fiv\n# ./configure\n# make -j2\n# make install\n# make clean\n", "# cd /usr/local/src\n# git clone https://github.com/libass/libass.git --depth 1\n# cd libass\n# autoreconf -fiv\n# ./configure --enable-shared\n# make -j2\n# make install\n# make clean\n", "# cd /usr/local/src\n# git clone git://github.com/xiph/opus.git --depth 1\n# cd opus\n# ./autogen.sh\n# ./configure --enable-shared --enable-pic\n# make -j2\n# make install\n# make clean\n", "# cd /usr/local/src\n# git clone https://git.videolan.org/git/x264.git --depth 1\n# cd x264\n# ./configure --enable-static --enable-pic\n# make -j2\n# make install\n# make clean\n", "[  2%] [  2%] Building CXX object common/CMakeFiles/common.dir/arm/asm-primitives.cpp.o\nBuilding CXX object encoder/CMakeFiles/encoder.dir/analysis.cpp.o\n*** Error in `/bin/c++': double free or corruption (!prev): 0x00fcf8d8 ***\n", "make[2]: *** [encoder/CMakeFiles/encoder.dir/analysis.cpp.o] エラー 134\nmake[1]: make[2]: *** [encoder/CMakeFiles/encoder.dir/all] エラー 2*** [common/CMakeFiles/common.dir/arm/asm-primitives.cpp.o] エラー 134\nmake[1]: *** 未完了のジョブを待っています....\nmake[1]: *** [common/CMakeFiles/common.dir/all] エラー 2\nmake: *** [all] エラー 2\n", "# cd /usr/local/src\n# hg clone https://bitbucket.org/multicoreware/x265\n# cd x265\n# hg update 11991\n# vi ./source/CMakeLists.txt\n", "    ", "if", "(", "ARM AND CROSS_COMPILE_ARM", ")", "\n        ", "set", "(", "ARM_ARGS ", "-march", "=", "armv6 ", "-mfloat-abi", "=", "soft ", "-mfpu", "=", "vfp ", "-marm", " ", "-fPIC", ")", "\n    elseif", "(", "ARM", ")", "\n        find_package", "(", "Neon", ")", "\n        ", "if", "(", "CPU_HAS_NEON", ")", "\n            ", "# modify(native => cortex-a7, neon => neon-vfpv4)", "\n            ", "# set(ARM_ARGS -mcpu=native -mfloat-abi=hard -mfpu=neon -marm -fPIC)", "\n            ", "set", "(", "ARM_ARGS ", "-mcpu", "=", "cortex-a7 ", "-mfloat-abi", "=", "hard ", "-mfpu", "=", "neon-vfpv4 ", "-marm", " ", "-fPIC", ")", "\n            add_definitions", "(", "-DHAVE_NEON", ")", "\n        ", "else", "()", "\n            ", "set", "(", "ARM_ARGS ", "-mcpu", "=", "native ", "-mfloat-abi", "=", "hard ", "-mfpu", "=", "vfp ", "-marm", ")", "\n        endif", "()", "\n    endif", "()", "\n", "# cd build/linux\n# ./make-Makefiles.bash\n    ENABLE_PIC    -> ON\n    ENABLE_SHARED -> ON\n    Press [c] to configure\n    Press [g] to generate\n# make -j2\n# make install\n# make clean\n", " Unable to invoke compiler: gcc  -march=armv7-a -mfloat-abi=softfp -mfpu=neon -DNDEBUG -O3 -fPIC -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -Wall -Wdeclaration-after-statement -Wdisabled-optimization -Wpointer-arith -Wtype-limits -Wcast-qual -Wvla -Wimplicit-function-declaration -Wuninitialized -Wunused -Wextra -Wundef -Wframe-larger-than=52000\n", "# cd /usr/local/src\n# git clone https://chromium.googlesource.com/webm/libvpx\n# cd libvpx\n# ./configure --enable-shared --enable-pic --target=armv7-linux-gcc\n# make -j2\n# make install\n# make clean\n", "gcc -L/home/werner/ffmpeg_build/lib -Wl,--as-needed -Wl,-z,noexecstack -I/home/werner/ffmpeg_build/include -L/home/werner/ffmpeg_build/lib -o /tmp/ffconf.mRzqLK9Z/test /tmp/ffconf.mRzqLK9Z/test.o -lx265 -lstdc++ -lm -lrt -ldl -lnuma\n/home/werner/ffmpeg_build/lib/libx265.a(threading.cpp.o): In function `x265::Thread::start()':\nthreading.cpp:(.text+0x35): undefined reference to `pthread_create'\n/home/werner/ffmpeg_build/lib/libx265.a(threading.cpp.o): In function `x265::Thread::stop()':\nthreading.cpp:(.text+0x63): undefined reference to `pthread_join'\ncollect2: error: ld returned 1 exit status\nERROR: x265 not found using pkg-config\n", "# ldconfig\n# cd /usr/local/src\n# git clone git://github.com/ffmpeg/ffmpeg --depth 1\n# cd ffmpeg\n# PKG_CONFIG_PATH=/usr/local/lib/pkgconfig \\\n  ./configure \\\n  --pkg-config-flags=\"--static\" \\\n  --enable-static \\\n  --enable-shared \\\n  --disable-debug \\\n  --disable-stripping \\\n  --enable-nonfree \\\n  --enable-libfreetype \\\n  --enable-bzlib \\\n  --enable-libgsm \\\n  --enable-libmp3lame \\\n  --enable-pic \\\n  --enable-libopenjpeg \\\n  --enable-libfdk-aac \\\n  --enable-libopus \\\n  --enable-libvorbis \\\n  --enable-libsoxr \\\n  --enable-libpulse \\\n  --enable-libspeex \\\n  --enable-libtheora \\\n  --enable-libvpx \\\n  --enable-libass \\\n  --enable-libx264 \\\n  --enable-libx265 \\\n  --enable-libxvid \\\n  --enable-gpl \\\n  --extra-libs=-lpthread\n\n# make -j2\n# make install\n# make distclean\n", "version 4.0:\n- Bitstream filters for editing metadata in H.264, HEVC and MPEG-2 streams\n- Dropped support for OpenJPEG versions 2.0 and below. Using OpenJPEG now\n", "- Removed the ffserver program\n- Removed the ffmenc and ffmdec muxer and demuxer\n", "ffmpeg: error while loading shared libraries: libavdevice.so.58: cannot open shared object file: No such file or directory\n", "# touch /etc/ld.so.conf.d/usr-local.conf\n# vi /etc/ld.so.conf.d/usr-local.conf\n", "/usr/local/lib\n", "# ldconfig\n"]},
{"title": ["NVIDIA DIGITSを使った画像分類モデルの作成"], "body": ["\n", "\n", "目的", "\n\n", "前回構築したDIGITS環境", "を使って、画像を分類するモデルを作成する。", "\n※", "このページ", "のDIGITSに関する部分を日本語で書いているだけです", "\n\n", "こちらの画像の下段真ん中のカスタムモデルを作成するイメージです。", "\n", "\n\n", "\n", "PC環境", "\n\n", "\n", "前回構築したDIGITS環境を参照", "\n", "\n", "$nvidia-docker ps -a", "でコンテナの状態を確認し、digitsコンテナを実行していること。再起動などの影響で停止している場合は", "$nvidia-docker start digits", "でコンテナを起動する。", "\n", "\n\n", "\n", "画像認識データセットの入手", "\n\n", "データセットは", "ILSVRC12", "を利用する。事前にディスク容量が120GB以上あることを確認すること。", "\n今回はDIGITSをdockerコンテナで実行しているため、docker run時に'-v'で指定した共有フォルダ配下にデータセットを作成する必要がある。まずは、フォルダを作成する。※usernameは適宜読み替える", "\n\n", "$", " ", "mkdir", " ", "-p", " /home/username/data/datasets/imagenet/ilsvrc12\n", "$", " ", "cd", " /home/username/data/datasets/imagenet/ilsvrc12\n", "\n\n", "以下のコマンドを実行する。（100GB程度のデータをダウンロードするので注意）", "\n\n", "$", " wget ", "--no-check-certificate", " https://nvidia.box.com/shared/static/gzr5iewf5aouhc5exhp3higw6lzhcysj.gz ", "-O", " ilsvrc12_urls.tar.gz\n", "$", " ", "tar", " ", "-xzvf", " ilsvrc12_urls.tar.gz\n", "$", " ", "rm ", "ilsvrc12_urls.tar.gz\n", "$", " wget https://rawgit.com/dusty-nv/jetson-inference/master/tools/imagenet-download.py\n", "$", " python imagenet-download.py ilsvrc12_urls.txt ", ".", " ", "--jobs", " 100 ", "--retry", " 3 ", "--sleep", " 0\n", "\n\n", "1000個のフォルダに画像がダウンロードされる（ILSVRC12の各クラスに1つ）。", "\nフォルダ名はクラスのsynset IDであり、クラス名と対応している。", "こちら", "で対応を確認できる。", "\n\n", "コンテナ内部で共有できているか確認する。以下のコマンドでコンテナ内部に接続し、確認する。", "\n\n", "コンテナに接続\n", "$", " nvidia-docker ", "exec", " ", "-it", " digits bash\n", "\n表示確認\n", "/workspace#", " ", "ls", " /data/datasets/imagenet/ilsvrc12/\n", "/workspace#", " ", "exit", "\n", "\n\n", "\n", "オブジェクトクラスのカスタマイズ", "\n\n", "12個のクラスごとのフォルダに分類するため、ディレクトリ構造を生成するスクリプトを実行する。", "\n以下のスクリプトで、上記の1000個のフォルダに対するシンボリックリンクを貼るディレクトリが生成される。", "\nコンテナ内部のパスでリンクを貼るため、ホスト側ではリンクが正しく動作しないが問題ない。", "\n\n", "$", " ", "cd", " /home/username/data/datasets/imagenet\n", "$", " wget https://rawgit.com/dusty-nv/jetson-inference/master/tools/imagenet-subset.sh \n", "$", " ", "chmod", " +x imagenet-subset.sh \n", "$", " ", "mkdir ", "12_classes \n", "$", " ./imagenet-subset.sh /data/datasets/imagenet/ilsvrc12 12_classes\n", "\n\n", "リンクが貼れているかどうかは以下で確認できる。", "\n\n", "コンテナに接続\n", "$", " nvidia-docker ", "exec", " ", "-it", " digits bash\n", "\n表示確認\n", "/workspace#", " ", "ls", " ", "-l", " /data/datasets/imagenet/12_classes/ball\n", "/workspace#", " ", "exit", "\n", "\n\n", "\n", "データセットをDIGITSにインポートする", "\n\n", "ブラウザで ", "http://localhost:8888", " にアクセスしてDIGITSページを開く。", "\nDatasetsのタブページを開き、ImagesドロップダウンからClassificationを選択する。", "\nログイン画面になるのでユーザー名を適当に入力する。", "\n\n", "\n\n", "以下項目を入力し、Createボタンを押してデータインポートを実行する。（約25分）", "\n\n", "\n", "Training Images: ", "/data/datasets/imagenet/12_classes", "\n", "\n", "% for validation: ", "10", "\n", "\n", "Group Name: ", "ImageNet", "\n", "\n", "Dataset Name: ", "ImageNet-ILSVRC12-subset", "\n", "\n", "\n\n", "\n\n", "\n\n", "\n", "画像分類モデルの作成", "\n\n", "DIGITSのホーム画面に戻り、Modelsのタブページを開き、ImagesドロップダウンからClassificationを選択する。", "\n\n", "\n\n", "以下項目を入力し、Createボタンを押してトレーニングを開始する。（約8時間）", "\n\n", "\n", "Select Dataset: ", "ImageNet-ILSVRC12-subset", "\n", "\n", "Subtract Mean: ", "Pixel", "\n", "\n", "Standard Networks: ", "GoogleNet", "\n", "\n", "Group Name: ", "ImageNet", "\n", "\n", "Model Name: ", "GoogleNet-ILSVRC12-subset", "\n", "\n", "\n\n", "\n", "\n\n", "（補足）", "\n以下のエラーメッセージが出る場合、GPUが古く最新のCUDAライブラリに対応していないことが考えられる。", "\ndigitsのバージョンを下げてCUDAライブラリのバージョンを下げるか、新しいGPUに交換する必要がある。", "\n\n", "Check failed: error == cudaSuccess (48 vs. 0)  no kernel image is available for execution on the device\n", "\n\n", "\n", "画像分類モデルのテスト", "\n\n", "トレーニングの結果が以下のように表示される。", "\n\n", "\n\n", "1つのエポックが終わると、好きな画像を入力して分類のテストを行うことができる。", "\n試しに、", "/data/datasets/imagenet/ilsvrc12/n02127052/n02127052_1203.jpg", "でテストする。", "\n\n", "\n\n", "結果、新しい分類モデルでは", "cat", "が100%となった。", "\n元のGoogleNet-1000モデルでは", "Lynx", "と判別されるため、新しく画像分類モデルが作成できていることがわかる。", "\n\n", "\n\n", "\n", "カスタムモデルデータを出力する", "\n\n", "組み込み機器であるJetsonで動作させるために、", "Download Model", "を押してモデルデータを出力する。", "\nJetsonからDIGITSにアクセスしてダウンロードするか、ホストPCにダウンロードしてSCPやUSBメモリ等で転送する。", "\nダウンロードしたモデルは", "tar", "コマンドで解凍しておくこと。", "\n\n", "\n\n", "\n", "参考元", "\n\n", "https://github.com/dusty-nv/jetson-inference#downloading-image-recognition-dataset", "\n"], "code": ["$", " ", "mkdir", " ", "-p", " /home/username/data/datasets/imagenet/ilsvrc12\n", "$", " ", "cd", " /home/username/data/datasets/imagenet/ilsvrc12\n", "$", " wget ", "--no-check-certificate", " https://nvidia.box.com/shared/static/gzr5iewf5aouhc5exhp3higw6lzhcysj.gz ", "-O", " ilsvrc12_urls.tar.gz\n", "$", " ", "tar", " ", "-xzvf", " ilsvrc12_urls.tar.gz\n", "$", " ", "rm ", "ilsvrc12_urls.tar.gz\n", "$", " wget https://rawgit.com/dusty-nv/jetson-inference/master/tools/imagenet-download.py\n", "$", " python imagenet-download.py ilsvrc12_urls.txt ", ".", " ", "--jobs", " 100 ", "--retry", " 3 ", "--sleep", " 0\n", "コンテナに接続\n", "$", " nvidia-docker ", "exec", " ", "-it", " digits bash\n", "\n表示確認\n", "/workspace#", " ", "ls", " /data/datasets/imagenet/ilsvrc12/\n", "/workspace#", " ", "exit", "\n", "$", " ", "cd", " /home/username/data/datasets/imagenet\n", "$", " wget https://rawgit.com/dusty-nv/jetson-inference/master/tools/imagenet-subset.sh \n", "$", " ", "chmod", " +x imagenet-subset.sh \n", "$", " ", "mkdir ", "12_classes \n", "$", " ./imagenet-subset.sh /data/datasets/imagenet/ilsvrc12 12_classes\n", "コンテナに接続\n", "$", " nvidia-docker ", "exec", " ", "-it", " digits bash\n", "\n表示確認\n", "/workspace#", " ", "ls", " ", "-l", " /data/datasets/imagenet/12_classes/ball\n", "/workspace#", " ", "exit", "\n", "Check failed: error == cudaSuccess (48 vs. 0)  no kernel image is available for execution on the device\n"]},
{"title": ["コラッソの問題をGoで実装"], "body": ["（数学的なことはよく分かっていないので悪しからず）", "\n\n", "\n", "コラッソの問題とは", "\n\n", "\n", "コラッツの問題(コラッツのもんだい、Collatz problem)は、数論の未解決問題のひとつである。1937年にローター・コラッツが問題を提示した。問題の結論の予想を指してコラッツの予想と言う。固有名詞に依拠しない表現としては3n+1問題とも言われ、初期にこの問題に取り組んだ研究者の名を冠して、角谷(かくたに)の問題、米田の予想、ウラムの予想、他にはSyracuse問題などとも呼ばれる。数学者ポール・エルデシュは「数学はまだこの種の問題に対する用意ができていない」と述べ、解決した人に500ドルを提供すると申し出た。", "\n", "\n\n", "Wikipediaより引用", "\n\n", "\n", "条件は以下のとおり", "\n\n", "\n", "任意の整数nをとる", "\n", "nが偶数の場合は2で割る", "\n", "nが奇数の場合は3を掛けて1を足す", "\n", "nが1になるまで繰り返す", "\n", "\n\n", "\n", "実装", "\n\n", "package", " ", "main", "\n\n", "import", " ", "(", "\n    ", "\"fmt\"", "\n", ")", "\n\n", "func", " ", "main", "()", " ", "{", "\n    ", "n", " ", ":=", " ", "100", "\n    ", "arr", " ", ":=", " ", "[]", "int", "{}", "\n\n    ", "fmt", ".", "Println", "(", "collatz", "(", "n", ",", " ", "arr", "))", "\n", "}", "\n\n", "func", " ", "collatz", "(", "n", " ", "int", ",", " ", "arr", " ", "[]", "int", ")", " ", "[]", "int", " ", "{", "\n    ", "arr", " ", "=", " ", "append", "(", "arr", ",", " ", "n", ")", "\n\n    ", "if", " ", "n", " ", "==", " ", "1", " ", "{", "\n        ", "return", " ", "arr", "\n    ", "}", " ", "else", " ", "if", " ", "n", "%", "2", " ", "==", " ", "0", " ", "{", "\n        ", "return", " ", "collatz", "(", "n", "/", "2", ",", " ", "arr", ")", "\n    ", "}", " ", "else", " ", "{", "\n        ", "return", " ", "collatz", "(", "3", "*", "n", "+", "1", ",", " ", "arr", ")", "\n    ", "}", "\n", "}", "\n\n", "// [100 50 25 76 38 19 58 29 88 44 22 11 34 17 52 26 13 40 20 10 5 16 8 4 2 1]", "\n", "\n"], "code": ["package", " ", "main", "\n\n", "import", " ", "(", "\n    ", "\"fmt\"", "\n", ")", "\n\n", "func", " ", "main", "()", " ", "{", "\n    ", "n", " ", ":=", " ", "100", "\n    ", "arr", " ", ":=", " ", "[]", "int", "{}", "\n\n    ", "fmt", ".", "Println", "(", "collatz", "(", "n", ",", " ", "arr", "))", "\n", "}", "\n\n", "func", " ", "collatz", "(", "n", " ", "int", ",", " ", "arr", " ", "[]", "int", ")", " ", "[]", "int", " ", "{", "\n    ", "arr", " ", "=", " ", "append", "(", "arr", ",", " ", "n", ")", "\n\n    ", "if", " ", "n", " ", "==", " ", "1", " ", "{", "\n        ", "return", " ", "arr", "\n    ", "}", " ", "else", " ", "if", " ", "n", "%", "2", " ", "==", " ", "0", " ", "{", "\n        ", "return", " ", "collatz", "(", "n", "/", "2", ",", " ", "arr", ")", "\n    ", "}", " ", "else", " ", "{", "\n        ", "return", " ", "collatz", "(", "3", "*", "n", "+", "1", ",", " ", "arr", ")", "\n    ", "}", "\n", "}", "\n\n", "// [100 50 25 76 38 19 58 29 88 44 22 11 34 17 52 26 13 40 20 10 5 16 8 4 2 1]", "\n"]},
{"title": ["[Android] GlideでcircleCrop以外のCropをする"], "body": ["\n", "\n", "はじめに", "\n\n", "URLを与えるだけで", "ImageView", "に画像が表示できるGlide便利ですよね。円形に切り抜く", "circleCrop()", "は用意されていますが、それ以外の形を利用したい場合には自分で処理を書かなければいけません。この記事では", "Drawable", "リソースを利用して切り抜く方法について説明したいと思います。", "\n\n", "Drawable", "さえ用意できれば、三日月型でも角丸でも自由自在です。", "\nソースコードは", "こちら", "からどうぞ。", "\n\n", "\n", "Custom transformations", "\n\n", "Transformation", "を継承したクラスを", "transforms()", "で渡すことで、Glideで読み込む画像にオリジナルの効果を付け足すことが出来ます。", "公式ドキュメント", "と", "circleCrop()", "のソースコードを参考にして書いていきます。", "\n\n", "BitmapTransformation", "を継承したものがサンプルとして示されていますが、", "Drawable", "をリソースから取得するための", "Context", "が必要となることを考慮して、", "BitmapTransformation", "で実装されている", "Transformation<Bitmap>", "を直接実装したクラスを作ります。", "BitmapTransformation", "の実装は以下のようになっているので", "\n\n", "public", " ", "abstract", " ", "class", " ", "BitmapTransformation", " ", "implements", " ", "Transformation", "<", "Bitmap", ">", " ", "{", "\n\n  ", "@NonNull", "\n  ", "@Override", "\n  ", "public", " ", "final", " ", "Resource", "<", "Bitmap", ">", " ", "transform", "(", "\n      ", "@NonNull", " ", "Context", " ", "context", ",", " ", "@NonNull", " ", "Resource", "<", "Bitmap", ">", " ", "resource", ",", " ", "int", " ", "outWidth", ",", " ", "int", " ", "outHeight", ")", " ", "{", "\n    ", "if", " ", "(!", "Util", ".", "isValidDimensions", "(", "outWidth", ",", " ", "outHeight", "))", " ", "{", "\n      ", "throw", " ", "new", " ", "IllegalArgumentException", "(", "\n          ", "\"Cannot apply transformation on width: \"", " ", "+", " ", "outWidth", " ", "+", " ", "\" or height: \"", " ", "+", " ", "outHeight", "\n              ", "+", " ", "\" less than or equal to zero and not Target.SIZE_ORIGINAL\"", ");", "\n    ", "}", "\n    ", "BitmapPool", " ", "bitmapPool", " ", "=", " ", "Glide", ".", "get", "(", "context", ").", "getBitmapPool", "();", "\n    ", "Bitmap", " ", "toTransform", " ", "=", " ", "resource", ".", "get", "();", "\n    ", "int", " ", "targetWidth", " ", "=", " ", "outWidth", " ", "==", " ", "Target", ".", "SIZE_ORIGINAL", " ", "?", " ", "toTransform", ".", "getWidth", "()", " ", ":", " ", "outWidth", ";", "\n    ", "int", " ", "targetHeight", " ", "=", " ", "outHeight", " ", "==", " ", "Target", ".", "SIZE_ORIGINAL", " ", "?", " ", "toTransform", ".", "getHeight", "()", " ", ":", " ", "outHeight", ";", "\n    ", "Bitmap", " ", "transformed", " ", "=", " ", "transform", "(", "bitmapPool", ",", " ", "toTransform", ",", " ", "targetWidth", ",", " ", "targetHeight", ");", "\n\n    ", "final", " ", "Resource", "<", "Bitmap", ">", " ", "result", ";", "\n    ", "if", " ", "(", "toTransform", ".", "equals", "(", "transformed", "))", " ", "{", "\n      ", "result", " ", "=", " ", "resource", ";", "\n    ", "}", " ", "else", " ", "{", "\n      ", "result", " ", "=", " ", "BitmapResource", ".", "obtain", "(", "transformed", ",", " ", "bitmapPool", ");", "\n    ", "}", "\n    ", "return", " ", "result", ";", "\n  ", "}", "\n\n  ", "protected", " ", "abstract", " ", "Bitmap", " ", "transform", "(", "\n      ", "@NonNull", " ", "BitmapPool", " ", "pool", ",", " ", "@NonNull", " ", "Bitmap", " ", "toTransform", ",", " ", "int", " ", "outWidth", ",", " ", "int", " ", "outHeight", ");", "\n", "}", "\n", "\n\n", "Resource<Bitmap>", "を返す方の", "transform()", "を参考に、", "Drawable", "をリソースから取得する処理を追加します。", "\n\n", "override", " ", "fun", " ", "transform", "(", "context", ":", " ", "Context", ",", " ", "resource", ":", " ", "Resource", "<", "Bitmap", ">,", " ", "outWidth", ":", " ", "Int", ",", " ", "outHeight", ":", " ", "Int", "):", " ", "Resource", "<", "Bitmap", ">", " ", "{", "\n    ", "if", " ", "(!", "Util", ".", "isValidDimensions", "(", "outWidth", ",", " ", "outHeight", "))", "\n        ", "throw", " ", "IllegalArgumentException", "(", "\"Cannot apply transformation on width: $outWidth or height: $outHeight less than or equal to zero and not Target.SIZE_ORIGINAL\"", ")", "\n\n    ", "val", " ", "bitmapPool", " ", "=", " ", "Glide", ".", "get", "(", "context", ").", "bitmapPool", "\n    ", "val", " ", "toTransform", " ", "=", " ", "resource", ".", "get", "()", "\n    ", "val", " ", "targetWidth", " ", "=", " ", "if", " ", "(", "outWidth", " ", "==", " ", "Target", ".", "SIZE_ORIGINAL", ")", " ", "toTransform", ".", "width", " ", "else", " ", "outWidth", "\n    ", "val", " ", "targetHeight", " ", "=", " ", "if", " ", "(", "outHeight", " ", "==", " ", "Target", ".", "SIZE_ORIGINAL", ")", " ", "toTransform", ".", "height", " ", "else", " ", "outHeight", "\n    ", "val", " ", "drawable", " ", "=", " ", "ResourcesCompat", ".", "getDrawable", "(", "context", ".", "resources", ",", " ", "resId", ",", " ", "null", ")", "\n    ", "val", " ", "transformed", " ", "=", " ", "transform", "(", "bitmapPool", ",", " ", "toTransform", ",", " ", "targetWidth", ",", " ", "targetHeight", ",", " ", "drawable", ")", "\n\n    ", "return", " ", "if", " ", "(", "toTransform", " ", "==", " ", "transformed", ")", " ", "resource", " ", "else", " ", "BitmapResource", ".", "obtain", "(", "transformed", ",", " ", "bitmapPool", ")", "!!", "\n", "}", "\n", "\n\n", "equals()", "、", "hashCode()", "、", "updateDiskCacheKey()", "のオーバーライドが必須なようなので、公式サンプルの通りに実装します", "\n\n", "override", " ", "fun", " ", "updateDiskCacheKey", "(", "messageDigest", ":", " ", "MessageDigest", ")", " ", "{", "\n    ", "messageDigest", ".", "update", "(", "ID_BYTES", ")", "\n    ", "messageDigest", ".", "update", "(", "resId", ".", "toByte", "())", "\n    ", "messageDigest", ".", "update", "(", "if", " ", "(", "out", ")", " ", "Byte", ".", "MAX_VALUE", " ", "else", " ", "Byte", ".", "MIN_VALUE", ")", "\n", "}", "\n\n", "override", " ", "fun", " ", "equals", "(", "other", ":", " ", "Any", "?):", " ", "Boolean", " ", "=", "\n        ", "other", " ", "is", " ", "CropTransformation", " ", "&&", " ", "resId", " ", "==", " ", "other", ".", "resId", " ", "&&", " ", "out", " ", "==", " ", "other", ".", "out", "\n\n", "override", " ", "fun", " ", "hashCode", "():", " ", "Int", " ", "=", "\n        ", "Util", ".", "hashCode", "(", "ID", ".", "hashCode", "(),", " ", "Util", ".", "hashCode", "(", "resId", ",", " ", "Util", ".", "hashCode", "(", "out", ")))", "\n\n", "companion", " ", "object", " ", "{", "\n    ", "private", " ", "val", " ", "ID", " ", "=", " ", "CropTransformation", "::", "class", ".", "java", ".", "name", "\n    ", "private", " ", "val", " ", "ID_BYTES", " ", "=", " ", "ID", ".", "toByteArray", "(", "Charsets", ".", "UTF_8", ")", "\n", "}", "\n", "\n\n", "最後に実際のCrop処理を行う", "transform()", "を実装すれば完成です。", "\n\n", "private", " ", "fun", " ", "transform", "(", "pool", ":", " ", "BitmapPool", ",", " ", "toTransform", ":", " ", "Bitmap", ",", " ", "outWidth", ":", " ", "Int", ",", " ", "outHeight", ":", " ", "Int", ",", " ", "drawable", ":", " ", "Drawable", "?):", " ", "Bitmap", " ", "{", "\n    ", "drawable", " ", "?:", " ", "return", " ", "toTransform", "\n\n    ", "val", " ", "srcWidth", " ", "=", " ", "toTransform", ".", "width", "\n    ", "val", " ", "srcHeight", " ", "=", " ", "toTransform", ".", "height", "\n    ", "val", " ", "scaleX", " ", "=", " ", "outWidth", " ", "/", " ", "srcWidth", ".", "toFloat", "()", "\n    ", "val", " ", "scaleY", " ", "=", " ", "outHeight", " ", "/", " ", "srcHeight", ".", "toFloat", "()", "\n    ", "val", " ", "maxScale", " ", "=", " ", "max", "(", "scaleX", ",", " ", "scaleY", ")", "\n\n    ", "val", " ", "scaledWidth", " ", "=", " ", "maxScale", " ", "*", " ", "srcWidth", "\n    ", "val", " ", "scaledHeight", " ", "=", " ", "maxScale", " ", "*", " ", "srcHeight", "\n    ", "val", " ", "left", " ", "=", " ", "(", "outWidth", " ", "-", " ", "scaledWidth", ")", " ", "/", " ", "2f", "\n    ", "val", " ", "top", " ", "=", " ", "(", "outHeight", " ", "-", " ", "scaledHeight", ")", " ", "/", " ", "2f", "\n    ", "val", " ", "destRect", " ", "=", " ", "RectF", "(", "left", ",", " ", "top", ",", " ", "left", " ", "+", " ", "scaledWidth", ",", " ", "top", " ", "+", " ", "scaledHeight", ")", "\n\n    ", "val", " ", "bitmap", " ", "=", " ", "pool", ".", "get", "(", "outWidth", ",", " ", "outHeight", ",", " ", "Bitmap", ".", "Config", ".", "ARGB_8888", ")", "\n    ", "val", " ", "canvas", " ", "=", " ", "Canvas", "(", "bitmap", ")", "\n    ", "val", " ", "paint", " ", "=", " ", "if", " ", "(", "out", ")", " ", "SRC_OUT_PAINT", " ", "else", " ", "SRC_IN_PAINT", "\n\n    ", "drawable", ".", "bounds", " ", "=", " ", "Rect", "(", "0", ",", " ", "0", ",", " ", "outWidth", ",", " ", "outHeight", ")", "\n    ", "drawable", ".", "draw", "(", "canvas", ")", "\n    ", "canvas", ".", "drawBitmap", "(", "toTransform", ",", " ", "null", ",", " ", "destRect", ",", " ", "paint", ")", "\n    ", "return", " ", "bitmap", "\n", "}", "\n\n", "companion", " ", "object", " ", "{", "\n    ", "private", " ", "const", " ", "val", " ", "PAINT_FLAGS", " ", "=", " ", "Paint", ".", "DITHER_FLAG", " ", "or", " ", "Paint", ".", "FILTER_BITMAP_FLAG", " ", "or", " ", "Paint", ".", "ANTI_ALIAS_FLAG", "\n    ", "private", " ", "val", " ", "SRC_OUT_PAINT", " ", "=", " ", "Paint", "(", "PAINT_FLAGS", ").", "apply", " ", "{", " ", "xfermode", " ", "=", " ", "PorterDuffXfermode", "(", "PorterDuff", ".", "Mode", ".", "SRC_OUT", ")", " ", "}", "\n    ", "private", " ", "val", " ", "SRC_IN_PAINT", " ", "=", " ", "Paint", "(", "PAINT_FLAGS", ").", "apply", " ", "{", " ", "xfermode", " ", "=", " ", "PorterDuffXfermode", "(", "PorterDuff", ".", "Mode", ".", "SRC_IN", ")", " ", "}", "\n", "}", "\n", "\n\n", "transform()", "の実装は", "circleCrop()", "のソースコードをほぼ再利用しています。縦と横の倍率(入力サイズと出力サイズの比率)をそれぞれ計算し、大きい方に合わせて", "Bitmap", "の伸縮を行うことで、アスペクト比を維持したまま画像をフィットさせています。", "\n切り抜きの処理部分は", "Paint", "に", "PorterDuffXfermode", "をセットすることで、APIに丸投げしています。", "PorterDuffXfermode", "については", "この記事", "がわかりやすかったです。", "\n\n", "\n", "CropTransformation", "\n\n", "\n", "class", " ", "CropTransformation", "(", "@DrawableRes", " ", "private", " ", "val", " ", "resId", ":", " ", "Int", ",", " ", "private", " ", "val", " ", "out", ":", " ", "Boolean", " ", "=", " ", "false", ")", " ", ":", " ", "Transformation", "<", "Bitmap", ">", " ", "{", "\n    ", "override", " ", "fun", " ", "updateDiskCacheKey", "(", "messageDigest", ":", " ", "MessageDigest", ")", " ", "{", "\n        ", "messageDigest", ".", "update", "(", "ID_BYTES", ")", "\n        ", "messageDigest", ".", "update", "(", "resId", ".", "toByte", "())", "\n        ", "messageDigest", ".", "update", "(", "if", " ", "(", "out", ")", " ", "Byte", ".", "MAX_VALUE", " ", "else", " ", "Byte", ".", "MIN_VALUE", ")", "\n    ", "}", "\n\n    ", "override", " ", "fun", " ", "transform", "(", "context", ":", " ", "Context", ",", " ", "resource", ":", " ", "Resource", "<", "Bitmap", ">,", " ", "outWidth", ":", " ", "Int", ",", " ", "outHeight", ":", " ", "Int", "):", " ", "Resource", "<", "Bitmap", ">", " ", "{", "\n        ", "if", " ", "(!", "Util", ".", "isValidDimensions", "(", "outWidth", ",", " ", "outHeight", "))", "\n            ", "throw", " ", "IllegalArgumentException", "(", "\"Cannot apply transformation on width: $outWidth or height: $outHeight less than or equal to zero and not Target.SIZE_ORIGINAL\"", ")", "\n\n        ", "val", " ", "bitmapPool", " ", "=", " ", "Glide", ".", "get", "(", "context", ").", "bitmapPool", "\n        ", "val", " ", "toTransform", " ", "=", " ", "resource", ".", "get", "()", "\n        ", "val", " ", "targetWidth", " ", "=", " ", "if", " ", "(", "outWidth", " ", "==", " ", "Target", ".", "SIZE_ORIGINAL", ")", " ", "toTransform", ".", "width", " ", "else", " ", "outWidth", "\n        ", "val", " ", "targetHeight", " ", "=", " ", "if", " ", "(", "outHeight", " ", "==", " ", "Target", ".", "SIZE_ORIGINAL", ")", " ", "toTransform", ".", "height", " ", "else", " ", "outHeight", "\n        ", "val", " ", "drawable", " ", "=", " ", "ResourcesCompat", ".", "getDrawable", "(", "context", ".", "resources", ",", " ", "resId", ",", " ", "null", ")", "\n        ", "val", " ", "transformed", " ", "=", " ", "transform", "(", "bitmapPool", ",", " ", "toTransform", ",", " ", "targetWidth", ",", " ", "targetHeight", ",", " ", "drawable", ")", "\n\n        ", "return", " ", "if", " ", "(", "toTransform", " ", "==", " ", "transformed", ")", " ", "resource", " ", "else", " ", "BitmapResource", ".", "obtain", "(", "transformed", ",", " ", "bitmapPool", ")", "!!", "\n    ", "}", "\n\n    ", "private", " ", "fun", " ", "transform", "(", "pool", ":", " ", "BitmapPool", ",", " ", "toTransform", ":", " ", "Bitmap", ",", " ", "outWidth", ":", " ", "Int", ",", " ", "outHeight", ":", " ", "Int", ",", " ", "drawable", ":", " ", "Drawable", "?):", " ", "Bitmap", " ", "{", "\n        ", "drawable", " ", "?:", " ", "return", " ", "toTransform", "\n\n        ", "val", " ", "srcWidth", " ", "=", " ", "toTransform", ".", "width", "\n        ", "val", " ", "srcHeight", " ", "=", " ", "toTransform", ".", "height", "\n        ", "val", " ", "scaleX", " ", "=", " ", "outWidth", " ", "/", " ", "srcWidth", ".", "toFloat", "()", "\n        ", "val", " ", "scaleY", " ", "=", " ", "outHeight", " ", "/", " ", "srcHeight", ".", "toFloat", "()", "\n        ", "val", " ", "maxScale", " ", "=", " ", "max", "(", "scaleX", ",", " ", "scaleY", ")", "\n\n        ", "val", " ", "scaledWidth", " ", "=", " ", "maxScale", " ", "*", " ", "srcWidth", "\n        ", "val", " ", "scaledHeight", " ", "=", " ", "maxScale", " ", "*", " ", "srcHeight", "\n        ", "val", " ", "left", " ", "=", " ", "(", "outWidth", " ", "-", " ", "scaledWidth", ")", " ", "/", " ", "2f", "\n        ", "val", " ", "top", " ", "=", " ", "(", "outHeight", " ", "-", " ", "scaledHeight", ")", " ", "/", " ", "2f", "\n        ", "val", " ", "destRect", " ", "=", " ", "RectF", "(", "left", ",", " ", "top", ",", " ", "left", " ", "+", " ", "scaledWidth", ",", " ", "top", " ", "+", " ", "scaledHeight", ")", "\n\n        ", "val", " ", "bitmap", " ", "=", " ", "pool", ".", "get", "(", "outWidth", ",", " ", "outHeight", ",", " ", "Bitmap", ".", "Config", ".", "ARGB_8888", ")", "\n        ", "val", " ", "canvas", " ", "=", " ", "Canvas", "(", "bitmap", ")", "\n        ", "val", " ", "paint", " ", "=", " ", "if", " ", "(", "out", ")", " ", "SRC_OUT_PAINT", " ", "else", " ", "SRC_IN_PAINT", "\n\n        ", "drawable", ".", "bounds", " ", "=", " ", "Rect", "(", "0", ",", " ", "0", ",", " ", "outWidth", ",", " ", "outHeight", ")", "\n        ", "drawable", ".", "draw", "(", "canvas", ")", "\n        ", "canvas", ".", "drawBitmap", "(", "toTransform", ",", " ", "null", ",", " ", "destRect", ",", " ", "paint", ")", "\n        ", "return", " ", "bitmap", "\n    ", "}", "\n\n    ", "override", " ", "fun", " ", "equals", "(", "other", ":", " ", "Any", "?):", " ", "Boolean", " ", "=", "\n            ", "other", " ", "is", " ", "CropTransformation", " ", "&&", " ", "resId", " ", "==", " ", "other", ".", "resId", " ", "&&", " ", "out", " ", "==", " ", "other", ".", "out", "\n\n    ", "override", " ", "fun", " ", "hashCode", "():", " ", "Int", " ", "=", "\n            ", "Util", ".", "hashCode", "(", "ID", ".", "hashCode", "(),", " ", "Util", ".", "hashCode", "(", "resId", ",", " ", "Util", ".", "hashCode", "(", "out", ")))", "\n\n    ", "companion", " ", "object", " ", "{", "\n        ", "private", " ", "val", " ", "ID", " ", "=", " ", "CropTransformation", "::", "class", ".", "java", ".", "name", "\n        ", "private", " ", "val", " ", "ID_BYTES", " ", "=", " ", "ID", ".", "toByteArray", "(", "Charsets", ".", "UTF_8", ")", "\n        ", "private", " ", "const", " ", "val", " ", "PAINT_FLAGS", " ", "=", " ", "Paint", ".", "DITHER_FLAG", " ", "or", " ", "Paint", ".", "FILTER_BITMAP_FLAG", " ", "or", " ", "Paint", ".", "ANTI_ALIAS_FLAG", "\n        ", "private", " ", "val", " ", "SRC_OUT_PAINT", " ", "=", " ", "Paint", "(", "PAINT_FLAGS", ").", "apply", " ", "{", " ", "xfermode", " ", "=", " ", "PorterDuffXfermode", "(", "PorterDuff", ".", "Mode", ".", "SRC_OUT", ")", " ", "}", "\n        ", "private", " ", "val", " ", "SRC_IN_PAINT", " ", "=", " ", "Paint", "(", "PAINT_FLAGS", ").", "apply", " ", "{", " ", "xfermode", " ", "=", " ", "PorterDuffXfermode", "(", "PorterDuff", ".", "Mode", ".", "SRC_IN", ")", " ", "}", "\n    ", "}", "\n", "}", "\n", "\n\n", "最終的に完成したクラスはこのようになります。コンストラクタで", "Drawable", "のリソースIDと切り抜きのオプション(", "SRC_IN", " or ", "SRC_OUT", ")を指定します。", "\n\n", "\n", "実際に利用する", "\n\n", "左上から右下の順で記述してあります。", "\n\n", "GlideApp", ".", "with", "(", "this", ")", "\n        ", ".", "load", "(", "URL", ")", "\n        ", ".", "into", "(", "defaultImageView", ")", "\n\n", "GlideApp", ".", "with", "(", "this", ")", "\n        ", ".", "load", "(", "URL", ")", "\n        ", ".", "circleCrop", "()", "\n        ", ".", "into", "(", "circleCropImageView", ")", "\n\n", "GlideApp", ".", "with", "(", "this", ")", "\n        ", ".", "load", "(", "URL", ")", "\n        ", ".", "transform", "(", "CropTransformation", "(", "R", ".", "drawable", ".", "ic_brightness", "))", "\n        ", ".", "into", "(", "drawableCropImageView", ")", "\n\n", "GlideApp", ".", "with", "(", "this", ")", "\n        ", ".", "load", "(", "URL", ")", "\n        ", ".", "transform", "(", "CropTransformation", "(", "R", ".", "drawable", ".", "ic_brightness", ",", " ", "true", "))", "\n        ", ".", "into", "(", "drawableCropOutImageView", ")", "\n\n", "GlideApp", ".", "with", "(", "this", ")", "\n        ", ".", "load", "(", "URL", ")", "\n        ", ".", "transform", "(", "CropTransformation", "(", "R", ".", "drawable", ".", "rounded_rectangle", "))", "\n        ", ".", "into", "(", "roundedRectangleImageView", ")", "\n", "\n\n", "\n\n", "\n", "おわりに", "\n\n", "Custom transformationが思ってたよりも簡単に作れてよかったです。角丸などCropの需要は大きいと思うので、ぜひ活用してみてください。", "\n"], "code": ["public", " ", "abstract", " ", "class", " ", "BitmapTransformation", " ", "implements", " ", "Transformation", "<", "Bitmap", ">", " ", "{", "\n\n  ", "@NonNull", "\n  ", "@Override", "\n  ", "public", " ", "final", " ", "Resource", "<", "Bitmap", ">", " ", "transform", "(", "\n      ", "@NonNull", " ", "Context", " ", "context", ",", " ", "@NonNull", " ", "Resource", "<", "Bitmap", ">", " ", "resource", ",", " ", "int", " ", "outWidth", ",", " ", "int", " ", "outHeight", ")", " ", "{", "\n    ", "if", " ", "(!", "Util", ".", "isValidDimensions", "(", "outWidth", ",", " ", "outHeight", "))", " ", "{", "\n      ", "throw", " ", "new", " ", "IllegalArgumentException", "(", "\n          ", "\"Cannot apply transformation on width: \"", " ", "+", " ", "outWidth", " ", "+", " ", "\" or height: \"", " ", "+", " ", "outHeight", "\n              ", "+", " ", "\" less than or equal to zero and not Target.SIZE_ORIGINAL\"", ");", "\n    ", "}", "\n    ", "BitmapPool", " ", "bitmapPool", " ", "=", " ", "Glide", ".", "get", "(", "context", ").", "getBitmapPool", "();", "\n    ", "Bitmap", " ", "toTransform", " ", "=", " ", "resource", ".", "get", "();", "\n    ", "int", " ", "targetWidth", " ", "=", " ", "outWidth", " ", "==", " ", "Target", ".", "SIZE_ORIGINAL", " ", "?", " ", "toTransform", ".", "getWidth", "()", " ", ":", " ", "outWidth", ";", "\n    ", "int", " ", "targetHeight", " ", "=", " ", "outHeight", " ", "==", " ", "Target", ".", "SIZE_ORIGINAL", " ", "?", " ", "toTransform", ".", "getHeight", "()", " ", ":", " ", "outHeight", ";", "\n    ", "Bitmap", " ", "transformed", " ", "=", " ", "transform", "(", "bitmapPool", ",", " ", "toTransform", ",", " ", "targetWidth", ",", " ", "targetHeight", ");", "\n\n    ", "final", " ", "Resource", "<", "Bitmap", ">", " ", "result", ";", "\n    ", "if", " ", "(", "toTransform", ".", "equals", "(", "transformed", "))", " ", "{", "\n      ", "result", " ", "=", " ", "resource", ";", "\n    ", "}", " ", "else", " ", "{", "\n      ", "result", " ", "=", " ", "BitmapResource", ".", "obtain", "(", "transformed", ",", " ", "bitmapPool", ");", "\n    ", "}", "\n    ", "return", " ", "result", ";", "\n  ", "}", "\n\n  ", "protected", " ", "abstract", " ", "Bitmap", " ", "transform", "(", "\n      ", "@NonNull", " ", "BitmapPool", " ", "pool", ",", " ", "@NonNull", " ", "Bitmap", " ", "toTransform", ",", " ", "int", " ", "outWidth", ",", " ", "int", " ", "outHeight", ");", "\n", "}", "\n", "override", " ", "fun", " ", "transform", "(", "context", ":", " ", "Context", ",", " ", "resource", ":", " ", "Resource", "<", "Bitmap", ">,", " ", "outWidth", ":", " ", "Int", ",", " ", "outHeight", ":", " ", "Int", "):", " ", "Resource", "<", "Bitmap", ">", " ", "{", "\n    ", "if", " ", "(!", "Util", ".", "isValidDimensions", "(", "outWidth", ",", " ", "outHeight", "))", "\n        ", "throw", " ", "IllegalArgumentException", "(", "\"Cannot apply transformation on width: $outWidth or height: $outHeight less than or equal to zero and not Target.SIZE_ORIGINAL\"", ")", "\n\n    ", "val", " ", "bitmapPool", " ", "=", " ", "Glide", ".", "get", "(", "context", ").", "bitmapPool", "\n    ", "val", " ", "toTransform", " ", "=", " ", "resource", ".", "get", "()", "\n    ", "val", " ", "targetWidth", " ", "=", " ", "if", " ", "(", "outWidth", " ", "==", " ", "Target", ".", "SIZE_ORIGINAL", ")", " ", "toTransform", ".", "width", " ", "else", " ", "outWidth", "\n    ", "val", " ", "targetHeight", " ", "=", " ", "if", " ", "(", "outHeight", " ", "==", " ", "Target", ".", "SIZE_ORIGINAL", ")", " ", "toTransform", ".", "height", " ", "else", " ", "outHeight", "\n    ", "val", " ", "drawable", " ", "=", " ", "ResourcesCompat", ".", "getDrawable", "(", "context", ".", "resources", ",", " ", "resId", ",", " ", "null", ")", "\n    ", "val", " ", "transformed", " ", "=", " ", "transform", "(", "bitmapPool", ",", " ", "toTransform", ",", " ", "targetWidth", ",", " ", "targetHeight", ",", " ", "drawable", ")", "\n\n    ", "return", " ", "if", " ", "(", "toTransform", " ", "==", " ", "transformed", ")", " ", "resource", " ", "else", " ", "BitmapResource", ".", "obtain", "(", "transformed", ",", " ", "bitmapPool", ")", "!!", "\n", "}", "\n", "override", " ", "fun", " ", "updateDiskCacheKey", "(", "messageDigest", ":", " ", "MessageDigest", ")", " ", "{", "\n    ", "messageDigest", ".", "update", "(", "ID_BYTES", ")", "\n    ", "messageDigest", ".", "update", "(", "resId", ".", "toByte", "())", "\n    ", "messageDigest", ".", "update", "(", "if", " ", "(", "out", ")", " ", "Byte", ".", "MAX_VALUE", " ", "else", " ", "Byte", ".", "MIN_VALUE", ")", "\n", "}", "\n\n", "override", " ", "fun", " ", "equals", "(", "other", ":", " ", "Any", "?):", " ", "Boolean", " ", "=", "\n        ", "other", " ", "is", " ", "CropTransformation", " ", "&&", " ", "resId", " ", "==", " ", "other", ".", "resId", " ", "&&", " ", "out", " ", "==", " ", "other", ".", "out", "\n\n", "override", " ", "fun", " ", "hashCode", "():", " ", "Int", " ", "=", "\n        ", "Util", ".", "hashCode", "(", "ID", ".", "hashCode", "(),", " ", "Util", ".", "hashCode", "(", "resId", ",", " ", "Util", ".", "hashCode", "(", "out", ")))", "\n\n", "companion", " ", "object", " ", "{", "\n    ", "private", " ", "val", " ", "ID", " ", "=", " ", "CropTransformation", "::", "class", ".", "java", ".", "name", "\n    ", "private", " ", "val", " ", "ID_BYTES", " ", "=", " ", "ID", ".", "toByteArray", "(", "Charsets", ".", "UTF_8", ")", "\n", "}", "\n", "private", " ", "fun", " ", "transform", "(", "pool", ":", " ", "BitmapPool", ",", " ", "toTransform", ":", " ", "Bitmap", ",", " ", "outWidth", ":", " ", "Int", ",", " ", "outHeight", ":", " ", "Int", ",", " ", "drawable", ":", " ", "Drawable", "?):", " ", "Bitmap", " ", "{", "\n    ", "drawable", " ", "?:", " ", "return", " ", "toTransform", "\n\n    ", "val", " ", "srcWidth", " ", "=", " ", "toTransform", ".", "width", "\n    ", "val", " ", "srcHeight", " ", "=", " ", "toTransform", ".", "height", "\n    ", "val", " ", "scaleX", " ", "=", " ", "outWidth", " ", "/", " ", "srcWidth", ".", "toFloat", "()", "\n    ", "val", " ", "scaleY", " ", "=", " ", "outHeight", " ", "/", " ", "srcHeight", ".", "toFloat", "()", "\n    ", "val", " ", "maxScale", " ", "=", " ", "max", "(", "scaleX", ",", " ", "scaleY", ")", "\n\n    ", "val", " ", "scaledWidth", " ", "=", " ", "maxScale", " ", "*", " ", "srcWidth", "\n    ", "val", " ", "scaledHeight", " ", "=", " ", "maxScale", " ", "*", " ", "srcHeight", "\n    ", "val", " ", "left", " ", "=", " ", "(", "outWidth", " ", "-", " ", "scaledWidth", ")", " ", "/", " ", "2f", "\n    ", "val", " ", "top", " ", "=", " ", "(", "outHeight", " ", "-", " ", "scaledHeight", ")", " ", "/", " ", "2f", "\n    ", "val", " ", "destRect", " ", "=", " ", "RectF", "(", "left", ",", " ", "top", ",", " ", "left", " ", "+", " ", "scaledWidth", ",", " ", "top", " ", "+", " ", "scaledHeight", ")", "\n\n    ", "val", " ", "bitmap", " ", "=", " ", "pool", ".", "get", "(", "outWidth", ",", " ", "outHeight", ",", " ", "Bitmap", ".", "Config", ".", "ARGB_8888", ")", "\n    ", "val", " ", "canvas", " ", "=", " ", "Canvas", "(", "bitmap", ")", "\n    ", "val", " ", "paint", " ", "=", " ", "if", " ", "(", "out", ")", " ", "SRC_OUT_PAINT", " ", "else", " ", "SRC_IN_PAINT", "\n\n    ", "drawable", ".", "bounds", " ", "=", " ", "Rect", "(", "0", ",", " ", "0", ",", " ", "outWidth", ",", " ", "outHeight", ")", "\n    ", "drawable", ".", "draw", "(", "canvas", ")", "\n    ", "canvas", ".", "drawBitmap", "(", "toTransform", ",", " ", "null", ",", " ", "destRect", ",", " ", "paint", ")", "\n    ", "return", " ", "bitmap", "\n", "}", "\n\n", "companion", " ", "object", " ", "{", "\n    ", "private", " ", "const", " ", "val", " ", "PAINT_FLAGS", " ", "=", " ", "Paint", ".", "DITHER_FLAG", " ", "or", " ", "Paint", ".", "FILTER_BITMAP_FLAG", " ", "or", " ", "Paint", ".", "ANTI_ALIAS_FLAG", "\n    ", "private", " ", "val", " ", "SRC_OUT_PAINT", " ", "=", " ", "Paint", "(", "PAINT_FLAGS", ").", "apply", " ", "{", " ", "xfermode", " ", "=", " ", "PorterDuffXfermode", "(", "PorterDuff", ".", "Mode", ".", "SRC_OUT", ")", " ", "}", "\n    ", "private", " ", "val", " ", "SRC_IN_PAINT", " ", "=", " ", "Paint", "(", "PAINT_FLAGS", ").", "apply", " ", "{", " ", "xfermode", " ", "=", " ", "PorterDuffXfermode", "(", "PorterDuff", ".", "Mode", ".", "SRC_IN", ")", " ", "}", "\n", "}", "\n", "\n", "class", " ", "CropTransformation", "(", "@DrawableRes", " ", "private", " ", "val", " ", "resId", ":", " ", "Int", ",", " ", "private", " ", "val", " ", "out", ":", " ", "Boolean", " ", "=", " ", "false", ")", " ", ":", " ", "Transformation", "<", "Bitmap", ">", " ", "{", "\n    ", "override", " ", "fun", " ", "updateDiskCacheKey", "(", "messageDigest", ":", " ", "MessageDigest", ")", " ", "{", "\n        ", "messageDigest", ".", "update", "(", "ID_BYTES", ")", "\n        ", "messageDigest", ".", "update", "(", "resId", ".", "toByte", "())", "\n        ", "messageDigest", ".", "update", "(", "if", " ", "(", "out", ")", " ", "Byte", ".", "MAX_VALUE", " ", "else", " ", "Byte", ".", "MIN_VALUE", ")", "\n    ", "}", "\n\n    ", "override", " ", "fun", " ", "transform", "(", "context", ":", " ", "Context", ",", " ", "resource", ":", " ", "Resource", "<", "Bitmap", ">,", " ", "outWidth", ":", " ", "Int", ",", " ", "outHeight", ":", " ", "Int", "):", " ", "Resource", "<", "Bitmap", ">", " ", "{", "\n        ", "if", " ", "(!", "Util", ".", "isValidDimensions", "(", "outWidth", ",", " ", "outHeight", "))", "\n            ", "throw", " ", "IllegalArgumentException", "(", "\"Cannot apply transformation on width: $outWidth or height: $outHeight less than or equal to zero and not Target.SIZE_ORIGINAL\"", ")", "\n\n        ", "val", " ", "bitmapPool", " ", "=", " ", "Glide", ".", "get", "(", "context", ").", "bitmapPool", "\n        ", "val", " ", "toTransform", " ", "=", " ", "resource", ".", "get", "()", "\n        ", "val", " ", "targetWidth", " ", "=", " ", "if", " ", "(", "outWidth", " ", "==", " ", "Target", ".", "SIZE_ORIGINAL", ")", " ", "toTransform", ".", "width", " ", "else", " ", "outWidth", "\n        ", "val", " ", "targetHeight", " ", "=", " ", "if", " ", "(", "outHeight", " ", "==", " ", "Target", ".", "SIZE_ORIGINAL", ")", " ", "toTransform", ".", "height", " ", "else", " ", "outHeight", "\n        ", "val", " ", "drawable", " ", "=", " ", "ResourcesCompat", ".", "getDrawable", "(", "context", ".", "resources", ",", " ", "resId", ",", " ", "null", ")", "\n        ", "val", " ", "transformed", " ", "=", " ", "transform", "(", "bitmapPool", ",", " ", "toTransform", ",", " ", "targetWidth", ",", " ", "targetHeight", ",", " ", "drawable", ")", "\n\n        ", "return", " ", "if", " ", "(", "toTransform", " ", "==", " ", "transformed", ")", " ", "resource", " ", "else", " ", "BitmapResource", ".", "obtain", "(", "transformed", ",", " ", "bitmapPool", ")", "!!", "\n    ", "}", "\n\n    ", "private", " ", "fun", " ", "transform", "(", "pool", ":", " ", "BitmapPool", ",", " ", "toTransform", ":", " ", "Bitmap", ",", " ", "outWidth", ":", " ", "Int", ",", " ", "outHeight", ":", " ", "Int", ",", " ", "drawable", ":", " ", "Drawable", "?):", " ", "Bitmap", " ", "{", "\n        ", "drawable", " ", "?:", " ", "return", " ", "toTransform", "\n\n        ", "val", " ", "srcWidth", " ", "=", " ", "toTransform", ".", "width", "\n        ", "val", " ", "srcHeight", " ", "=", " ", "toTransform", ".", "height", "\n        ", "val", " ", "scaleX", " ", "=", " ", "outWidth", " ", "/", " ", "srcWidth", ".", "toFloat", "()", "\n        ", "val", " ", "scaleY", " ", "=", " ", "outHeight", " ", "/", " ", "srcHeight", ".", "toFloat", "()", "\n        ", "val", " ", "maxScale", " ", "=", " ", "max", "(", "scaleX", ",", " ", "scaleY", ")", "\n\n        ", "val", " ", "scaledWidth", " ", "=", " ", "maxScale", " ", "*", " ", "srcWidth", "\n        ", "val", " ", "scaledHeight", " ", "=", " ", "maxScale", " ", "*", " ", "srcHeight", "\n        ", "val", " ", "left", " ", "=", " ", "(", "outWidth", " ", "-", " ", "scaledWidth", ")", " ", "/", " ", "2f", "\n        ", "val", " ", "top", " ", "=", " ", "(", "outHeight", " ", "-", " ", "scaledHeight", ")", " ", "/", " ", "2f", "\n        ", "val", " ", "destRect", " ", "=", " ", "RectF", "(", "left", ",", " ", "top", ",", " ", "left", " ", "+", " ", "scaledWidth", ",", " ", "top", " ", "+", " ", "scaledHeight", ")", "\n\n        ", "val", " ", "bitmap", " ", "=", " ", "pool", ".", "get", "(", "outWidth", ",", " ", "outHeight", ",", " ", "Bitmap", ".", "Config", ".", "ARGB_8888", ")", "\n        ", "val", " ", "canvas", " ", "=", " ", "Canvas", "(", "bitmap", ")", "\n        ", "val", " ", "paint", " ", "=", " ", "if", " ", "(", "out", ")", " ", "SRC_OUT_PAINT", " ", "else", " ", "SRC_IN_PAINT", "\n\n        ", "drawable", ".", "bounds", " ", "=", " ", "Rect", "(", "0", ",", " ", "0", ",", " ", "outWidth", ",", " ", "outHeight", ")", "\n        ", "drawable", ".", "draw", "(", "canvas", ")", "\n        ", "canvas", ".", "drawBitmap", "(", "toTransform", ",", " ", "null", ",", " ", "destRect", ",", " ", "paint", ")", "\n        ", "return", " ", "bitmap", "\n    ", "}", "\n\n    ", "override", " ", "fun", " ", "equals", "(", "other", ":", " ", "Any", "?):", " ", "Boolean", " ", "=", "\n            ", "other", " ", "is", " ", "CropTransformation", " ", "&&", " ", "resId", " ", "==", " ", "other", ".", "resId", " ", "&&", " ", "out", " ", "==", " ", "other", ".", "out", "\n\n    ", "override", " ", "fun", " ", "hashCode", "():", " ", "Int", " ", "=", "\n            ", "Util", ".", "hashCode", "(", "ID", ".", "hashCode", "(),", " ", "Util", ".", "hashCode", "(", "resId", ",", " ", "Util", ".", "hashCode", "(", "out", ")))", "\n\n    ", "companion", " ", "object", " ", "{", "\n        ", "private", " ", "val", " ", "ID", " ", "=", " ", "CropTransformation", "::", "class", ".", "java", ".", "name", "\n        ", "private", " ", "val", " ", "ID_BYTES", " ", "=", " ", "ID", ".", "toByteArray", "(", "Charsets", ".", "UTF_8", ")", "\n        ", "private", " ", "const", " ", "val", " ", "PAINT_FLAGS", " ", "=", " ", "Paint", ".", "DITHER_FLAG", " ", "or", " ", "Paint", ".", "FILTER_BITMAP_FLAG", " ", "or", " ", "Paint", ".", "ANTI_ALIAS_FLAG", "\n        ", "private", " ", "val", " ", "SRC_OUT_PAINT", " ", "=", " ", "Paint", "(", "PAINT_FLAGS", ").", "apply", " ", "{", " ", "xfermode", " ", "=", " ", "PorterDuffXfermode", "(", "PorterDuff", ".", "Mode", ".", "SRC_OUT", ")", " ", "}", "\n        ", "private", " ", "val", " ", "SRC_IN_PAINT", " ", "=", " ", "Paint", "(", "PAINT_FLAGS", ").", "apply", " ", "{", " ", "xfermode", " ", "=", " ", "PorterDuffXfermode", "(", "PorterDuff", ".", "Mode", ".", "SRC_IN", ")", " ", "}", "\n    ", "}", "\n", "}", "\n", "GlideApp", ".", "with", "(", "this", ")", "\n        ", ".", "load", "(", "URL", ")", "\n        ", ".", "into", "(", "defaultImageView", ")", "\n\n", "GlideApp", ".", "with", "(", "this", ")", "\n        ", ".", "load", "(", "URL", ")", "\n        ", ".", "circleCrop", "()", "\n        ", ".", "into", "(", "circleCropImageView", ")", "\n\n", "GlideApp", ".", "with", "(", "this", ")", "\n        ", ".", "load", "(", "URL", ")", "\n        ", ".", "transform", "(", "CropTransformation", "(", "R", ".", "drawable", ".", "ic_brightness", "))", "\n        ", ".", "into", "(", "drawableCropImageView", ")", "\n\n", "GlideApp", ".", "with", "(", "this", ")", "\n        ", ".", "load", "(", "URL", ")", "\n        ", ".", "transform", "(", "CropTransformation", "(", "R", ".", "drawable", ".", "ic_brightness", ",", " ", "true", "))", "\n        ", ".", "into", "(", "drawableCropOutImageView", ")", "\n\n", "GlideApp", ".", "with", "(", "this", ")", "\n        ", ".", "load", "(", "URL", ")", "\n        ", ".", "transform", "(", "CropTransformation", "(", "R", ".", "drawable", ".", "rounded_rectangle", "))", "\n        ", ".", "into", "(", "roundedRectangleImageView", ")", "\n"]},
{"title": ["LXD3.0 tips"], "body": ["\n", "\n", "これは何？", "\n\n", "\n", "Ubuntu 18.04 の LXD 3.0 の tips", "\n", "随時更新。。。", "\n", "\n\n", "\n", "サイズの小さな Ubuntu イメージを使いたい。", "\n\n", "\n", "参考、「", "A closer look at Minimal Ubuntu for LXD ? Mi blog lah!", "」", "\n", "\n\n", "# リモート登録（ubuntu-minimal という名前で登録）", "\n", "$ ", "lxc remote add ", "--protocol", " simplestreams ubuntu-minimal https://cloud-images.ubuntu.com/minimal/releases/\n\n", "# イメージリスト", "\n", "$ ", "lxc image list ubuntu-minimal:\n", "$ ", "lxc image ", "alias ", "list ubuntu-minimal:\n\n", "# イメージ情報", "\n", "$ ", "lxc image info ubuntu-minimal:18.04\n\n", "# 18.04のイメージから、コンテナ作成＆起動（コンテナ名 minimal）", "\n", "$ ", "lxc launch ubuntu-minimal:18.04 minimal\n\n", "# コンテナに ubuntu でログイン", "\n", "$ ", "lxc ", "exec ", "minimal ", "--", " ", "sudo", " ", "--user", " ubuntu ", "--login", "\n", "\n\n", "\n", "ブリッジ(lxdbr0)のDNS有効化", "\n\n", "\n", "\n", "lxd init", " の初期設定をデフォルトで設定した場合、LXDコンテナをブリッジ(lxdbr0)でつなぐようになっているはず。", "\n", "この時、\n\n", "\n", "コンテナ to コンテナ\n\n", "\n", " ", "ping <コンテナ名>", " は通る。", "\n", "\n", "\n", "LXDホスト to コンテナへの\n\n", "\n", " ", "ping <コンテナ名>", " は ", "通らない。", " ・・・", "これが、通るようにする。", "\n", "\n", " もっとも、", "ping <コンテナのIP>", " なら通る。", "\n", "\n", "\n", "\n", "\n", "参考、「", "How to use LXD container hostnames on the host in Ubuntu 18.04 ? Mi blog lah!", "」", "\n", "手っ取り早くDNSを有効にするだけなら、以下の１コマンド実行するだけでよい。(環境変数は適切に設定必要だが)", "\n", "\n\n", "$ ", "/usr/bin/systemd-resolve ", "--interface", " ", "${", "LXDINTERFACE", "}", " ", "--set-dns", " ", "${", "LXDDNSIP", "}", " ", "--set-domain", " ", "${", "LXDDOMAIN", "}", "\n", "\n\n", "\n", "以下、systemdのサービスとして、自動化するスクリプト", "\n", "\n\n", "# lxd_host_dns_start.sh", "\n", "cat", " ", "<<", "'", "__EOS__", "' | sudo tee /usr/local/bin/lxd_host_dns_start.sh > /dev/null\n#!/bin/sh\nLXDINTERFACE=lxdbr0\nLXDDOMAIN=lxd\nLXDDNSIP=", "$(", "lxc network get ", "${", "LXDINTERFACE", "}", " ipv4.address | ", "sed", " ", "-E", " ", "'s#/.+##'", ")", "\n/usr/bin/systemd-resolve --interface ", "${", "LXDINTERFACE", "}", " --set-dns ", "${", "LXDDNSIP", "}", " --set-domain ", "${", "LXDDOMAIN", "}", "\nsystemd-resolve --status ", "${", "LXDINTERFACE", "}", "\n", "__EOS__\n", "sudo chmod", " +x /usr/local/bin/lxd_host_dns_start.sh\n\n", "# lxd_host_dns_stop.sh", "\n", "cat", " ", "<<", "'", "__EOS__", "' | sudo tee /usr/local/bin/lxd_host_dns_stop.sh > /dev/null\n#!/bin/sh\nLXDINTERFACE=lxdbr0\n/usr/bin/systemd-resolve --interface ", "${", "LXDINTERFACE", "}", " --revert\nsystemd-resolve --status ", "${", "LXDINTERFACE", "}", "\n", "__EOS__\n", "sudo chmod", " +x /usr/local/bin/lxd_host_dns_stop.sh\n\n", "# lxd-host-dns.service", "\n", "cat", " ", "<<", "'", "__EOS__", "' | sudo tee /lib/systemd/system/lxd-host-dns.service > /dev/null\n[Unit]\nDescription=LXD host DNS service\nAfter=lxd-containers.service\n\n[Service]\nType=oneshot\nExecStart=/usr/local/bin/lxd_host_dns_start.sh\nRemainAfterExit=true\nExecStop=/usr/local/bin/lxd_host_dns_stop.sh\nStandardOutput=journal\n\n[Install]\nWantedBy=multi-user.target\n", "__EOS__\n\n", "# サービス起動", "\n", "sudo ", "systemctl start lxd-host-dns\n\n", "# 次回以降の為、サービス有効化", "\n", "sudo ", "systemctl ", "enable ", "lxd-host-dns\n\n", "# サービス設定確認", "\n", "# systemctl list-unit-files --type=service | grep lxd", "\n", "# sudo systemctl status lxd-host-dns", "\n", "# sudo journalctl -u lxd-host-dns", "\n\n", "# DNS現在設定表示", "\n", "# systemd-resolve --status lxdbr0", "\n", "\n\n", "\n", "これで ", "ping <コンテナ名>", " あるいは ", "ping <コンテナ名>.lxd", " が通るようになる。", "\n", "\n\n", "\n", "todo: otherPCs --> socks(LXD Host) --> containers", "\n\n", "\n", "otherPCs から http[s], ssh で containers へ接続できるようにする。", "\n", "\n\n", "\n", "LXDのネットワークのipv6 無効化", "\n\n", "\n", "コンテナにipv6アドレスが付与されるので、これを無効化する。\n\n", "\n", "ブリッジのipv6を削除することで実現する。", "\n", "\n", "\n", "\n\n", "$ ", "lxc network ", "set ", "lxdbr0 ipv6.address none\n", "\n\n", "\n", "本当は、OS レベルでOFFにするのが正解っぽい？", "\n", "\n\n", "\n", "lxdログ", "\n\n", "\n", "何かあった時の調査に。。。", "\n", "\n\n", "$ ", "tail", " ", "-f", " /var/log/lxd/lxd.log\n", "\n\n", "\n", "LXDホストから、コンテナへ公開鍵を登録＆パスワードの上書き", "\n\n", "\n", "LXDホストから以下実行する。\n\n", "\n", "そもそも、sshdがインストールされていない場合は、インストールする。", "\n", "sudo の実行などで、パスワードが必要なこともあるので、password上書きしておく。 ", "\n", "\n", "\n", "\n\n", "$ CONTAINER", "=", "c1  ", "# 登録先コンテナ名", "\n", "$ UNAME", "=", "ubuntu  ", "# 登録先ユーザ名", "\n", "$ PUBFILE", "=", "~/.ssh/id_rsa.pub  ", "# 登録したい公開鍵", "\n\n", "# sshd インストール", "\n", "$ ", "lxc ", "exec", " ", "$CONTAINER", " ", "--", " apt ", "install", " ", "-y", " openssh-server\n\n", "# 公開鍵登録", "\n", "$ ", "cat", " ", "$PUBFILE", " | lxc ", "exec", " ", "$CONTAINER", " ", "--", " ", "sudo", " ", "--user", " ", "$UNAME", " ", "--login", " sh ", "-c", " ", "'mkdir -p ~/.ssh; chmod 700 ~/.ssh; touch ~/.ssh/authorized_keys; chmod 600 ~/.ssh/authorized_keys; cat - >> ~/.ssh/authorized_keys'", "\n\n", "# password上書き", "\n", "$ ", "echo", " ", "\"", "${", "UNAME", "}", ":", "${", "UNAME", "}", "\"", " | lxc ", "exec", " ", "$CONTAINER", " ", "--", " chpasswd\n", "\n\n", "\n", "メモ、まず、", "lxc exec", " で ssh をパスワードでログインできるようにしておいて、あとは、", "ssh-copy-id", " したほうが手順簡単かも。", "\n", "\n\n", "\n", "LXDコンテナ内で、dockerを動かす", "\n\n", "\n", "docker: Error response from daemon: OCI runtime create failed:", "\n\n", "\n", "LXDコンテナ内で、dockerを動かすと上記エラーが発生することがある。\n", "lxc config set <CONTAINER> security.nesting true", " で解決できる。", "\n", "あるいは、最初から ", "-c security.nesting=true", " オプションを付けて、LXDコンテナを作成しておけばよい。", "\n", "\n\n", "\n", "例）LXDコンテナ作成＆実行", "\n\n", "(", "\n  ", "set", " ", "-ex", "\n\n  ", "IMAGE", "=", "ubuntu-minimal:18.04\n  ", "CONTAINER", "=", "c4\n  ", "UNAME", "=", "ubuntu\n  ", "PUBFILE", "=", "~/.ssh/id_rsa.pub\n\n  ", "# コンテナ作成＆実行", "\n  lxc launch ", "$IMAGE", " ", "$CONTAINER", "\n\n  ", "# ネット接続に失敗することがあるので、少しsleepする。", "\n  ", "# todo: stateを見たほうがいい", "\n  ", "sleep ", "10\n\n  ", "# apt update", "\n  lxc ", "exec", " ", "$CONTAINER", " ", "--", " apt update\n  ", "#lxc exec $CONTAINER -- apt upgrade", "\n\n  ", "# sshd", "\n  lxc ", "exec", " ", "$CONTAINER", " ", "--", " apt ", "install", " ", "-y", " openssh-server\n\n  ", "# $UNAME : 公開鍵登録", "\n  ", "cat", " ", "$PUBFILE", " | lxc ", "exec", " ", "$CONTAINER", " ", "--", " ", "sudo", " ", "--user", " ", "$UNAME", " ", "--login", " sh ", "-c", " ", "'mkdir -p ~/.ssh; chmod 700 ~/.ssh; touch ~/.ssh/authorized_keys; chmod 600 ~/.ssh/authorized_keys; cat - >> ~/.ssh/authorized_keys'", "\n\n  ", "# $UNAME : password設定(sudoするときに使う)", "\n  ", "echo", " ", "\"", "${", "UNAME", "}", ":", "${", "UNAME", "}", "\"", " | lxc ", "exec", " ", "$CONTAINER", " ", "--", " chpasswd\n\n  ", "# timezone", "\n  lxc ", "exec", " ", "$CONTAINER", " ", "--", " ", "ln", " ", "-sf", " /usr/share/zoneinfo/Asia/Tokyo /etc/localtime\n  lxc ", "exec", " ", "$CONTAINER", " ", "--", " apt ", "install", " ", "-y", " tzdata\n  lxc ", "exec", " ", "$CONTAINER", " ", "--", " dpkg-reconfigure ", "--frontend", " noninteractive tzdata\n\n  ", "# ssh 接続確認", "\n  ", "echo", " ", "\"(set -ex; hostname; id)\"", " |  ssh ", "-o", " ", "StrictHostKeyChecking", "=", "no ", "${", "UNAME", "}", "@", "${", "CONTAINER", "}", " ", "--", " bash\n\n  ", "# 作成したコンテナの情報", "\n  lxc config show c1\n  lxc info ", "$CONTAINER", "\n\n  ", "# いろいろインストール", "\n  lxc ", "exec", " ", "$CONTAINER", " ", "--", " apt ", "install", " ", "-y", " curl vim\n\n  ", "# todo: docker install", "\n", ")", "\n", "\n"], "code": ["# リモート登録（ubuntu-minimal という名前で登録）", "\n", "$ ", "lxc remote add ", "--protocol", " simplestreams ubuntu-minimal https://cloud-images.ubuntu.com/minimal/releases/\n\n", "# イメージリスト", "\n", "$ ", "lxc image list ubuntu-minimal:\n", "$ ", "lxc image ", "alias ", "list ubuntu-minimal:\n\n", "# イメージ情報", "\n", "$ ", "lxc image info ubuntu-minimal:18.04\n\n", "# 18.04のイメージから、コンテナ作成＆起動（コンテナ名 minimal）", "\n", "$ ", "lxc launch ubuntu-minimal:18.04 minimal\n\n", "# コンテナに ubuntu でログイン", "\n", "$ ", "lxc ", "exec ", "minimal ", "--", " ", "sudo", " ", "--user", " ubuntu ", "--login", "\n", "$ ", "/usr/bin/systemd-resolve ", "--interface", " ", "${", "LXDINTERFACE", "}", " ", "--set-dns", " ", "${", "LXDDNSIP", "}", " ", "--set-domain", " ", "${", "LXDDOMAIN", "}", "\n", "# lxd_host_dns_start.sh", "\n", "cat", " ", "<<", "'", "__EOS__", "' | sudo tee /usr/local/bin/lxd_host_dns_start.sh > /dev/null\n#!/bin/sh\nLXDINTERFACE=lxdbr0\nLXDDOMAIN=lxd\nLXDDNSIP=", "$(", "lxc network get ", "${", "LXDINTERFACE", "}", " ipv4.address | ", "sed", " ", "-E", " ", "'s#/.+##'", ")", "\n/usr/bin/systemd-resolve --interface ", "${", "LXDINTERFACE", "}", " --set-dns ", "${", "LXDDNSIP", "}", " --set-domain ", "${", "LXDDOMAIN", "}", "\nsystemd-resolve --status ", "${", "LXDINTERFACE", "}", "\n", "__EOS__\n", "sudo chmod", " +x /usr/local/bin/lxd_host_dns_start.sh\n\n", "# lxd_host_dns_stop.sh", "\n", "cat", " ", "<<", "'", "__EOS__", "' | sudo tee /usr/local/bin/lxd_host_dns_stop.sh > /dev/null\n#!/bin/sh\nLXDINTERFACE=lxdbr0\n/usr/bin/systemd-resolve --interface ", "${", "LXDINTERFACE", "}", " --revert\nsystemd-resolve --status ", "${", "LXDINTERFACE", "}", "\n", "__EOS__\n", "sudo chmod", " +x /usr/local/bin/lxd_host_dns_stop.sh\n\n", "# lxd-host-dns.service", "\n", "cat", " ", "<<", "'", "__EOS__", "' | sudo tee /lib/systemd/system/lxd-host-dns.service > /dev/null\n[Unit]\nDescription=LXD host DNS service\nAfter=lxd-containers.service\n\n[Service]\nType=oneshot\nExecStart=/usr/local/bin/lxd_host_dns_start.sh\nRemainAfterExit=true\nExecStop=/usr/local/bin/lxd_host_dns_stop.sh\nStandardOutput=journal\n\n[Install]\nWantedBy=multi-user.target\n", "__EOS__\n\n", "# サービス起動", "\n", "sudo ", "systemctl start lxd-host-dns\n\n", "# 次回以降の為、サービス有効化", "\n", "sudo ", "systemctl ", "enable ", "lxd-host-dns\n\n", "# サービス設定確認", "\n", "# systemctl list-unit-files --type=service | grep lxd", "\n", "# sudo systemctl status lxd-host-dns", "\n", "# sudo journalctl -u lxd-host-dns", "\n\n", "# DNS現在設定表示", "\n", "# systemd-resolve --status lxdbr0", "\n", "$ ", "lxc network ", "set ", "lxdbr0 ipv6.address none\n", "$ ", "tail", " ", "-f", " /var/log/lxd/lxd.log\n", "$ CONTAINER", "=", "c1  ", "# 登録先コンテナ名", "\n", "$ UNAME", "=", "ubuntu  ", "# 登録先ユーザ名", "\n", "$ PUBFILE", "=", "~/.ssh/id_rsa.pub  ", "# 登録したい公開鍵", "\n\n", "# sshd インストール", "\n", "$ ", "lxc ", "exec", " ", "$CONTAINER", " ", "--", " apt ", "install", " ", "-y", " openssh-server\n\n", "# 公開鍵登録", "\n", "$ ", "cat", " ", "$PUBFILE", " | lxc ", "exec", " ", "$CONTAINER", " ", "--", " ", "sudo", " ", "--user", " ", "$UNAME", " ", "--login", " sh ", "-c", " ", "'mkdir -p ~/.ssh; chmod 700 ~/.ssh; touch ~/.ssh/authorized_keys; chmod 600 ~/.ssh/authorized_keys; cat - >> ~/.ssh/authorized_keys'", "\n\n", "# password上書き", "\n", "$ ", "echo", " ", "\"", "${", "UNAME", "}", ":", "${", "UNAME", "}", "\"", " | lxc ", "exec", " ", "$CONTAINER", " ", "--", " chpasswd\n", "(", "\n  ", "set", " ", "-ex", "\n\n  ", "IMAGE", "=", "ubuntu-minimal:18.04\n  ", "CONTAINER", "=", "c4\n  ", "UNAME", "=", "ubuntu\n  ", "PUBFILE", "=", "~/.ssh/id_rsa.pub\n\n  ", "# コンテナ作成＆実行", "\n  lxc launch ", "$IMAGE", " ", "$CONTAINER", "\n\n  ", "# ネット接続に失敗することがあるので、少しsleepする。", "\n  ", "# todo: stateを見たほうがいい", "\n  ", "sleep ", "10\n\n  ", "# apt update", "\n  lxc ", "exec", " ", "$CONTAINER", " ", "--", " apt update\n  ", "#lxc exec $CONTAINER -- apt upgrade", "\n\n  ", "# sshd", "\n  lxc ", "exec", " ", "$CONTAINER", " ", "--", " apt ", "install", " ", "-y", " openssh-server\n\n  ", "# $UNAME : 公開鍵登録", "\n  ", "cat", " ", "$PUBFILE", " | lxc ", "exec", " ", "$CONTAINER", " ", "--", " ", "sudo", " ", "--user", " ", "$UNAME", " ", "--login", " sh ", "-c", " ", "'mkdir -p ~/.ssh; chmod 700 ~/.ssh; touch ~/.ssh/authorized_keys; chmod 600 ~/.ssh/authorized_keys; cat - >> ~/.ssh/authorized_keys'", "\n\n  ", "# $UNAME : password設定(sudoするときに使う)", "\n  ", "echo", " ", "\"", "${", "UNAME", "}", ":", "${", "UNAME", "}", "\"", " | lxc ", "exec", " ", "$CONTAINER", " ", "--", " chpasswd\n\n  ", "# timezone", "\n  lxc ", "exec", " ", "$CONTAINER", " ", "--", " ", "ln", " ", "-sf", " /usr/share/zoneinfo/Asia/Tokyo /etc/localtime\n  lxc ", "exec", " ", "$CONTAINER", " ", "--", " apt ", "install", " ", "-y", " tzdata\n  lxc ", "exec", " ", "$CONTAINER", " ", "--", " dpkg-reconfigure ", "--frontend", " noninteractive tzdata\n\n  ", "# ssh 接続確認", "\n  ", "echo", " ", "\"(set -ex; hostname; id)\"", " |  ssh ", "-o", " ", "StrictHostKeyChecking", "=", "no ", "${", "UNAME", "}", "@", "${", "CONTAINER", "}", " ", "--", " bash\n\n  ", "# 作成したコンテナの情報", "\n  lxc config show c1\n  lxc info ", "$CONTAINER", "\n\n  ", "# いろいろインストール", "\n  lxc ", "exec", " ", "$CONTAINER", " ", "--", " apt ", "install", " ", "-y", " curl vim\n\n  ", "# todo: docker install", "\n", ")", "\n"]},
{"title": ["Apple Watchアプリのseries 4対応化"], "body": ["Apple Watch series 4が発表されました。", "\n画面が大きくなり、iPhone Xのような角丸のOLEDが搭載されています。", "\niPhone Xのノッチや角丸に対応させるためにiOS 11ではSafe Areaというのが導入されたように、watchOS5でもseries 4の角丸に対応させるためSafe Areaが導入されました。", "\nその点色々とややこしくなったので、そのまとめです。", "\n\n", "基本的にはここの内容になってます", "\n", "Designing for Apple Watch Series 4", "\n\n", "\n", "画面サイズ", "\n\n", "\n", "\n", "\n", "モデル", "\n", "画面解像度", "\n", "ポイント", "\n", "倍率", "\n", "\n", "\n", "\n", "\n", "38mm", "\n", "272x340", "\n", "136x170", "\n", "2", "\n", "\n", "\n", "40mm", "\n", "324x394", "\n", "162x197", "\n", "2", "\n", "\n", "\n", "42mm", "\n", "312x390", "\n", "156x195", "\n", "2", "\n", "\n", "\n", "44mm", "\n", "368x448", "\n", "184x224", "\n", "2", "\n", "\n", "\n", "\n\n", "40mmと42mmを比較すると、40mmのほうが少しだけ画面解像度が大きいですが、ほとんど違いはありません。", "\nなので、画面をレイアウトするときは、40mmと42mmのサイズを共通にし、38mmではそれをスケールダウン、44mmではスケールアップをすればいいみたいです。", "\n\n", "画面サイズによって実行するプログラムを変えたい場合、", "\n", "WKInterfaceDevice.current().screenBounds", "でポイントの値が取得できるので、それを使ってif分岐しましょう。", "\n\n", "\n", "Safe Area", "\n\n", "Apple Watch series 4ではiPhone Xのように画面四隅が丸くなっています。", "\nそのため、画面いっぱいにコンテンツを表示すると、四隅が欠けてしまいます。", "\nSafe Areaはそれを防ぐために、コンテンツが欠けることなく表示できる長方形のエリアを定めたものです。", "\nApple Watch series 4では、下の表に書いてあるサイズで上下に余白を設けて定義してあります。", "\n\n", "\n", "\n", "\n", "モデル", "\n", "top", "\n", "left", "\n", "bottom", "\n", "right", "\n", "\n", "\n", "\n", "\n", "series4 40mm", "\n", "28pt", "\n", "0.5pt", "\n", "28pt", "\n", "0.5pt", "\n", "\n", "\n", "series4 44mm", "\n", "31pt", "\n", "0.5pt", "\n", "31pt", "\n", "0.5pt", "\n", "\n", "\n", "\n\n", "\n", "Storyboard", "\n\n", "Storyboardでは自動でSafe Area内に配置されます。", "\nHeightをRelative Containerで1倍にすればSafe Area内で最大の高さになりますし、", "\nVertical AlignをBottomにすればSafe Areaの下部につきます。", "\n\n", "しかし、スクロールをしない1画面のレイアウトではSafe Area外の領域も使っていっぱいに表示させたい場合がほとんどでしょう。", "\nそんなときは、Interface ControllerのFixed to screen edgesをオンにすれば、Safe Areaを無視して画面いっぱいにレイアウトされるようになります。", "\n\n", "\n\n", "実行結果はこんな感じ", "\n\n", "\n\n", "左からそれぞれ", "\n\n", "\n", "series 3 42mm", "\n", "series 4 40mm, Fixed to screen edgesオフ", "\n", "series 4 40mm, Fixed to screen edgesオン", "\n", "\n\n", "です。", "\n\n", "ちなみに、StoryboardのプレビューはSafeAreaや画面の角丸を反映していないので、シミュレータで実行しないとレイアウトの確認はあんまりできない。早く対応してくれないかな。", "\n\n", "\n", "Swift", "\n\n", "watchOS5では、WKInterfaceControllerがcontentSafeAreaInsetsという値を持っており、これがSafe Area外部の余白のサイズになります。", "\n\n", "ただし、僕の環境で確認すると、初回にawakeとwillActivateが呼び出されるタイミングではcontentSafeAreaInsetsがゼロになっており、didAppearの時点では正確な値が格納されていたので、プログラムからInterfaceController表示時にレイアウト調整を行なっている人は注意してください。", "\n"], "code": []},
{"title": ["第10回UE4ぷちコン振り返り(その②UIときどきマテリアル編)"], "body": ["その①はこちら↓", "\n", "第10回UE4ぷちコン振り返り(その①マテリアル編)", "\n\n", "\n", "UIについて", "\n\n", "作成しているときに様々な発見があったり、ちょっとした工夫で何かのゲームでも見たようなUIを作成できたりしたので、今回はUIについてまとめます。", "\n\n", "\n", "メニュー", "\n\n", "\n始める,遊び方,終わると縦に並んでいる部分です。", "\nスティック操作で選択をし、ボタン入力で決定するというよくあるモノなのですが、「これでいいの!?」って感じで簡単に実装できたのでメモしておきます。", "\nちなみに、このメニューの項目一つ一つはTextを配置し、それをButtonでラップして作成しています。ButtonのBackgroundColorのαを0にするとこのような見た目になります。", "\n\n", "まずはレベルブループリントのほうから", "\n", "\nウィジェットを作成したあと、SetInputModeGameAndUIを使います。In Widget to Focusには、あらかじめ選択しておきたい項目のButtonをつなぎます。", "\n\n", "widgetBPはこんな感じです。", "\n", "\nForeachLoopで選択している項目を探します。選択しているかどうかわかりやすくするために、色などを変更する場合はこの方法で選択しているものを取得するようにしました。", "\n\n", "入力があったときの処理はOnClickedイベントで作成します。", "\n", "\nシーン遷移を行う場合は、イベントディスパッチャーを作成し、レベルブループリントで割り当てるようにしました。", "\nただのTextではなくButtonでラップすることで、作りやすく変更にも強いメニューが作成できたと思います。", "\n\n", "\n", "タイマー", "\n\n", "\nタイマーといっても円形ゲージの話になっちゃてます。", "\n\n", "まずはマテリアルから。", "\n", "\n無理やり一画面に収めたので見づらくなってますごめんなさい。", "\n左端にあるvalueが「残り時間の最大値～0」のいずれかを表します。", "\n使用したテクスチャは以下の通りです。", "\n", "\n", "\n", "\n\n", "ifで残り時間が少なくなった時に赤色に点滅するようにしました。", "\nまた、ノーマルマップから各色の数値を取得し、絵画風表現を可能にしています。(最初からこんな感じのテクスチャを用意すれば、わざわざノーマルマップを利用することなかったのでは？と後から思いました。)", "\n\n", "widgetBPはこんな感じです。", "\n", "\nConstructでDynamicMaterialInstanceを作成し、それをSetしてやります。", "\n", "\nあとはTickイベントでDynamicMaterialInstanceに値を渡すだけです。", "\n\n", "\n", "ワイプ", "\n\n", "プレイヤーがどこにミルクを注いでいるかをわかりやすくするために、画面左上にワイプを配置しています。", "\n", "\nマテリアルはこんな感じです。", "\n", "\nRenderTarget2Dテクスチャを作成し、以下のテクスチャで角が丸くなるようにしています。", "\n", "\nどうにかして角を丸くしたいと考えていたのですが、ただのテクスチャと同じように扱ってみたらうまくいきました。", "\n\n", "\n", "細かい話", "\n\n", "Add to Viewport と Remove from Parent のターゲットは複数つなぐことができます。これに気が付くまでは、ウィジェットの数だけAdd to Viewportを呼んでいました。同じタイミングで表示する場合は、一度だけ呼ぶようにすればよいので、ブループリントがかなりすっきりします。(しっかりと計測したわけではないのですが、関数を呼ぶ回数も減っているので多少パフォーマンスも向上していると思いたいです)", "\n\n", "\n", "参考にしたところ", "\n\n", "\n", "UE4でUIをゲームパッド(キーボード)で操作する", "\n", "マテリアルを使ったゲージ", "\n", "【UE4】円形ゲージのはじまりの位置を変えてみた", "\n", "【UE4】映像をレンダーテクスチャーで投影する方法", "\n", "\n\n", "おわり(^o^)", "\n"], "code": []}
]